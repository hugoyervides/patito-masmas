
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGAND CHAR COLON COMMA COMMENT COMPAR CTE_C CTE_F CTE_I CTE_S DESDE DET DIV DOT ENTONCES EQ ESCRIBE FLOAT FUNCION GREATER GREATER_EQ HACER HASTA HAZ ID INT INV LBRACKET LEE LESS LESS_EQ LPAREN LSQ MIENTRAS MINUS MULT NOT_EQ NULL OR PLUS PRINCIPAL PROGRAMA RBRACKET RPAREN RSQ SEMI_COLON SI SINO TRAN VAR VOIDEMPTY :MAIN : PRINCIPAL push_main LPAREN RPAREN BLOQUEPROG : PROGRAMA ID SEMI_COLON VARS FUNCTION MAINVARS : VAR TIPO\n            | EMPTYTIPO : INT push_type VAR_INT SEMI_COLON TIPO\n            | FLOAT push_type VAR_TIPO SEMI_COLON TIPO\n            | CHAR push_type VAR_TIPO SEMI_COLON TIPO\n            | EMPTYVAR_INT : LIST_ID push_var COMMA VAR_INT\n                | ID push_var COMMA VAR_INT\n                | LIST_ID push_var\n                | ID push_varVAR_TIPO : ID push_var COMMA\n                | ID push_varLIST_ID : ID push_var LSQ SLEVEL_EXPRESION RSQ\n                | ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ\n    EXPRESION : TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUXEXPRESION_AUX : COMPAR r_new_operator EXPRESION\n                    | AND r_new_operator EXPRESION\n                    | OR r_new_operator EXPRESION\n                    | EMPTYTLEVEL_EXPRESION : SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUXTLEVEL_EXPRESION_AUX : NOT_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER_EQ r_new_operator TLEVEL_EXPRESION\n                            | LESS_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER r_new_operator TLEVEL_EXPRESION\n                            | LESS r_new_operator TLEVEL_EXPRESION\n                            | EMPTYSLEVEL_EXPRESION : FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUXSLEVEL_EXPRESION_AUX : PLUS r_new_operator SLEVEL_EXPRESION\n                            | MINUS r_new_operator SLEVEL_EXPRESION\n                            | EMPTYFLEVEL_EXPRESION : VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUXFLEVEL_EXPRESION_AUX : MULT r_new_operator FLEVEL_EXPRESION\n                            | DIV r_new_operator FLEVEL_EXPRESION\n                            | EMPTYVALUE_EXPRESION : ID r_new_id\n                    | ID DET\n                    | LIST_ID\n                    | CONSTANTE \n                    | LLAMADA\n                    | r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen\n    CONSTANTE : CTE_I r_new_constant\n                | CTE_F r_new_constant\n                | CTE_C r_new_constant\n                | CTE_S r_new_constant\n    BLOQUE : LBRACKET OPCION_BLOQUE RBRACKETOPCION_BLOQUE : LECTURA SEMI_COLON OPCION_BLOQUE\n                    | ESCRITURA SEMI_COLON OPCION_BLOQUE\n                    | LLAMADA SEMI_COLON OPCION_BLOQUE\n                    | ESTATUTO OPCION_BLOQUE\n                    | MIENTRAS_CICLO OPCION_BLOQUE\n                    | DESDE_CICLO OPCION_BLOQUE\n                    | ASIGNACION SEMI_COLON OPCION_BLOQUE\n                    | EMPTY\n    FUNCTION : FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION\n                | EMPTYTIPO_FUNC : INT\n                | FLOAT\n                | CHAR\n                | VOIDPARAMETROS : AUX_PARAM\n                | EMPTYAUX_PARAM : INT ID NEXT_PARAM\n                | FLOAT ID NEXT_PARAM\n                | CHAR ID NEXT_PARAMNEXT_PARAM : COMMA AUX_PARAM\n                    | EMPTY DESDE_CICLO : DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUEMIENTRAS_CICLO : MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUELECTURA : LEE LPAREN ID RPARENESCRITURA : ESCRIBE LPAREN TIPO_PARAMETROS RPARENLLAMADA : ID LPAREN TIPO_PARAMETROS RPARENTIPO_PARAMETROS : EXPRESION\n                        | EXPRESION COMMA TIPO_PARAMETROSESTATUTO : SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINOESTATUTO_SINO : SINO BLOQUE\n                    | EMPTYASIGNACION : ID EQ EXPRESION\n                    | LIST_ID EQ EXPRESIONr_new_id : r_new_constant : r_new_lparen : r_new_rparen : r_new_operator : r_new_quadruple_flevel : r_new_quadruple_slevel : r_new_quadruple_tlevel : r_new_quadruple : push_type : push_func : push_var : push_main : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,16,51,105,],[0,-3,-2,-48,]),'ID':([2,12,13,14,18,19,20,21,22,23,24,25,45,46,47,52,56,57,58,77,78,79,87,96,100,105,106,107,108,112,113,114,115,116,117,119,130,132,133,136,137,154,158,159,160,161,171,172,173,176,177,178,179,180,191,192,193,194,195,196,197,198,199,200,210,212,214,215,],[3,-91,-91,-91,27,-59,-60,-61,-62,30,32,32,30,30,61,83,90,91,92,83,83,83,118,61,61,-48,83,83,83,83,144,61,61,61,61,61,61,-86,-86,-86,-86,61,61,61,61,61,-86,-86,-86,-86,-86,-86,-86,-86,61,61,61,61,61,61,61,61,-1,-71,-77,-79,-78,-70,]),'SEMI_COLON':([3,28,29,30,31,32,33,37,38,40,49,59,60,61,63,64,65,66,67,69,70,71,72,74,75,76,80,93,94,97,98,99,101,102,103,104,128,129,131,134,135,138,145,150,153,155,156,162,163,164,170,174,175,181,182,183,184,185,186,187,202,203,204,205,206,207,208,209,],[4,36,-93,-93,39,-93,41,-12,-13,-15,-14,-10,-11,-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,106,107,108,112,-38,-39,-16,-1,-1,-44,-45,-46,-47,-90,-89,-30,-33,-34,-37,-80,-81,-74,-1,-1,-85,-72,-73,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'VAR':([4,89,],[6,6,]),'FUNCION':([4,5,6,7,11,15,36,39,41,44,48,50,105,151,],[-1,9,-1,-5,-4,-9,-1,-1,-1,-6,-7,-8,-48,9,]),'PRINCIPAL':([4,5,6,7,8,10,11,15,36,39,41,44,48,50,105,151,168,],[-1,-1,-1,-5,17,-58,-4,-9,-1,-1,-1,-6,-7,-8,-48,-1,-57,]),'INT':([6,9,36,39,41,43,122,],[12,19,12,12,12,56,56,]),'FLOAT':([6,9,36,39,41,43,122,],[13,20,13,13,13,57,57,]),'CHAR':([6,9,36,39,41,43,122,],[14,21,14,14,14,58,58,]),'LBRACKET':([6,7,11,15,36,39,41,42,44,48,50,89,120,188,189,211,213,],[-1,-5,-4,-9,-1,-1,-1,52,-6,-7,-8,-1,52,52,52,52,52,]),'VOID':([9,],[22,]),'LPAREN':([17,26,27,35,47,61,68,82,83,84,85,86,96,100,114,115,116,117,119,130,132,133,136,137,154,158,159,160,161,171,172,173,176,177,178,179,180,191,192,193,194,195,196,197,198,],[-94,34,-92,43,-84,96,100,113,96,115,116,117,-84,-84,-84,-84,-84,-84,-84,-84,-86,-86,-86,-86,-84,-84,-84,-84,-84,-86,-86,-86,-86,-86,-86,-86,-86,-84,-84,-84,-84,-84,-84,-84,-84,]),'COMMA':([29,30,32,37,38,40,61,63,64,65,66,67,69,70,71,72,90,91,92,93,94,97,98,99,101,102,103,104,127,128,129,131,134,135,138,153,155,156,162,170,174,175,181,182,183,184,185,186,187,202,203,204,205,206,207,208,209,],[-93,-93,-93,45,46,49,-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,122,122,122,-38,-39,-16,-1,-1,-44,-45,-46,-47,154,-90,-89,-30,-33,-34,-37,-74,-1,-1,-85,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'LSQ':([30,38,61,83,95,97,],[-93,47,-93,-93,47,130,]),'RPAREN':([34,43,53,54,55,61,63,64,65,66,67,69,70,71,72,90,91,92,93,94,97,98,99,101,102,103,104,121,123,124,125,126,127,128,129,131,134,135,138,139,144,146,147,148,152,153,155,156,162,169,170,174,175,181,182,183,184,185,186,187,202,203,204,205,206,207,208,209,],[42,-1,89,-63,-64,-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-1,-1,-1,-38,-39,-16,-1,-1,-44,-45,-46,-47,-65,-69,-66,-67,153,-75,-90,-89,-30,-33,-34,-37,162,163,164,165,166,-68,-74,-1,-1,-85,-76,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'CTE_I':([47,96,100,114,115,116,117,119,130,132,133,136,137,149,154,158,159,160,161,171,172,173,176,177,178,179,180,190,191,192,193,194,195,196,197,198,],[69,69,69,69,69,69,69,69,69,-86,-86,-86,-86,167,69,69,69,69,69,-86,-86,-86,-86,-86,-86,-86,-86,201,69,69,69,69,69,69,69,69,]),'CTE_F':([47,96,100,114,115,116,117,119,130,132,133,136,137,154,158,159,160,161,171,172,173,176,177,178,179,180,191,192,193,194,195,196,197,198,],[70,70,70,70,70,70,70,70,70,-86,-86,-86,-86,70,70,70,70,70,-86,-86,-86,-86,-86,-86,-86,-86,70,70,70,70,70,70,70,70,]),'CTE_C':([47,96,100,114,115,116,117,119,130,132,133,136,137,154,158,159,160,161,171,172,173,176,177,178,179,180,191,192,193,194,195,196,197,198,],[71,71,71,71,71,71,71,71,71,-86,-86,-86,-86,71,71,71,71,71,-86,-86,-86,-86,-86,-86,-86,-86,71,71,71,71,71,71,71,71,]),'CTE_S':([47,96,100,114,115,116,117,119,130,132,133,136,137,154,158,159,160,161,171,172,173,176,177,178,179,180,191,192,193,194,195,196,197,198,],[72,72,72,72,72,72,72,72,72,-86,-86,-86,-86,72,72,72,72,72,-86,-86,-86,-86,-86,-86,-86,-86,72,72,72,72,72,72,72,72,]),'LEE':([52,77,78,79,105,106,107,108,112,199,200,210,212,214,215,],[82,82,82,82,-48,82,82,82,82,-1,-71,-77,-79,-78,-70,]),'ESCRIBE':([52,77,78,79,105,106,107,108,112,199,200,210,212,214,215,],[84,84,84,84,-48,84,84,84,84,-1,-71,-77,-79,-78,-70,]),'SI':([52,77,78,79,105,106,107,108,112,199,200,210,212,214,215,],[85,85,85,85,-48,85,85,85,85,-1,-71,-77,-79,-78,-70,]),'MIENTRAS':([52,77,78,79,105,106,107,108,112,199,200,210,212,214,215,],[86,86,86,86,-48,86,86,86,86,-1,-71,-77,-79,-78,-70,]),'DESDE':([52,77,78,79,105,106,107,108,112,199,200,210,212,214,215,],[87,87,87,87,-48,87,87,87,87,-1,-71,-77,-79,-78,-70,]),'RBRACKET':([52,73,77,78,79,81,105,106,107,108,109,110,111,112,140,141,142,143,199,200,210,212,214,215,],[-1,105,-1,-1,-1,-56,-48,-1,-1,-1,-52,-53,-54,-1,-49,-50,-51,-55,-1,-71,-77,-79,-78,-70,]),'DET':([61,],[94,]),'MULT':([61,64,65,66,67,69,70,71,72,93,94,97,99,101,102,103,104,153,162,182,187,],[-82,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,136,-44,-45,-46,-47,-74,-85,-17,-43,]),'DIV':([61,64,65,66,67,69,70,71,72,93,94,97,99,101,102,103,104,153,162,182,187,],[-82,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,137,-44,-45,-46,-47,-74,-85,-17,-43,]),'PLUS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,135,138,153,162,182,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,132,-1,-44,-45,-46,-47,-34,-37,-74,-85,-17,-35,-36,-43,]),'MINUS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,135,138,153,162,182,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,133,-1,-44,-45,-46,-47,-34,-37,-74,-85,-17,-35,-36,-43,]),'RSQ':([61,62,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,131,134,135,138,153,157,162,182,183,184,185,186,187,],[-82,97,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-30,-33,-34,-37,-74,182,-85,-17,-31,-32,-35,-36,-43,]),'NOT_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,129,131,134,135,138,153,156,162,182,183,184,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-89,-30,-33,-34,-37,-74,176,-85,-17,-31,-32,-35,-36,-43,]),'GREATER_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,129,131,134,135,138,153,156,162,182,183,184,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-89,-30,-33,-34,-37,-74,177,-85,-17,-31,-32,-35,-36,-43,]),'LESS_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,129,131,134,135,138,153,156,162,182,183,184,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-89,-30,-33,-34,-37,-74,178,-85,-17,-31,-32,-35,-36,-43,]),'GREATER':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,129,131,134,135,138,153,156,162,182,183,184,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-89,-30,-33,-34,-37,-74,179,-85,-17,-31,-32,-35,-36,-43,]),'LESS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,129,131,134,135,138,153,156,162,182,183,184,185,186,187,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-89,-30,-33,-34,-37,-74,180,-85,-17,-31,-32,-35,-36,-43,]),'COMPAR':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,128,129,131,134,135,138,153,155,156,162,175,181,182,183,184,185,186,187,205,206,207,208,209,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-90,-89,-30,-33,-34,-37,-74,171,-1,-85,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'AND':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,128,129,131,134,135,138,153,155,156,162,175,181,182,183,184,185,186,187,205,206,207,208,209,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-90,-89,-30,-33,-34,-37,-74,172,-1,-85,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'OR':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,101,102,103,104,128,129,131,134,135,138,153,155,156,162,175,181,182,183,184,185,186,187,205,206,207,208,209,],[-82,-88,-87,-40,-41,-42,-83,-83,-83,-83,-38,-39,-16,-1,-1,-44,-45,-46,-47,-90,-89,-30,-33,-34,-37,-74,173,-1,-85,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'EQ':([83,88,97,118,182,],[114,119,-16,149,-17,]),'SINO':([105,199,],[-48,211,]),'ENTONCES':([165,],[188,]),'HAZ':([166,],[189,]),'HASTA':([167,],[190,]),'HACER':([201,],[213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'VARS':([4,89,],[5,120,]),'EMPTY':([4,5,6,36,39,41,43,52,77,78,79,89,90,91,92,98,99,106,107,108,112,151,155,156,199,],[7,10,15,15,15,15,55,81,81,81,81,7,123,123,123,134,138,81,81,81,81,10,174,181,212,]),'FUNCTION':([5,151,],[8,168,]),'TIPO':([6,36,39,41,],[11,44,48,50,]),'MAIN':([8,],[16,]),'TIPO_FUNC':([9,],[18,]),'push_type':([12,13,14,],[23,24,25,]),'push_main':([17,],[26,]),'VAR_INT':([23,45,46,],[28,59,60,]),'LIST_ID':([23,45,46,47,52,77,78,79,96,100,106,107,108,112,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[29,29,29,65,88,88,88,88,65,65,88,88,88,88,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'VAR_TIPO':([24,25,],[31,33,]),'push_func':([27,],[35,]),'push_var':([29,30,32,61,83,],[37,38,40,95,95,]),'BLOQUE':([42,120,188,189,211,213,],[51,151,199,200,214,215,]),'PARAMETROS':([43,],[53,]),'AUX_PARAM':([43,122,],[54,152,]),'SLEVEL_EXPRESION':([47,96,100,114,115,116,117,119,130,154,158,159,191,192,193,194,195,196,197,198,],[62,129,129,129,129,129,129,129,157,129,183,184,129,129,129,129,129,129,129,129,]),'FLEVEL_EXPRESION':([47,96,100,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[63,63,63,63,63,63,63,63,63,63,63,63,185,186,63,63,63,63,63,63,63,63,]),'VALUE_EXPRESION':([47,96,100,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CONSTANTE':([47,96,100,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LLAMADA':([47,52,77,78,79,96,100,106,107,108,112,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[67,76,76,76,76,67,67,76,76,76,76,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'r_new_lparen':([47,96,100,114,115,116,117,119,130,154,158,159,160,161,191,192,193,194,195,196,197,198,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'OPCION_BLOQUE':([52,77,78,79,106,107,108,112,],[73,109,110,111,140,141,142,143,]),'LECTURA':([52,77,78,79,106,107,108,112,],[74,74,74,74,74,74,74,74,]),'ESCRITURA':([52,77,78,79,106,107,108,112,],[75,75,75,75,75,75,75,75,]),'ESTATUTO':([52,77,78,79,106,107,108,112,],[77,77,77,77,77,77,77,77,]),'MIENTRAS_CICLO':([52,77,78,79,106,107,108,112,],[78,78,78,78,78,78,78,78,]),'DESDE_CICLO':([52,77,78,79,106,107,108,112,],[79,79,79,79,79,79,79,79,]),'ASIGNACION':([52,77,78,79,106,107,108,112,],[80,80,80,80,80,80,80,80,]),'r_new_id':([61,],[93,]),'r_new_quadruple_slevel':([63,],[98,]),'r_new_quadruple_flevel':([64,],[99,]),'r_new_constant':([69,70,71,72,],[101,102,103,104,]),'NEXT_PARAM':([90,91,92,],[121,124,125,]),'TIPO_PARAMETROS':([96,115,154,],[126,146,169,]),'EXPRESION':([96,100,114,115,116,117,119,154,191,192,193,],[127,139,145,127,147,148,150,127,202,203,204,]),'TLEVEL_EXPRESION':([96,100,114,115,116,117,119,154,191,192,193,194,195,196,197,198,],[128,128,128,128,128,128,128,128,128,128,128,205,206,207,208,209,]),'SLEVEL_EXPRESION_AUX':([98,],[131,]),'FLEVEL_EXPRESION_AUX':([99,],[135,]),'r_new_quadruple':([128,],[155,]),'r_new_quadruple_tlevel':([129,],[156,]),'r_new_operator':([132,133,136,137,171,172,173,176,177,178,179,180,],[158,159,160,161,191,192,193,194,195,196,197,198,]),'EXPRESION_AUX':([155,],[170,]),'TLEVEL_EXPRESION_AUX':([156,],[175,]),'r_new_rparen':([162,],[187,]),'ESTATUTO_SINO':([199,],[210,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','parser.py',42),
  ('MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE','MAIN',5,'p_MAIN','parser.py',46),
  ('PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN','PROG',6,'p_PROG','parser.py',50),
  ('VARS -> VAR TIPO','VARS',2,'p_VARS','parser.py',54),
  ('VARS -> EMPTY','VARS',1,'p_VARS','parser.py',55),
  ('TIPO -> INT push_type VAR_INT SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',59),
  ('TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',60),
  ('TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',61),
  ('TIPO -> EMPTY','TIPO',1,'p_TIPO','parser.py',62),
  ('VAR_INT -> LIST_ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',66),
  ('VAR_INT -> ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',67),
  ('VAR_INT -> LIST_ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',68),
  ('VAR_INT -> ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',69),
  ('VAR_TIPO -> ID push_var COMMA','VAR_TIPO',3,'p_VAR_TIPO','parser.py',73),
  ('VAR_TIPO -> ID push_var','VAR_TIPO',2,'p_VAR_TIPO','parser.py',74),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ','LIST_ID',5,'p_LIST_ID','parser.py',78),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ','LIST_ID',8,'p_LIST_ID','parser.py',79),
  ('EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX','EXPRESION',3,'p_EXPRESION','parser.py',87),
  ('EXPRESION_AUX -> COMPAR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',91),
  ('EXPRESION_AUX -> AND r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',92),
  ('EXPRESION_AUX -> OR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',93),
  ('EXPRESION_AUX -> EMPTY','EXPRESION_AUX',1,'p_EXPRESION_AUX','parser.py',94),
  ('TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX','TLEVEL_EXPRESION',3,'p_TLEVEL_EXPRESION','parser.py',98),
  ('TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',102),
  ('TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',103),
  ('TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',104),
  ('TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',105),
  ('TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',106),
  ('TLEVEL_EXPRESION_AUX -> EMPTY','TLEVEL_EXPRESION_AUX',1,'p_TLEVEL_EXPRESION_AUX','parser.py',107),
  ('SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX','SLEVEL_EXPRESION',3,'p_SLEVEL_EXPRESION','parser.py',111),
  ('SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',115),
  ('SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',116),
  ('SLEVEL_EXPRESION_AUX -> EMPTY','SLEVEL_EXPRESION_AUX',1,'p_SLEVEL_EXPRESION_AUX','parser.py',117),
  ('FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX','FLEVEL_EXPRESION',3,'p_FLEVEL_EXPRESION','parser.py',121),
  ('FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',125),
  ('FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',126),
  ('FLEVEL_EXPRESION_AUX -> EMPTY','FLEVEL_EXPRESION_AUX',1,'p_FLEVEL_EXPRESION_AUX','parser.py',127),
  ('VALUE_EXPRESION -> ID r_new_id','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',131),
  ('VALUE_EXPRESION -> ID DET','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',132),
  ('VALUE_EXPRESION -> LIST_ID','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',133),
  ('VALUE_EXPRESION -> CONSTANTE','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',134),
  ('VALUE_EXPRESION -> LLAMADA','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',135),
  ('VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen','VALUE_EXPRESION',5,'p_VALUE_EXPRESION','parser.py',136),
  ('CONSTANTE -> CTE_I r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',140),
  ('CONSTANTE -> CTE_F r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',141),
  ('CONSTANTE -> CTE_C r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',142),
  ('CONSTANTE -> CTE_S r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',143),
  ('BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET','BLOQUE',3,'p_BLOQUE','parser.py',151),
  ('OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',155),
  ('OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',156),
  ('OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',157),
  ('OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',158),
  ('OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',159),
  ('OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',160),
  ('OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',161),
  ('OPCION_BLOQUE -> EMPTY','OPCION_BLOQUE',1,'p_OPCION_BLOQUE','parser.py',162),
  ('FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION','FUNCTION',10,'p_FUNCTION','parser.py',172),
  ('FUNCTION -> EMPTY','FUNCTION',1,'p_FUNCTION','parser.py',173),
  ('TIPO_FUNC -> INT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',177),
  ('TIPO_FUNC -> FLOAT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',178),
  ('TIPO_FUNC -> CHAR','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',179),
  ('TIPO_FUNC -> VOID','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',180),
  ('PARAMETROS -> AUX_PARAM','PARAMETROS',1,'p_PARAMETROS','parser.py',184),
  ('PARAMETROS -> EMPTY','PARAMETROS',1,'p_PARAMETROS','parser.py',185),
  ('AUX_PARAM -> INT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',189),
  ('AUX_PARAM -> FLOAT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',190),
  ('AUX_PARAM -> CHAR ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',191),
  ('NEXT_PARAM -> COMMA AUX_PARAM','NEXT_PARAM',2,'p_NEXT_PARAM','parser.py',195),
  ('NEXT_PARAM -> EMPTY','NEXT_PARAM',1,'p_NEXT_PARAM','parser.py',196),
  ('DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE','DESDE_CICLO',8,'p_DESDE_CICLO','parser.py',200),
  ('MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE','MIENTRAS_CICLO',6,'p_MIENTRAS_CICLO','parser.py',205),
  ('LECTURA -> LEE LPAREN ID RPAREN','LECTURA',4,'p_LECTURA','parser.py',210),
  ('ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN','ESCRITURA',4,'p_ESCRITURA','parser.py',215),
  ('LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN','LLAMADA',4,'p_LLAMADA','parser.py',220),
  ('TIPO_PARAMETROS -> EXPRESION','TIPO_PARAMETROS',1,'p_TIPO_PARAMETROS','parser.py',224),
  ('TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS','TIPO_PARAMETROS',3,'p_TIPO_PARAMETROS','parser.py',225),
  ('ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO','ESTATUTO',7,'p_ESTATUTO','parser.py',230),
  ('ESTATUTO_SINO -> SINO BLOQUE','ESTATUTO_SINO',2,'p_ESTATUTO_SINO','parser.py',234),
  ('ESTATUTO_SINO -> EMPTY','ESTATUTO_SINO',1,'p_ESTATUTO_SINO','parser.py',235),
  ('ASIGNACION -> ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',240),
  ('ASIGNACION -> LIST_ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',241),
  ('r_new_id -> <empty>','r_new_id',0,'p_r_new_id','parser.py',249),
  ('r_new_constant -> <empty>','r_new_constant',0,'p_r_new_constant','parser.py',253),
  ('r_new_lparen -> <empty>','r_new_lparen',0,'p_r_new_lparen','parser.py',257),
  ('r_new_rparen -> <empty>','r_new_rparen',0,'p_r_new_rparen','parser.py',261),
  ('r_new_operator -> <empty>','r_new_operator',0,'p_r_new_operator','parser.py',265),
  ('r_new_quadruple_flevel -> <empty>','r_new_quadruple_flevel',0,'p_r_new_quadruple_flevel','parser.py',269),
  ('r_new_quadruple_slevel -> <empty>','r_new_quadruple_slevel',0,'p_r_new_quadruple_slevel','parser.py',274),
  ('r_new_quadruple_tlevel -> <empty>','r_new_quadruple_tlevel',0,'p_r_new_quadruple_tlevel','parser.py',279),
  ('r_new_quadruple -> <empty>','r_new_quadruple',0,'p_r_new_quadruple','parser.py',284),
  ('push_type -> <empty>','push_type',0,'p_r_push_type','parser.py',296),
  ('push_func -> <empty>','push_func',0,'p_r_push_func','parser.py',303),
  ('push_var -> <empty>','push_var',0,'p_r_push_var','parser.py',317),
  ('push_main -> <empty>','push_main',0,'p_r_push_main','parser.py',328),
]
