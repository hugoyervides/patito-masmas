
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGAND CHAR COLON COMMA COMMENT COMPAR CTE_C CTE_F CTE_I CTE_S DESDE DET DIV DOT ENTONCES EQ ESCRIBE FLOAT FUNCION GREATER GREATER_EQ HACER HASTA HAZ ID INT INV LBRACKET LEE LESS LESS_EQ LPAREN LSQ MIENTRAS MINUS MULT NOT_EQ NULL OR PLUS PRINCIPAL PROGRAMA RBRACKET RPAREN RSQ SEMI_COLON SI SINO TRAN VAR VOIDEMPTY :MAIN : PRINCIPAL push_main LPAREN RPAREN BLOQUEPROG : PROGRAMA ID SEMI_COLON VARS FUNCTION MAINVARS : VAR TIPO\n            | EMPTYTIPO : INT push_type VAR_INT SEMI_COLON TIPO\n            | FLOAT push_type VAR_TIPO SEMI_COLON TIPO\n            | CHAR push_type VAR_TIPO SEMI_COLON TIPO\n            | EMPTYVAR_INT : LIST_ID push_var COMMA VAR_INT\n                | ID push_var COMMA VAR_INT\n                | LIST_ID push_var\n                | ID push_varVAR_TIPO : ID push_var COMMA\n                | ID push_varLIST_ID : ID push_var LSQ SLEVEL_EXPRESION RSQ\n                | ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ\n    EXPRESION : TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUXEXPRESION_AUX : COMPAR r_new_operator EXPRESION\n                    | AND r_new_operator EXPRESION\n                    | OR r_new_operator EXPRESION\n                    | EMPTYTLEVEL_EXPRESION : SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUXTLEVEL_EXPRESION_AUX : NOT_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER_EQ r_new_operator TLEVEL_EXPRESION\n                            | LESS_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER r_new_operator TLEVEL_EXPRESION\n                            | LESS r_new_operator TLEVEL_EXPRESION\n                            | EMPTYSLEVEL_EXPRESION : FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUXSLEVEL_EXPRESION_AUX : PLUS r_new_operator SLEVEL_EXPRESION\n                            | MINUS r_new_operator SLEVEL_EXPRESION\n                            | EMPTYFLEVEL_EXPRESION : VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUXFLEVEL_EXPRESION_AUX : MULT r_new_operator FLEVEL_EXPRESION\n                            | DIV r_new_operator FLEVEL_EXPRESION\n                            | EMPTYVALUE_EXPRESION : ID r_new_id\n                    | ID DET\n                    | LIST_ID\n                    | CONSTANTE \n                    | LLAMADA\n                    | r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen\n    CONSTANTE : CTE_I r_new_constant\n                | CTE_F r_new_constant\n                | CTE_C r_new_constant\n                | CTE_S r_new_constant\n    BLOQUE : LBRACKET OPCION_BLOQUE RBRACKETOPCION_BLOQUE : LECTURA SEMI_COLON OPCION_BLOQUE\n                    | ESCRITURA SEMI_COLON OPCION_BLOQUE\n                    | LLAMADA SEMI_COLON OPCION_BLOQUE\n                    | ESTATUTO OPCION_BLOQUE\n                    | MIENTRAS_CICLO OPCION_BLOQUE\n                    | DESDE_CICLO OPCION_BLOQUE\n                    | ASIGNACION SEMI_COLON OPCION_BLOQUE\n                    | EMPTY\n    FUNCTION : FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION\n                | EMPTYTIPO_FUNC : INT\n                | FLOAT\n                | CHAR\n                | VOIDPARAMETROS : AUX_PARAM\n                | EMPTYAUX_PARAM : INT ID NEXT_PARAM\n                | FLOAT ID NEXT_PARAM\n                | CHAR ID NEXT_PARAMNEXT_PARAM : COMMA AUX_PARAM\n                    | EMPTY DESDE_CICLO : DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUEMIENTRAS_CICLO : MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUELECTURA : LEE LPAREN ID RPARENESCRITURA : ESCRIBE LPAREN TIPO_PARAMETROS RPARENLLAMADA : ID LPAREN TIPO_PARAMETROS RPARENTIPO_PARAMETROS : EXPRESION\n                        | EXPRESION COMMA TIPO_PARAMETROSESTATUTO : SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINOESTATUTO_SINO : SINO BLOQUE\n                    | EMPTYASIGNACION : EXPRESION ASIGNACION_AUX r_new_equalASIGNACION_AUX : EQ r_new_operator ASIGNACION\n                    | EMPTY\n    r_new_id : r_new_constant : r_new_lparen : r_new_rparen : r_new_operator : r_new_quadruple_flevel : r_new_quadruple_slevel : r_new_quadruple_tlevel : r_new_quadruple : r_new_equal : push_type : push_func : push_var : push_main : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,16,51,107,],[0,-3,-2,-48,]),'ID':([2,12,13,14,18,19,20,21,22,23,24,25,45,46,47,52,56,57,58,77,78,79,88,98,102,107,108,109,110,114,115,116,117,119,121,133,135,136,139,140,151,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,209,210,212,214,216,217,],[3,-93,-93,-93,27,-59,-60,-61,-62,30,32,32,30,30,61,83,92,93,94,83,83,83,122,61,61,-48,83,83,83,83,147,61,61,-87,61,61,-87,-87,-87,-87,61,-87,-87,-87,-87,-87,-87,-87,-87,61,61,61,61,61,61,61,61,61,61,61,61,61,-1,-71,-77,-79,-78,-70,]),'SEMI_COLON':([3,28,29,30,31,32,33,37,38,40,49,59,60,61,63,64,65,66,67,69,70,71,72,74,75,76,80,83,86,89,90,95,96,99,100,101,103,104,105,106,118,120,123,124,134,137,138,141,150,154,158,159,165,168,175,176,177,179,192,193,194,195,196,197,201,202,203,204,205,206,207,208,],[4,36,-95,-95,39,-95,41,-12,-13,-15,-14,-10,-11,-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,108,109,110,114,-83,-1,-91,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,-92,-82,-1,-1,-30,-33,-34,-37,-80,-18,-22,-23,-29,-74,-86,-72,-73,-81,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'VAR':([4,91,],[6,6,]),'FUNCION':([4,5,6,7,11,15,36,39,41,44,48,50,107,166,],[-1,9,-1,-5,-4,-9,-1,-1,-1,-6,-7,-8,-48,9,]),'PRINCIPAL':([4,5,6,7,8,10,11,15,36,39,41,44,48,50,107,166,190,],[-1,-1,-1,-5,17,-58,-4,-9,-1,-1,-1,-6,-7,-8,-48,-1,-57,]),'INT':([6,9,36,39,41,43,127,],[12,19,12,12,12,56,56,]),'FLOAT':([6,9,36,39,41,43,127,],[13,20,13,13,13,57,57,]),'CHAR':([6,9,36,39,41,43,127,],[14,21,14,14,14,58,58,]),'LBRACKET':([6,7,11,15,36,39,41,42,44,48,50,91,125,198,199,213,215,],[-1,-5,-4,-9,-1,-1,-1,52,-6,-7,-8,-1,52,52,52,52,52,]),'VOID':([9,],[22,]),'LPAREN':([17,26,27,35,47,52,61,68,77,78,79,82,83,84,85,87,98,102,107,108,109,110,114,116,117,119,121,133,135,136,139,140,151,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,209,210,212,214,216,217,],[-96,34,-94,43,-85,-85,98,102,-85,-85,-85,115,98,116,117,121,-85,-85,-48,-85,-85,-85,-85,-85,-85,-87,-85,-85,-87,-87,-87,-87,-85,-87,-87,-87,-87,-87,-87,-87,-87,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-1,-71,-77,-79,-78,-70,]),'COMMA':([29,30,32,37,38,40,61,63,64,65,66,67,69,70,71,72,89,90,92,93,94,95,96,99,100,101,103,104,105,106,123,124,132,134,137,138,141,154,158,159,165,168,175,192,193,194,195,196,197,201,202,203,204,205,206,207,208,],[-95,-95,-95,45,46,49,-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-91,-90,127,127,127,-38,-39,-16,-1,-1,-44,-45,-46,-47,-1,-1,169,-30,-33,-34,-37,-18,-22,-23,-29,-74,-86,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'LSQ':([30,38,61,83,97,99,],[-95,47,-95,-95,47,133,]),'RPAREN':([34,43,53,54,55,61,63,64,65,66,67,69,70,71,72,89,90,92,93,94,95,96,99,100,101,103,104,105,106,123,124,126,128,129,130,131,132,134,137,138,141,142,147,148,149,152,154,158,159,165,167,168,175,191,192,193,194,195,196,197,201,202,203,204,205,206,207,208,],[42,-1,91,-63,-64,-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-91,-90,-1,-1,-1,-38,-39,-16,-1,-1,-44,-45,-46,-47,-1,-1,-65,-69,-66,-67,168,-75,-30,-33,-34,-37,175,176,177,178,180,-18,-22,-23,-29,-68,-74,-86,-76,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'CTE_I':([47,52,77,78,79,98,102,107,108,109,110,114,116,117,119,121,133,135,136,139,140,151,153,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,200,209,210,212,214,216,217,],[69,69,69,69,69,69,69,-48,69,69,69,69,69,69,-87,69,69,-87,-87,-87,-87,69,181,-87,-87,-87,-87,-87,-87,-87,-87,69,69,69,69,69,69,69,69,69,69,69,69,69,211,-1,-71,-77,-79,-78,-70,]),'CTE_F':([47,52,77,78,79,98,102,107,108,109,110,114,116,117,119,121,133,135,136,139,140,151,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,209,210,212,214,216,217,],[70,70,70,70,70,70,70,-48,70,70,70,70,70,70,-87,70,70,-87,-87,-87,-87,70,-87,-87,-87,-87,-87,-87,-87,-87,70,70,70,70,70,70,70,70,70,70,70,70,70,-1,-71,-77,-79,-78,-70,]),'CTE_C':([47,52,77,78,79,98,102,107,108,109,110,114,116,117,119,121,133,135,136,139,140,151,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,209,210,212,214,216,217,],[71,71,71,71,71,71,71,-48,71,71,71,71,71,71,-87,71,71,-87,-87,-87,-87,71,-87,-87,-87,-87,-87,-87,-87,-87,71,71,71,71,71,71,71,71,71,71,71,71,71,-1,-71,-77,-79,-78,-70,]),'CTE_S':([47,52,77,78,79,98,102,107,108,109,110,114,116,117,119,121,133,135,136,139,140,151,155,156,157,160,161,162,163,164,169,171,172,173,174,182,183,184,185,186,187,188,189,209,210,212,214,216,217,],[72,72,72,72,72,72,72,-48,72,72,72,72,72,72,-87,72,72,-87,-87,-87,-87,72,-87,-87,-87,-87,-87,-87,-87,-87,72,72,72,72,72,72,72,72,72,72,72,72,72,-1,-71,-77,-79,-78,-70,]),'LEE':([52,77,78,79,107,108,109,110,114,209,210,212,214,216,217,],[82,82,82,82,-48,82,82,82,82,-1,-71,-77,-79,-78,-70,]),'ESCRIBE':([52,77,78,79,107,108,109,110,114,209,210,212,214,216,217,],[84,84,84,84,-48,84,84,84,84,-1,-71,-77,-79,-78,-70,]),'SI':([52,77,78,79,107,108,109,110,114,209,210,212,214,216,217,],[85,85,85,85,-48,85,85,85,85,-1,-71,-77,-79,-78,-70,]),'MIENTRAS':([52,77,78,79,107,108,109,110,114,209,210,212,214,216,217,],[87,87,87,87,-48,87,87,87,87,-1,-71,-77,-79,-78,-70,]),'DESDE':([52,77,78,79,107,108,109,110,114,209,210,212,214,216,217,],[88,88,88,88,-48,88,88,88,88,-1,-71,-77,-79,-78,-70,]),'RBRACKET':([52,73,77,78,79,81,107,108,109,110,111,112,113,114,143,144,145,146,209,210,212,214,216,217,],[-1,107,-1,-1,-1,-56,-48,-1,-1,-1,-52,-53,-54,-1,-49,-50,-51,-55,-1,-71,-77,-79,-78,-70,]),'DET':([61,83,],[96,96,]),'MULT':([61,64,65,66,67,69,70,71,72,76,83,95,96,99,101,103,104,105,106,168,175,192,197,],[-83,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-38,-39,-16,139,-44,-45,-46,-47,-74,-86,-17,-43,]),'DIV':([61,64,65,66,67,69,70,71,72,76,83,95,96,99,101,103,104,105,106,168,175,192,197,],[-83,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-38,-39,-16,140,-44,-45,-46,-47,-74,-86,-17,-43,]),'PLUS':([61,63,64,65,66,67,69,70,71,72,76,83,95,96,99,100,101,103,104,105,106,138,141,168,175,192,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-38,-39,-16,135,-1,-44,-45,-46,-47,-34,-37,-74,-86,-17,-35,-36,-43,]),'MINUS':([61,63,64,65,66,67,69,70,71,72,76,83,95,96,99,100,101,103,104,105,106,138,141,168,175,192,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-38,-39,-16,136,-1,-44,-45,-46,-47,-34,-37,-74,-86,-17,-35,-36,-43,]),'RSQ':([61,62,63,64,65,66,67,69,70,71,72,95,96,99,100,101,103,104,105,106,134,137,138,141,168,170,175,192,193,194,195,196,197,],[-83,99,-89,-88,-40,-41,-42,-84,-84,-84,-84,-38,-39,-16,-1,-1,-44,-45,-46,-47,-30,-33,-34,-37,-74,192,-86,-17,-31,-32,-35,-36,-43,]),'NOT_EQ':([61,63,64,65,66,67,69,70,71,72,76,83,90,95,96,99,100,101,103,104,105,106,124,134,137,138,141,168,175,192,193,194,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,160,-30,-33,-34,-37,-74,-86,-17,-31,-32,-35,-36,-43,]),'GREATER_EQ':([61,63,64,65,66,67,69,70,71,72,76,83,90,95,96,99,100,101,103,104,105,106,124,134,137,138,141,168,175,192,193,194,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,161,-30,-33,-34,-37,-74,-86,-17,-31,-32,-35,-36,-43,]),'LESS_EQ':([61,63,64,65,66,67,69,70,71,72,76,83,90,95,96,99,100,101,103,104,105,106,124,134,137,138,141,168,175,192,193,194,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,162,-30,-33,-34,-37,-74,-86,-17,-31,-32,-35,-36,-43,]),'GREATER':([61,63,64,65,66,67,69,70,71,72,76,83,90,95,96,99,100,101,103,104,105,106,124,134,137,138,141,168,175,192,193,194,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,163,-30,-33,-34,-37,-74,-86,-17,-31,-32,-35,-36,-43,]),'LESS':([61,63,64,65,66,67,69,70,71,72,76,83,90,95,96,99,100,101,103,104,105,106,124,134,137,138,141,168,175,192,193,194,195,196,197,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,164,-30,-33,-34,-37,-74,-86,-17,-31,-32,-35,-36,-43,]),'COMPAR':([61,63,64,65,66,67,69,70,71,72,76,83,89,90,95,96,99,100,101,103,104,105,106,123,124,134,137,138,141,159,165,168,175,192,193,194,195,196,197,204,205,206,207,208,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-91,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,155,-1,-30,-33,-34,-37,-23,-29,-74,-86,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'AND':([61,63,64,65,66,67,69,70,71,72,76,83,89,90,95,96,99,100,101,103,104,105,106,123,124,134,137,138,141,159,165,168,175,192,193,194,195,196,197,204,205,206,207,208,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-91,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,156,-1,-30,-33,-34,-37,-23,-29,-74,-86,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'OR':([61,63,64,65,66,67,69,70,71,72,76,83,89,90,95,96,99,100,101,103,104,105,106,123,124,134,137,138,141,159,165,168,175,192,193,194,195,196,197,204,205,206,207,208,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,-91,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,157,-1,-30,-33,-34,-37,-23,-29,-74,-86,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'EQ':([61,63,64,65,66,67,69,70,71,72,76,83,86,89,90,95,96,99,100,101,103,104,105,106,122,123,124,134,137,138,141,154,158,159,165,168,175,192,193,194,195,196,197,201,202,203,204,205,206,207,208,],[-83,-89,-88,-40,-41,-42,-84,-84,-84,-84,-42,-83,119,-91,-90,-38,-39,-16,-1,-1,-44,-45,-46,-47,153,-1,-1,-30,-33,-34,-37,-18,-22,-23,-29,-74,-86,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'SINO':([107,209,],[-48,213,]),'ENTONCES':([178,],[198,]),'HAZ':([180,],[199,]),'HASTA':([181,],[200,]),'HACER':([211,],[215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'VARS':([4,91,],[5,125,]),'EMPTY':([4,5,6,36,39,41,43,52,77,78,79,86,91,92,93,94,100,101,108,109,110,114,123,124,166,209,],[7,10,15,15,15,15,55,81,81,81,81,120,7,128,128,128,137,141,81,81,81,81,158,165,10,214,]),'FUNCTION':([5,166,],[8,190,]),'TIPO':([6,36,39,41,],[11,44,48,50,]),'MAIN':([8,],[16,]),'TIPO_FUNC':([9,],[18,]),'push_type':([12,13,14,],[23,24,25,]),'push_main':([17,],[26,]),'VAR_INT':([23,45,46,],[28,59,60,]),'LIST_ID':([23,45,46,47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[29,29,29,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'VAR_TIPO':([24,25,],[31,33,]),'push_func':([27,],[35,]),'push_var':([29,30,32,61,83,],[37,38,40,97,97,]),'BLOQUE':([42,125,198,199,213,215,],[51,166,209,210,216,217,]),'PARAMETROS':([43,],[53,]),'AUX_PARAM':([43,127,],[54,167,]),'SLEVEL_EXPRESION':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,182,183,184,185,186,187,188,189,],[62,90,90,90,90,90,90,90,90,90,90,90,90,90,170,90,90,193,194,90,90,90,90,90,90,90,90,]),'FLEVEL_EXPRESION':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,195,196,63,63,63,63,63,63,63,63,]),'VALUE_EXPRESION':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CONSTANTE':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LLAMADA':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[67,76,76,76,76,67,67,76,76,76,76,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'r_new_lparen':([47,52,77,78,79,98,102,108,109,110,114,116,117,121,133,151,169,171,172,173,174,182,183,184,185,186,187,188,189,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'OPCION_BLOQUE':([52,77,78,79,108,109,110,114,],[73,111,112,113,143,144,145,146,]),'LECTURA':([52,77,78,79,108,109,110,114,],[74,74,74,74,74,74,74,74,]),'ESCRITURA':([52,77,78,79,108,109,110,114,],[75,75,75,75,75,75,75,75,]),'ESTATUTO':([52,77,78,79,108,109,110,114,],[77,77,77,77,77,77,77,77,]),'MIENTRAS_CICLO':([52,77,78,79,108,109,110,114,],[78,78,78,78,78,78,78,78,]),'DESDE_CICLO':([52,77,78,79,108,109,110,114,],[79,79,79,79,79,79,79,79,]),'ASIGNACION':([52,77,78,79,108,109,110,114,151,],[80,80,80,80,80,80,80,80,179,]),'EXPRESION':([52,77,78,79,98,102,108,109,110,114,116,117,121,151,169,182,183,184,],[86,86,86,86,132,142,86,86,86,86,132,149,152,86,132,201,202,203,]),'TLEVEL_EXPRESION':([52,77,78,79,98,102,108,109,110,114,116,117,121,151,169,182,183,184,185,186,187,188,189,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,204,205,206,207,208,]),'r_new_id':([61,83,],[95,95,]),'r_new_quadruple_slevel':([63,],[100,]),'r_new_quadruple_flevel':([64,],[101,]),'r_new_constant':([69,70,71,72,],[103,104,105,106,]),'ASIGNACION_AUX':([86,],[118,]),'r_new_quadruple':([89,],[123,]),'r_new_quadruple_tlevel':([90,],[124,]),'NEXT_PARAM':([92,93,94,],[126,129,130,]),'TIPO_PARAMETROS':([98,116,169,],[131,148,191,]),'SLEVEL_EXPRESION_AUX':([100,],[134,]),'FLEVEL_EXPRESION_AUX':([101,],[138,]),'r_new_equal':([118,],[150,]),'r_new_operator':([119,135,136,139,140,155,156,157,160,161,162,163,164,],[151,171,172,173,174,182,183,184,185,186,187,188,189,]),'EXPRESION_AUX':([123,],[154,]),'TLEVEL_EXPRESION_AUX':([124,],[159,]),'r_new_rparen':([175,],[197,]),'ESTATUTO_SINO':([209,],[212,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','parser.py',42),
  ('MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE','MAIN',5,'p_MAIN','parser.py',46),
  ('PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN','PROG',6,'p_PROG','parser.py',50),
  ('VARS -> VAR TIPO','VARS',2,'p_VARS','parser.py',54),
  ('VARS -> EMPTY','VARS',1,'p_VARS','parser.py',55),
  ('TIPO -> INT push_type VAR_INT SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',59),
  ('TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',60),
  ('TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',61),
  ('TIPO -> EMPTY','TIPO',1,'p_TIPO','parser.py',62),
  ('VAR_INT -> LIST_ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',66),
  ('VAR_INT -> ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',67),
  ('VAR_INT -> LIST_ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',68),
  ('VAR_INT -> ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',69),
  ('VAR_TIPO -> ID push_var COMMA','VAR_TIPO',3,'p_VAR_TIPO','parser.py',73),
  ('VAR_TIPO -> ID push_var','VAR_TIPO',2,'p_VAR_TIPO','parser.py',74),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ','LIST_ID',5,'p_LIST_ID','parser.py',78),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ','LIST_ID',8,'p_LIST_ID','parser.py',79),
  ('EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX','EXPRESION',3,'p_EXPRESION','parser.py',87),
  ('EXPRESION_AUX -> COMPAR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',91),
  ('EXPRESION_AUX -> AND r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',92),
  ('EXPRESION_AUX -> OR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',93),
  ('EXPRESION_AUX -> EMPTY','EXPRESION_AUX',1,'p_EXPRESION_AUX','parser.py',94),
  ('TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX','TLEVEL_EXPRESION',3,'p_TLEVEL_EXPRESION','parser.py',98),
  ('TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',102),
  ('TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',103),
  ('TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',104),
  ('TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',105),
  ('TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',106),
  ('TLEVEL_EXPRESION_AUX -> EMPTY','TLEVEL_EXPRESION_AUX',1,'p_TLEVEL_EXPRESION_AUX','parser.py',107),
  ('SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX','SLEVEL_EXPRESION',3,'p_SLEVEL_EXPRESION','parser.py',111),
  ('SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',115),
  ('SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',116),
  ('SLEVEL_EXPRESION_AUX -> EMPTY','SLEVEL_EXPRESION_AUX',1,'p_SLEVEL_EXPRESION_AUX','parser.py',117),
  ('FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX','FLEVEL_EXPRESION',3,'p_FLEVEL_EXPRESION','parser.py',121),
  ('FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',125),
  ('FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',126),
  ('FLEVEL_EXPRESION_AUX -> EMPTY','FLEVEL_EXPRESION_AUX',1,'p_FLEVEL_EXPRESION_AUX','parser.py',127),
  ('VALUE_EXPRESION -> ID r_new_id','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',131),
  ('VALUE_EXPRESION -> ID DET','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',132),
  ('VALUE_EXPRESION -> LIST_ID','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',133),
  ('VALUE_EXPRESION -> CONSTANTE','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',134),
  ('VALUE_EXPRESION -> LLAMADA','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',135),
  ('VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen','VALUE_EXPRESION',5,'p_VALUE_EXPRESION','parser.py',136),
  ('CONSTANTE -> CTE_I r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',140),
  ('CONSTANTE -> CTE_F r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',141),
  ('CONSTANTE -> CTE_C r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',142),
  ('CONSTANTE -> CTE_S r_new_constant','CONSTANTE',2,'p_CONSTANTE','parser.py',143),
  ('BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET','BLOQUE',3,'p_BLOQUE','parser.py',151),
  ('OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',155),
  ('OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',156),
  ('OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',157),
  ('OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',158),
  ('OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',159),
  ('OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',160),
  ('OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',161),
  ('OPCION_BLOQUE -> EMPTY','OPCION_BLOQUE',1,'p_OPCION_BLOQUE','parser.py',162),
  ('FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION','FUNCTION',10,'p_FUNCTION','parser.py',172),
  ('FUNCTION -> EMPTY','FUNCTION',1,'p_FUNCTION','parser.py',173),
  ('TIPO_FUNC -> INT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',177),
  ('TIPO_FUNC -> FLOAT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',178),
  ('TIPO_FUNC -> CHAR','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',179),
  ('TIPO_FUNC -> VOID','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',180),
  ('PARAMETROS -> AUX_PARAM','PARAMETROS',1,'p_PARAMETROS','parser.py',184),
  ('PARAMETROS -> EMPTY','PARAMETROS',1,'p_PARAMETROS','parser.py',185),
  ('AUX_PARAM -> INT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',189),
  ('AUX_PARAM -> FLOAT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',190),
  ('AUX_PARAM -> CHAR ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',191),
  ('NEXT_PARAM -> COMMA AUX_PARAM','NEXT_PARAM',2,'p_NEXT_PARAM','parser.py',195),
  ('NEXT_PARAM -> EMPTY','NEXT_PARAM',1,'p_NEXT_PARAM','parser.py',196),
  ('DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE','DESDE_CICLO',8,'p_DESDE_CICLO','parser.py',200),
  ('MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE','MIENTRAS_CICLO',6,'p_MIENTRAS_CICLO','parser.py',205),
  ('LECTURA -> LEE LPAREN ID RPAREN','LECTURA',4,'p_LECTURA','parser.py',210),
  ('ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN','ESCRITURA',4,'p_ESCRITURA','parser.py',215),
  ('LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN','LLAMADA',4,'p_LLAMADA','parser.py',220),
  ('TIPO_PARAMETROS -> EXPRESION','TIPO_PARAMETROS',1,'p_TIPO_PARAMETROS','parser.py',224),
  ('TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS','TIPO_PARAMETROS',3,'p_TIPO_PARAMETROS','parser.py',225),
  ('ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO','ESTATUTO',7,'p_ESTATUTO','parser.py',230),
  ('ESTATUTO_SINO -> SINO BLOQUE','ESTATUTO_SINO',2,'p_ESTATUTO_SINO','parser.py',234),
  ('ESTATUTO_SINO -> EMPTY','ESTATUTO_SINO',1,'p_ESTATUTO_SINO','parser.py',235),
  ('ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal','ASIGNACION',3,'p_ASIGNACION','parser.py',240),
  ('ASIGNACION_AUX -> EQ r_new_operator ASIGNACION','ASIGNACION_AUX',3,'p_ASIGNACION_AUX','parser.py',244),
  ('ASIGNACION_AUX -> EMPTY','ASIGNACION_AUX',1,'p_ASIGNACION_AUX','parser.py',245),
  ('r_new_id -> <empty>','r_new_id',0,'p_r_new_id','parser.py',253),
  ('r_new_constant -> <empty>','r_new_constant',0,'p_r_new_constant','parser.py',257),
  ('r_new_lparen -> <empty>','r_new_lparen',0,'p_r_new_lparen','parser.py',261),
  ('r_new_rparen -> <empty>','r_new_rparen',0,'p_r_new_rparen','parser.py',265),
  ('r_new_operator -> <empty>','r_new_operator',0,'p_r_new_operator','parser.py',270),
  ('r_new_quadruple_flevel -> <empty>','r_new_quadruple_flevel',0,'p_r_new_quadruple_flevel','parser.py',274),
  ('r_new_quadruple_slevel -> <empty>','r_new_quadruple_slevel',0,'p_r_new_quadruple_slevel','parser.py',279),
  ('r_new_quadruple_tlevel -> <empty>','r_new_quadruple_tlevel',0,'p_r_new_quadruple_tlevel','parser.py',284),
  ('r_new_quadruple -> <empty>','r_new_quadruple',0,'p_r_new_quadruple','parser.py',289),
  ('r_new_equal -> <empty>','r_new_equal',0,'p_r_new_equal','parser.py',294),
  ('push_type -> <empty>','push_type',0,'p_r_push_type','parser.py',304),
  ('push_func -> <empty>','push_func',0,'p_r_push_func','parser.py',311),
  ('push_var -> <empty>','push_var',0,'p_r_push_var','parser.py',325),
  ('push_main -> <empty>','push_main',0,'p_r_push_main','parser.py',336),
]
