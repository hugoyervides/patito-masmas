
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGAND CHAR COLON COMMA COMMENT COMPAR CTE_C CTE_F CTE_I CTE_S DESDE DET DIV DOT ENTONCES EQ ESCRIBE FLOAT FUNCION GREATER GREATER_EQ HACER HASTA HAZ ID INT INV LBRACKET LEE LESS LESS_EQ LPAREN LSQ MIENTRAS MINUS MULT NOT_EQ NULL OR PLUS PRINCIPAL PROGRAMA RBRACKET RPAREN RSQ SEMI_COLON SI SINO TRAN VAR VOIDEMPTY :MAIN : PRINCIPAL push_main LPAREN RPAREN BLOQUEPROG : PROGRAMA ID SEMI_COLON VARS FUNCTION MAINVARS : VAR TIPO\n            | EMPTYTIPO : INT push_type VAR_INT SEMI_COLON TIPO\n            | FLOAT push_type VAR_TIPO SEMI_COLON TIPO\n            | CHAR push_type VAR_TIPO SEMI_COLON TIPO\n            | EMPTYVAR_INT : LIST_ID push_var COMMA VAR_INT\n                | ID push_var COMMA VAR_INT\n                | LIST_ID push_var\n                | ID push_varVAR_TIPO : ID push_var COMMA\n                | ID push_varLIST_ID : ID push_var LSQ SLEVEL_EXPRESION RSQ\n                | ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ\n    EXPRESION : TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUXEXPRESION_AUX : COMPAR r_new_operator EXPRESION\n                    | AND r_new_operator EXPRESION\n                    | OR r_new_operator EXPRESION\n                    | EMPTYTLEVEL_EXPRESION : SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUXTLEVEL_EXPRESION_AUX : NOT_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER_EQ r_new_operator TLEVEL_EXPRESION\n                            | LESS_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER r_new_operator TLEVEL_EXPRESION\n                            | LESS r_new_operator TLEVEL_EXPRESION\n                            | EMPTYSLEVEL_EXPRESION : FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUXSLEVEL_EXPRESION_AUX : PLUS r_new_operator SLEVEL_EXPRESION\n                            | MINUS r_new_operator SLEVEL_EXPRESION\n                            | EMPTYFLEVEL_EXPRESION : VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUXFLEVEL_EXPRESION_AUX : MULT r_new_operator FLEVEL_EXPRESION\n                            | DIV r_new_operator FLEVEL_EXPRESION\n                            | EMPTYVALUE_EXPRESION : ID r_new_id\n                    | ID DET\n                    | LIST_ID\n                    | CONSTANTE\n                    | LLAMADA\n                    | r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen\n    CONSTANTE : CTE_I \n                | CTE_F\n                | CTE_C\n                | CTE_S\n    BLOQUE : LBRACKET OPCION_BLOQUE RBRACKETOPCION_BLOQUE : LECTURA SEMI_COLON OPCION_BLOQUE\n                    | ESCRITURA SEMI_COLON OPCION_BLOQUE\n                    | LLAMADA SEMI_COLON OPCION_BLOQUE\n                    | ESTATUTO OPCION_BLOQUE\n                    | MIENTRAS_CICLO OPCION_BLOQUE\n                    | DESDE_CICLO OPCION_BLOQUE\n                    | ASIGNACION SEMI_COLON OPCION_BLOQUE\n                    | EMPTY\n    FUNCTION : FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION\n                | EMPTYTIPO_FUNC : INT\n                | FLOAT\n                | CHAR\n                | VOIDPARAMETROS : AUX_PARAM\n                | EMPTYAUX_PARAM : INT ID NEXT_PARAM\n                | FLOAT ID NEXT_PARAM\n                | CHAR ID NEXT_PARAMNEXT_PARAM : COMMA AUX_PARAM\n                    | EMPTY DESDE_CICLO : DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUEMIENTRAS_CICLO : MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUELECTURA : LEE LPAREN ID RPARENESCRITURA : ESCRIBE LPAREN TIPO_PARAMETROS RPARENLLAMADA : ID LPAREN TIPO_PARAMETROS RPARENTIPO_PARAMETROS : EXPRESION\n                        | EXPRESION COMMA TIPO_PARAMETROSESTATUTO : SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINOESTATUTO_SINO : SINO BLOQUE\n                    | EMPTYASIGNACION : ID EQ EXPRESION\n                    | LIST_ID EQ EXPRESIONr_new_id : r_new_lparen : r_new_rparen : r_new_operator : r_new_quadruple_flevel : r_new_quadruple_slevel : r_new_quadruple_tlevel : r_new_quadruple : push_type : push_func : push_var : push_main : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,16,51,101,],[0,-3,-2,-48,]),'ID':([2,12,13,14,18,19,20,21,22,23,24,25,45,46,47,52,56,57,58,77,78,79,87,96,100,101,102,103,104,108,109,110,111,112,113,115,126,128,129,132,133,150,154,155,156,157,167,168,169,172,173,174,175,176,187,188,189,190,191,192,193,194,195,196,206,208,210,211,],[3,-90,-90,-90,27,-59,-60,-61,-62,30,32,32,30,30,61,83,90,91,92,83,83,83,114,61,61,-48,83,83,83,83,140,61,61,61,61,61,61,-85,-85,-85,-85,61,61,61,61,61,-85,-85,-85,-85,-85,-85,-85,-85,61,61,61,61,61,61,61,61,-1,-71,-77,-79,-78,-70,]),'SEMI_COLON':([3,28,29,30,31,32,33,37,38,40,49,59,60,61,63,64,65,66,67,69,70,71,72,74,75,76,80,93,94,97,98,99,124,125,127,130,131,134,141,146,149,151,152,158,159,160,166,170,171,177,178,179,180,181,182,183,198,199,200,201,202,203,204,205,],[4,36,-92,-92,39,-92,41,-12,-13,-15,-14,-10,-11,-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,102,103,104,108,-38,-39,-16,-1,-1,-89,-88,-30,-33,-34,-37,-80,-81,-74,-1,-1,-84,-72,-73,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'VAR':([4,89,],[6,6,]),'FUNCION':([4,5,6,7,11,15,36,39,41,44,48,50,101,147,],[-1,9,-1,-5,-4,-9,-1,-1,-1,-6,-7,-8,-48,9,]),'PRINCIPAL':([4,5,6,7,8,10,11,15,36,39,41,44,48,50,101,147,164,],[-1,-1,-1,-5,17,-58,-4,-9,-1,-1,-1,-6,-7,-8,-48,-1,-57,]),'INT':([6,9,36,39,41,43,118,],[12,19,12,12,12,56,56,]),'FLOAT':([6,9,36,39,41,43,118,],[13,20,13,13,13,57,57,]),'CHAR':([6,9,36,39,41,43,118,],[14,21,14,14,14,58,58,]),'LBRACKET':([6,7,11,15,36,39,41,42,44,48,50,89,116,184,185,207,209,],[-1,-5,-4,-9,-1,-1,-1,52,-6,-7,-8,-1,52,52,52,52,52,]),'VOID':([9,],[22,]),'LPAREN':([17,26,27,35,47,61,68,82,83,84,85,86,96,100,110,111,112,113,115,126,128,129,132,133,150,154,155,156,157,167,168,169,172,173,174,175,176,187,188,189,190,191,192,193,194,],[-93,34,-91,43,-83,96,100,109,96,111,112,113,-83,-83,-83,-83,-83,-83,-83,-83,-85,-85,-85,-85,-83,-83,-83,-83,-83,-85,-85,-85,-85,-85,-85,-85,-85,-83,-83,-83,-83,-83,-83,-83,-83,]),'COMMA':([29,30,32,37,38,40,61,63,64,65,66,67,69,70,71,72,90,91,92,93,94,97,98,99,123,124,125,127,130,131,134,149,151,152,158,166,170,171,177,178,179,180,181,182,183,198,199,200,201,202,203,204,205,],[-92,-92,-92,45,46,49,-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,118,118,118,-38,-39,-16,-1,-1,150,-89,-88,-30,-33,-34,-37,-74,-1,-1,-84,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'LSQ':([30,38,61,83,95,97,],[-92,47,-92,-92,47,126,]),'RPAREN':([34,43,53,54,55,61,63,64,65,66,67,69,70,71,72,90,91,92,93,94,97,98,99,117,119,120,121,122,123,124,125,127,130,131,134,135,140,142,143,144,148,149,151,152,158,165,166,170,171,177,178,179,180,181,182,183,198,199,200,201,202,203,204,205,],[42,-1,89,-63,-64,-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-1,-1,-1,-38,-39,-16,-1,-1,-65,-69,-66,-67,149,-75,-89,-88,-30,-33,-34,-37,158,159,160,161,162,-68,-74,-1,-1,-84,-76,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'CTE_I':([47,96,100,110,111,112,113,115,126,128,129,132,133,145,150,154,155,156,157,167,168,169,172,173,174,175,176,186,187,188,189,190,191,192,193,194,],[69,69,69,69,69,69,69,69,69,-85,-85,-85,-85,163,69,69,69,69,69,-85,-85,-85,-85,-85,-85,-85,-85,197,69,69,69,69,69,69,69,69,]),'CTE_F':([47,96,100,110,111,112,113,115,126,128,129,132,133,150,154,155,156,157,167,168,169,172,173,174,175,176,187,188,189,190,191,192,193,194,],[70,70,70,70,70,70,70,70,70,-85,-85,-85,-85,70,70,70,70,70,-85,-85,-85,-85,-85,-85,-85,-85,70,70,70,70,70,70,70,70,]),'CTE_C':([47,96,100,110,111,112,113,115,126,128,129,132,133,150,154,155,156,157,167,168,169,172,173,174,175,176,187,188,189,190,191,192,193,194,],[71,71,71,71,71,71,71,71,71,-85,-85,-85,-85,71,71,71,71,71,-85,-85,-85,-85,-85,-85,-85,-85,71,71,71,71,71,71,71,71,]),'CTE_S':([47,96,100,110,111,112,113,115,126,128,129,132,133,150,154,155,156,157,167,168,169,172,173,174,175,176,187,188,189,190,191,192,193,194,],[72,72,72,72,72,72,72,72,72,-85,-85,-85,-85,72,72,72,72,72,-85,-85,-85,-85,-85,-85,-85,-85,72,72,72,72,72,72,72,72,]),'LEE':([52,77,78,79,101,102,103,104,108,195,196,206,208,210,211,],[82,82,82,82,-48,82,82,82,82,-1,-71,-77,-79,-78,-70,]),'ESCRIBE':([52,77,78,79,101,102,103,104,108,195,196,206,208,210,211,],[84,84,84,84,-48,84,84,84,84,-1,-71,-77,-79,-78,-70,]),'SI':([52,77,78,79,101,102,103,104,108,195,196,206,208,210,211,],[85,85,85,85,-48,85,85,85,85,-1,-71,-77,-79,-78,-70,]),'MIENTRAS':([52,77,78,79,101,102,103,104,108,195,196,206,208,210,211,],[86,86,86,86,-48,86,86,86,86,-1,-71,-77,-79,-78,-70,]),'DESDE':([52,77,78,79,101,102,103,104,108,195,196,206,208,210,211,],[87,87,87,87,-48,87,87,87,87,-1,-71,-77,-79,-78,-70,]),'RBRACKET':([52,73,77,78,79,81,101,102,103,104,105,106,107,108,136,137,138,139,195,196,206,208,210,211,],[-1,101,-1,-1,-1,-56,-48,-1,-1,-1,-52,-53,-54,-1,-49,-50,-51,-55,-1,-71,-77,-79,-78,-70,]),'DET':([61,],[94,]),'MULT':([61,64,65,66,67,69,70,71,72,93,94,97,99,149,158,178,183,],[-82,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,132,-74,-84,-17,-43,]),'DIV':([61,64,65,66,67,69,70,71,72,93,94,97,99,149,158,178,183,],[-82,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,133,-74,-84,-17,-43,]),'PLUS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,131,134,149,158,178,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,128,-1,-34,-37,-74,-84,-17,-35,-36,-43,]),'MINUS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,131,134,149,158,178,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,129,-1,-34,-37,-74,-84,-17,-35,-36,-43,]),'RSQ':([61,62,63,64,65,66,67,69,70,71,72,93,94,97,98,99,127,130,131,134,149,153,158,178,179,180,181,182,183,],[-82,97,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-30,-33,-34,-37,-74,178,-84,-17,-31,-32,-35,-36,-43,]),'NOT_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,125,127,130,131,134,149,152,158,178,179,180,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-88,-30,-33,-34,-37,-74,172,-84,-17,-31,-32,-35,-36,-43,]),'GREATER_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,125,127,130,131,134,149,152,158,178,179,180,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-88,-30,-33,-34,-37,-74,173,-84,-17,-31,-32,-35,-36,-43,]),'LESS_EQ':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,125,127,130,131,134,149,152,158,178,179,180,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-88,-30,-33,-34,-37,-74,174,-84,-17,-31,-32,-35,-36,-43,]),'GREATER':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,125,127,130,131,134,149,152,158,178,179,180,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-88,-30,-33,-34,-37,-74,175,-84,-17,-31,-32,-35,-36,-43,]),'LESS':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,125,127,130,131,134,149,152,158,178,179,180,181,182,183,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-88,-30,-33,-34,-37,-74,176,-84,-17,-31,-32,-35,-36,-43,]),'COMPAR':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,124,125,127,130,131,134,149,151,152,158,171,177,178,179,180,181,182,183,201,202,203,204,205,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-89,-88,-30,-33,-34,-37,-74,167,-1,-84,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'AND':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,124,125,127,130,131,134,149,151,152,158,171,177,178,179,180,181,182,183,201,202,203,204,205,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-89,-88,-30,-33,-34,-37,-74,168,-1,-84,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'OR':([61,63,64,65,66,67,69,70,71,72,93,94,97,98,99,124,125,127,130,131,134,149,151,152,158,171,177,178,179,180,181,182,183,201,202,203,204,205,],[-82,-87,-86,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-89,-88,-30,-33,-34,-37,-74,169,-1,-84,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'EQ':([83,88,97,114,178,],[110,115,-16,145,-17,]),'SINO':([101,195,],[-48,207,]),'ENTONCES':([161,],[184,]),'HAZ':([162,],[185,]),'HASTA':([163,],[186,]),'HACER':([197,],[209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'VARS':([4,89,],[5,116,]),'EMPTY':([4,5,6,36,39,41,43,52,77,78,79,89,90,91,92,98,99,102,103,104,108,147,151,152,195,],[7,10,15,15,15,15,55,81,81,81,81,7,119,119,119,130,134,81,81,81,81,10,170,177,208,]),'FUNCTION':([5,147,],[8,164,]),'TIPO':([6,36,39,41,],[11,44,48,50,]),'MAIN':([8,],[16,]),'TIPO_FUNC':([9,],[18,]),'push_type':([12,13,14,],[23,24,25,]),'push_main':([17,],[26,]),'VAR_INT':([23,45,46,],[28,59,60,]),'LIST_ID':([23,45,46,47,52,77,78,79,96,100,102,103,104,108,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[29,29,29,65,88,88,88,88,65,65,88,88,88,88,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'VAR_TIPO':([24,25,],[31,33,]),'push_func':([27,],[35,]),'push_var':([29,30,32,61,83,],[37,38,40,95,95,]),'BLOQUE':([42,116,184,185,207,209,],[51,147,195,196,210,211,]),'PARAMETROS':([43,],[53,]),'AUX_PARAM':([43,118,],[54,148,]),'SLEVEL_EXPRESION':([47,96,100,110,111,112,113,115,126,150,154,155,187,188,189,190,191,192,193,194,],[62,125,125,125,125,125,125,125,153,125,179,180,125,125,125,125,125,125,125,125,]),'FLEVEL_EXPRESION':([47,96,100,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[63,63,63,63,63,63,63,63,63,63,63,63,181,182,63,63,63,63,63,63,63,63,]),'VALUE_EXPRESION':([47,96,100,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CONSTANTE':([47,96,100,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LLAMADA':([47,52,77,78,79,96,100,102,103,104,108,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[67,76,76,76,76,67,67,76,76,76,76,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'r_new_lparen':([47,96,100,110,111,112,113,115,126,150,154,155,156,157,187,188,189,190,191,192,193,194,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'OPCION_BLOQUE':([52,77,78,79,102,103,104,108,],[73,105,106,107,136,137,138,139,]),'LECTURA':([52,77,78,79,102,103,104,108,],[74,74,74,74,74,74,74,74,]),'ESCRITURA':([52,77,78,79,102,103,104,108,],[75,75,75,75,75,75,75,75,]),'ESTATUTO':([52,77,78,79,102,103,104,108,],[77,77,77,77,77,77,77,77,]),'MIENTRAS_CICLO':([52,77,78,79,102,103,104,108,],[78,78,78,78,78,78,78,78,]),'DESDE_CICLO':([52,77,78,79,102,103,104,108,],[79,79,79,79,79,79,79,79,]),'ASIGNACION':([52,77,78,79,102,103,104,108,],[80,80,80,80,80,80,80,80,]),'r_new_id':([61,],[93,]),'r_new_quadruple_slevel':([63,],[98,]),'r_new_quadruple_flevel':([64,],[99,]),'NEXT_PARAM':([90,91,92,],[117,120,121,]),'TIPO_PARAMETROS':([96,111,150,],[122,142,165,]),'EXPRESION':([96,100,110,111,112,113,115,150,187,188,189,],[123,135,141,123,143,144,146,123,198,199,200,]),'TLEVEL_EXPRESION':([96,100,110,111,112,113,115,150,187,188,189,190,191,192,193,194,],[124,124,124,124,124,124,124,124,124,124,124,201,202,203,204,205,]),'SLEVEL_EXPRESION_AUX':([98,],[127,]),'FLEVEL_EXPRESION_AUX':([99,],[131,]),'r_new_quadruple':([124,],[151,]),'r_new_quadruple_tlevel':([125,],[152,]),'r_new_operator':([128,129,132,133,167,168,169,172,173,174,175,176,],[154,155,156,157,187,188,189,190,191,192,193,194,]),'EXPRESION_AUX':([151,],[166,]),'TLEVEL_EXPRESION_AUX':([152,],[171,]),'r_new_rparen':([158,],[183,]),'ESTATUTO_SINO':([195,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','parser.py',39),
  ('MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE','MAIN',5,'p_MAIN','parser.py',43),
  ('PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN','PROG',6,'p_PROG','parser.py',47),
  ('VARS -> VAR TIPO','VARS',2,'p_VARS','parser.py',51),
  ('VARS -> EMPTY','VARS',1,'p_VARS','parser.py',52),
  ('TIPO -> INT push_type VAR_INT SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',56),
  ('TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',57),
  ('TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO','TIPO',5,'p_TIPO','parser.py',58),
  ('TIPO -> EMPTY','TIPO',1,'p_TIPO','parser.py',59),
  ('VAR_INT -> LIST_ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',63),
  ('VAR_INT -> ID push_var COMMA VAR_INT','VAR_INT',4,'p_VAR_INT','parser.py',64),
  ('VAR_INT -> LIST_ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',65),
  ('VAR_INT -> ID push_var','VAR_INT',2,'p_VAR_INT','parser.py',66),
  ('VAR_TIPO -> ID push_var COMMA','VAR_TIPO',3,'p_VAR_TIPO','parser.py',70),
  ('VAR_TIPO -> ID push_var','VAR_TIPO',2,'p_VAR_TIPO','parser.py',71),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ','LIST_ID',5,'p_LIST_ID','parser.py',75),
  ('LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ','LIST_ID',8,'p_LIST_ID','parser.py',76),
  ('EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX','EXPRESION',3,'p_EXPRESION','parser.py',84),
  ('EXPRESION_AUX -> COMPAR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',88),
  ('EXPRESION_AUX -> AND r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',89),
  ('EXPRESION_AUX -> OR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',90),
  ('EXPRESION_AUX -> EMPTY','EXPRESION_AUX',1,'p_EXPRESION_AUX','parser.py',91),
  ('TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX','TLEVEL_EXPRESION',3,'p_TLEVEL_EXPRESION','parser.py',95),
  ('TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',99),
  ('TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',100),
  ('TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',101),
  ('TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',102),
  ('TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',103),
  ('TLEVEL_EXPRESION_AUX -> EMPTY','TLEVEL_EXPRESION_AUX',1,'p_TLEVEL_EXPRESION_AUX','parser.py',104),
  ('SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX','SLEVEL_EXPRESION',3,'p_SLEVEL_EXPRESION','parser.py',108),
  ('SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',112),
  ('SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',113),
  ('SLEVEL_EXPRESION_AUX -> EMPTY','SLEVEL_EXPRESION_AUX',1,'p_SLEVEL_EXPRESION_AUX','parser.py',114),
  ('FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX','FLEVEL_EXPRESION',3,'p_FLEVEL_EXPRESION','parser.py',118),
  ('FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',122),
  ('FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',123),
  ('FLEVEL_EXPRESION_AUX -> EMPTY','FLEVEL_EXPRESION_AUX',1,'p_FLEVEL_EXPRESION_AUX','parser.py',124),
  ('VALUE_EXPRESION -> ID r_new_id','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',128),
  ('VALUE_EXPRESION -> ID DET','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',129),
  ('VALUE_EXPRESION -> LIST_ID','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',130),
  ('VALUE_EXPRESION -> CONSTANTE','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',131),
  ('VALUE_EXPRESION -> LLAMADA','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',132),
  ('VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen','VALUE_EXPRESION',5,'p_VALUE_EXPRESION','parser.py',133),
  ('CONSTANTE -> CTE_I','CONSTANTE',1,'p_CONSTANTE','parser.py',137),
  ('CONSTANTE -> CTE_F','CONSTANTE',1,'p_CONSTANTE','parser.py',138),
  ('CONSTANTE -> CTE_C','CONSTANTE',1,'p_CONSTANTE','parser.py',139),
  ('CONSTANTE -> CTE_S','CONSTANTE',1,'p_CONSTANTE','parser.py',140),
  ('BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET','BLOQUE',3,'p_BLOQUE','parser.py',148),
  ('OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',152),
  ('OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',153),
  ('OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',154),
  ('OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',155),
  ('OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',156),
  ('OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',157),
  ('OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',158),
  ('OPCION_BLOQUE -> EMPTY','OPCION_BLOQUE',1,'p_OPCION_BLOQUE','parser.py',159),
  ('FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION','FUNCTION',10,'p_FUNCTION','parser.py',169),
  ('FUNCTION -> EMPTY','FUNCTION',1,'p_FUNCTION','parser.py',170),
  ('TIPO_FUNC -> INT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',174),
  ('TIPO_FUNC -> FLOAT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',175),
  ('TIPO_FUNC -> CHAR','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',176),
  ('TIPO_FUNC -> VOID','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',177),
  ('PARAMETROS -> AUX_PARAM','PARAMETROS',1,'p_PARAMETROS','parser.py',181),
  ('PARAMETROS -> EMPTY','PARAMETROS',1,'p_PARAMETROS','parser.py',182),
  ('AUX_PARAM -> INT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',186),
  ('AUX_PARAM -> FLOAT ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',187),
  ('AUX_PARAM -> CHAR ID NEXT_PARAM','AUX_PARAM',3,'p_AUX_PARAM','parser.py',188),
  ('NEXT_PARAM -> COMMA AUX_PARAM','NEXT_PARAM',2,'p_NEXT_PARAM','parser.py',192),
  ('NEXT_PARAM -> EMPTY','NEXT_PARAM',1,'p_NEXT_PARAM','parser.py',193),
  ('DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE','DESDE_CICLO',8,'p_DESDE_CICLO','parser.py',197),
  ('MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE','MIENTRAS_CICLO',6,'p_MIENTRAS_CICLO','parser.py',202),
  ('LECTURA -> LEE LPAREN ID RPAREN','LECTURA',4,'p_LECTURA','parser.py',207),
  ('ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN','ESCRITURA',4,'p_ESCRITURA','parser.py',212),
  ('LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN','LLAMADA',4,'p_LLAMADA','parser.py',217),
  ('TIPO_PARAMETROS -> EXPRESION','TIPO_PARAMETROS',1,'p_TIPO_PARAMETROS','parser.py',221),
  ('TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS','TIPO_PARAMETROS',3,'p_TIPO_PARAMETROS','parser.py',222),
  ('ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO','ESTATUTO',7,'p_ESTATUTO','parser.py',227),
  ('ESTATUTO_SINO -> SINO BLOQUE','ESTATUTO_SINO',2,'p_ESTATUTO_SINO','parser.py',231),
  ('ESTATUTO_SINO -> EMPTY','ESTATUTO_SINO',1,'p_ESTATUTO_SINO','parser.py',232),
  ('ASIGNACION -> ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',237),
  ('ASIGNACION -> LIST_ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',238),
  ('r_new_id -> <empty>','r_new_id',0,'p_r_new_id','parser.py',246),
  ('r_new_lparen -> <empty>','r_new_lparen',0,'p_r_new_lparen','parser.py',250),
  ('r_new_rparen -> <empty>','r_new_rparen',0,'p_r_new_rparen','parser.py',254),
  ('r_new_operator -> <empty>','r_new_operator',0,'p_r_new_operator','parser.py',258),
  ('r_new_quadruple_flevel -> <empty>','r_new_quadruple_flevel',0,'p_r_new_quadruple_flevel','parser.py',262),
  ('r_new_quadruple_slevel -> <empty>','r_new_quadruple_slevel',0,'p_r_new_quadruple_slevel','parser.py',270),
  ('r_new_quadruple_tlevel -> <empty>','r_new_quadruple_tlevel',0,'p_r_new_quadruple_tlevel','parser.py',278),
  ('r_new_quadruple -> <empty>','r_new_quadruple',0,'p_r_new_quadruple','parser.py',286),
  ('push_type -> <empty>','push_type',0,'p_r_push_type','parser.py',300),
  ('push_func -> <empty>','push_func',0,'p_r_push_func','parser.py',307),
  ('push_var -> <empty>','push_var',0,'p_r_push_var','parser.py',321),
  ('push_main -> <empty>','push_main',0,'p_r_push_main','parser.py',332),
]
