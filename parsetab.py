
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGAND CHAR COLON COMMA COMMENT COMPAR CTE_C CTE_F CTE_I CTE_S DESDE DET DIV DOT ENTONCES EQ ESCRIBE FLOAT FUNCION GREATER GREATER_EQ HACER HASTA HAZ ID INT INV LBRACKET LEE LESS LESS_EQ LPAREN LSQ MIENTRAS MINUS MULT NOT_EQ NULL OR PLUS PRINCIPAL PROGRAMA RBRACKET RPAREN RSQ SEMI_COLON SI SINO TRAN VAR VOIDEMPTY :MAIN : PRINCIPAL LPAREN RPAREN BLOQUEPROG : PROGRAMA ID SEMI_COLON VARS FUNCTION MAINVARS : VAR TIPO\n            | EMPTYTIPO : INT VAR_INT SEMI_COLON TIPO\n            | FLOAT VAR_TIPO SEMI_COLON TIPO\n            | CHAR VAR_TIPO SEMI_COLON TIPO\n            | EMPTYVAR_INT : LIST_ID COMMA VAR_INT\n                | ID COMMA VAR_INT\n                | LIST_ID\n                | IDVAR_TIPO : ID COMMA\n                | IDLIST_ID : ID LSQ SLEVEL_EXPRESION RSQ\n                | ID LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ\n    EXPRESION : TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUXEXPRESION_AUX : COMPAR r_new_operator EXPRESION\n                    | AND r_new_operator EXPRESION\n                    | OR r_new_operator EXPRESION\n                    | EMPTYTLEVEL_EXPRESION : SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUXTLEVEL_EXPRESION_AUX : NOT_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER_EQ r_new_operator TLEVEL_EXPRESION\n                            | LESS_EQ r_new_operator TLEVEL_EXPRESION\n                            | GREATER r_new_operator TLEVEL_EXPRESION\n                            | LESS r_new_operator TLEVEL_EXPRESION\n                            | EMPTYSLEVEL_EXPRESION : FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUXSLEVEL_EXPRESION_AUX : PLUS r_new_operator SLEVEL_EXPRESION\n                            | MINUS r_new_operator SLEVEL_EXPRESION\n                            | EMPTYFLEVEL_EXPRESION : VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUXFLEVEL_EXPRESION_AUX : MULT r_new_operator FLEVEL_EXPRESION\n                            | DIV r_new_operator FLEVEL_EXPRESION\n                            | EMPTYVALUE_EXPRESION : ID r_new_id\n                    | ID DET\n                    | LIST_ID\n                    | CONSTANTE\n                    | LLAMADA\n                    | r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen\n    CONSTANTE : CTE_I \n                | CTE_F\n                | CTE_C\n                | CTE_S\n    BLOQUE : LBRACKET OPCION_BLOQUE RBRACKETOPCION_BLOQUE : LECTURA SEMI_COLON OPCION_BLOQUE\n                    | ESCRITURA SEMI_COLON OPCION_BLOQUE\n                    | LLAMADA SEMI_COLON OPCION_BLOQUE\n                    | ESTATUTO OPCION_BLOQUE\n                    | MIENTRAS_CICLO OPCION_BLOQUE\n                    | DESDE_CICLO OPCION_BLOQUE\n                    | ASIGNACION SEMI_COLON OPCION_BLOQUE\n                    | EMPTY\n    FUNCTION : FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION\n                | EMPTYTIPO_FUNC : INT\n                | FLOAT\n                | CHAR\n                | VOIDPARAMETROS : INT ID\n                | FLOAT ID\n                | CHAR ID\n                | COMMA PARAMETROSDESDE_CICLO : DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUEMIENTRAS_CICLO : MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUELECTURA : LEE LPAREN ID RPARENESCRITURA : ESCRIBE LPAREN TIPO_PARAMETROS RPARENLLAMADA : ID LPAREN TIPO_PARAMETROS RPARENTIPO_PARAMETROS : EXPRESION\n                        | EXPRESION COMMA TIPO_PARAMETROSESTATUTO : SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINOESTATUTO_SINO : SINO BLOQUE\n                    | EMPTYASIGNACION : ID EQ EXPRESION\n                    | LIST_ID EQ EXPRESIONr_new_id : r_new_lparen : r_new_rparen : r_new_operator : r_new_quadruple_flevel : r_new_quadruple_slevel : r_new_quadruple_tlevel : r_new_quadruple : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,16,57,106,],[0,-3,-2,-48,]),'ID':([2,12,13,14,18,19,20,21,22,32,33,34,58,60,61,62,66,70,75,76,77,85,96,98,99,102,103,106,107,108,109,113,114,115,116,117,118,120,123,127,128,129,130,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,188,189,191,193,195,196,],[3,25,27,27,30,-59,-60,-61,-62,25,25,43,81,88,89,90,43,43,81,81,81,119,43,-82,-82,-82,-82,-48,81,81,81,81,136,43,43,43,43,43,43,43,43,43,43,-82,-82,-82,-82,-82,-82,-82,-82,43,43,43,43,43,43,43,43,-1,-68,-74,-76,-75,-67,]),'SEMI_COLON':([3,23,24,25,26,27,28,36,41,42,43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,72,73,74,78,94,95,97,100,101,104,122,124,125,131,137,142,145,149,150,156,157,158,159,160,161,162,163,164,180,181,182,183,184,185,186,187,],[4,31,-12,-13,35,-15,37,-14,-10,-11,-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,107,108,109,113,-86,-85,-30,-33,-34,-37,-71,-1,-1,-81,-77,-78,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-69,-70,-19,-20,-21,-24,-25,-26,-27,-28,]),'VAR':([4,87,],[6,6,]),'FUNCION':([4,5,6,7,11,15,31,35,37,40,55,56,106,143,],[-1,9,-1,-5,-4,-9,-1,-1,-1,-6,-7,-8,-48,9,]),'PRINCIPAL':([4,5,6,7,8,10,11,15,31,35,37,40,55,56,106,143,168,],[-1,-1,-1,-5,17,-58,-4,-9,-1,-1,-1,-6,-7,-8,-48,-1,-57,]),'INT':([6,9,31,35,37,39,63,],[12,19,12,12,12,60,60,]),'FLOAT':([6,9,31,35,37,39,63,],[13,20,13,13,13,61,61,]),'CHAR':([6,9,31,35,37,39,63,],[14,21,14,14,14,62,62,]),'LBRACKET':([6,7,11,15,31,35,37,38,40,55,56,87,121,177,178,192,194,],[-1,-5,-4,-9,-1,-1,-1,58,-6,-7,-8,-1,58,58,58,58,58,]),'VOID':([9,],[22,]),'LPAREN':([17,30,34,43,50,66,70,80,81,82,83,84,96,98,99,102,103,115,116,117,118,120,123,127,128,129,130,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,],[29,39,-80,66,70,-80,-80,114,66,116,117,118,-80,-82,-82,-82,-82,-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,-82,-82,-82,-82,-82,-82,-82,-82,-80,-80,-80,-80,-80,-80,-80,-80,]),'COMMA':([24,25,27,39,43,45,46,47,48,49,51,52,53,54,63,64,65,67,68,69,93,94,95,97,100,101,104,122,124,125,131,145,149,150,156,157,158,159,160,161,162,180,181,182,183,184,185,186,187,],[32,33,36,63,-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,63,-38,-39,-16,-1,-1,123,-86,-85,-30,-33,-34,-37,-71,-1,-1,-81,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'LSQ':([25,43,67,81,],[34,34,96,34,]),'RPAREN':([29,43,45,46,47,48,49,51,52,53,54,59,64,65,67,68,69,88,89,90,91,92,93,94,95,97,100,101,104,105,122,124,125,131,136,138,139,140,144,145,149,150,156,157,158,159,160,161,162,180,181,182,183,184,185,186,187,],[38,-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,87,-38,-39,-16,-1,-1,-63,-64,-65,-66,122,-72,-86,-85,-30,-33,-34,-37,131,-71,-1,-1,-81,163,164,165,166,-73,-18,-22,-23,-29,-17,-31,-32,-35,-36,-43,-19,-20,-21,-24,-25,-26,-27,-28,]),'CTE_I':([34,66,70,96,98,99,102,103,115,116,117,118,120,123,127,128,129,130,141,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,179,],[51,51,51,51,-82,-82,-82,-82,51,51,51,51,51,51,51,51,51,51,167,-82,-82,-82,-82,-82,-82,-82,-82,51,51,51,51,51,51,51,51,190,]),'CTE_F':([34,66,70,96,98,99,102,103,115,116,117,118,120,123,127,128,129,130,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,],[52,52,52,52,-82,-82,-82,-82,52,52,52,52,52,52,52,52,52,52,-82,-82,-82,-82,-82,-82,-82,-82,52,52,52,52,52,52,52,52,]),'CTE_C':([34,66,70,96,98,99,102,103,115,116,117,118,120,123,127,128,129,130,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,],[53,53,53,53,-82,-82,-82,-82,53,53,53,53,53,53,53,53,53,53,-82,-82,-82,-82,-82,-82,-82,-82,53,53,53,53,53,53,53,53,]),'CTE_S':([34,66,70,96,98,99,102,103,115,116,117,118,120,123,127,128,129,130,146,147,148,151,152,153,154,155,169,170,171,172,173,174,175,176,],[54,54,54,54,-82,-82,-82,-82,54,54,54,54,54,54,54,54,54,54,-82,-82,-82,-82,-82,-82,-82,-82,54,54,54,54,54,54,54,54,]),'DET':([43,],[65,]),'MULT':([43,46,47,48,49,51,52,53,54,64,65,67,69,122,131,157,162,],[-79,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,102,-71,-81,-17,-43,]),'DIV':([43,46,47,48,49,51,52,53,54,64,65,67,69,122,131,157,162,],[-79,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,103,-71,-81,-17,-43,]),'PLUS':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,101,104,122,131,157,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,98,-1,-34,-37,-71,-81,-17,-35,-36,-43,]),'MINUS':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,101,104,122,131,157,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,99,-1,-34,-37,-71,-81,-17,-35,-36,-43,]),'RSQ':([43,44,45,46,47,48,49,51,52,53,54,64,65,67,68,69,97,100,101,104,122,126,131,157,158,159,160,161,162,],[-79,67,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-30,-33,-34,-37,-71,157,-81,-17,-31,-32,-35,-36,-43,]),'NOT_EQ':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,95,97,100,101,104,122,125,131,157,158,159,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-85,-30,-33,-34,-37,-71,151,-81,-17,-31,-32,-35,-36,-43,]),'GREATER_EQ':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,95,97,100,101,104,122,125,131,157,158,159,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-85,-30,-33,-34,-37,-71,152,-81,-17,-31,-32,-35,-36,-43,]),'LESS_EQ':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,95,97,100,101,104,122,125,131,157,158,159,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-85,-30,-33,-34,-37,-71,153,-81,-17,-31,-32,-35,-36,-43,]),'GREATER':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,95,97,100,101,104,122,125,131,157,158,159,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-85,-30,-33,-34,-37,-71,154,-81,-17,-31,-32,-35,-36,-43,]),'LESS':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,95,97,100,101,104,122,125,131,157,158,159,160,161,162,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-85,-30,-33,-34,-37,-71,155,-81,-17,-31,-32,-35,-36,-43,]),'COMPAR':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,94,95,97,100,101,104,122,124,125,131,150,156,157,158,159,160,161,162,183,184,185,186,187,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-86,-85,-30,-33,-34,-37,-71,146,-1,-81,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'AND':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,94,95,97,100,101,104,122,124,125,131,150,156,157,158,159,160,161,162,183,184,185,186,187,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-86,-85,-30,-33,-34,-37,-71,147,-1,-81,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'OR':([43,45,46,47,48,49,51,52,53,54,64,65,67,68,69,94,95,97,100,101,104,122,124,125,131,150,156,157,158,159,160,161,162,183,184,185,186,187,],[-79,-84,-83,-40,-41,-42,-44,-45,-46,-47,-38,-39,-16,-1,-1,-86,-85,-30,-33,-34,-37,-71,148,-1,-81,-23,-29,-17,-31,-32,-35,-36,-43,-24,-25,-26,-27,-28,]),'LEE':([58,75,76,77,106,107,108,109,113,188,189,191,193,195,196,],[80,80,80,80,-48,80,80,80,80,-1,-68,-74,-76,-75,-67,]),'ESCRIBE':([58,75,76,77,106,107,108,109,113,188,189,191,193,195,196,],[82,82,82,82,-48,82,82,82,82,-1,-68,-74,-76,-75,-67,]),'SI':([58,75,76,77,106,107,108,109,113,188,189,191,193,195,196,],[83,83,83,83,-48,83,83,83,83,-1,-68,-74,-76,-75,-67,]),'MIENTRAS':([58,75,76,77,106,107,108,109,113,188,189,191,193,195,196,],[84,84,84,84,-48,84,84,84,84,-1,-68,-74,-76,-75,-67,]),'DESDE':([58,75,76,77,106,107,108,109,113,188,189,191,193,195,196,],[85,85,85,85,-48,85,85,85,85,-1,-68,-74,-76,-75,-67,]),'RBRACKET':([58,71,75,76,77,79,106,107,108,109,110,111,112,113,132,133,134,135,188,189,191,193,195,196,],[-1,106,-1,-1,-1,-56,-48,-1,-1,-1,-52,-53,-54,-1,-49,-50,-51,-55,-1,-68,-74,-76,-75,-67,]),'EQ':([67,81,86,119,157,],[-16,115,120,141,-17,]),'SINO':([106,188,],[-48,192,]),'ENTONCES':([165,],[177,]),'HAZ':([166,],[178,]),'HASTA':([167,],[179,]),'HACER':([190,],[194,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'VARS':([4,87,],[5,121,]),'EMPTY':([4,5,6,31,35,37,58,68,69,75,76,77,87,107,108,109,113,124,125,143,188,],[7,10,15,15,15,15,79,100,104,79,79,79,7,79,79,79,79,149,156,10,193,]),'FUNCTION':([5,143,],[8,168,]),'TIPO':([6,31,35,37,],[11,40,55,56,]),'MAIN':([8,],[16,]),'TIPO_FUNC':([9,],[18,]),'VAR_INT':([12,32,33,],[23,41,42,]),'LIST_ID':([12,32,33,34,58,66,70,75,76,77,96,107,108,109,113,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[24,24,24,47,86,47,47,86,86,86,47,86,86,86,86,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'VAR_TIPO':([13,14,],[26,28,]),'SLEVEL_EXPRESION':([34,66,70,96,115,116,117,118,120,123,127,128,169,170,171,172,173,174,175,176,],[44,95,95,126,95,95,95,95,95,95,158,159,95,95,95,95,95,95,95,95,]),'FLEVEL_EXPRESION':([34,66,70,96,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[45,45,45,45,45,45,45,45,45,45,45,45,160,161,45,45,45,45,45,45,45,45,]),'VALUE_EXPRESION':([34,66,70,96,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'CONSTANTE':([34,66,70,96,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'LLAMADA':([34,58,66,70,75,76,77,96,107,108,109,113,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[49,74,49,49,74,74,74,49,74,74,74,74,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'r_new_lparen':([34,66,70,96,115,116,117,118,120,123,127,128,129,130,169,170,171,172,173,174,175,176,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'BLOQUE':([38,121,177,178,192,194,],[57,143,188,189,195,196,]),'PARAMETROS':([39,63,],[59,91,]),'r_new_id':([43,],[64,]),'r_new_quadruple_slevel':([45,],[68,]),'r_new_quadruple_flevel':([46,],[69,]),'OPCION_BLOQUE':([58,75,76,77,107,108,109,113,],[71,110,111,112,132,133,134,135,]),'LECTURA':([58,75,76,77,107,108,109,113,],[72,72,72,72,72,72,72,72,]),'ESCRITURA':([58,75,76,77,107,108,109,113,],[73,73,73,73,73,73,73,73,]),'ESTATUTO':([58,75,76,77,107,108,109,113,],[75,75,75,75,75,75,75,75,]),'MIENTRAS_CICLO':([58,75,76,77,107,108,109,113,],[76,76,76,76,76,76,76,76,]),'DESDE_CICLO':([58,75,76,77,107,108,109,113,],[77,77,77,77,77,77,77,77,]),'ASIGNACION':([58,75,76,77,107,108,109,113,],[78,78,78,78,78,78,78,78,]),'TIPO_PARAMETROS':([66,116,123,],[92,138,144,]),'EXPRESION':([66,70,115,116,117,118,120,123,169,170,171,],[93,105,137,93,139,140,142,93,180,181,182,]),'TLEVEL_EXPRESION':([66,70,115,116,117,118,120,123,169,170,171,172,173,174,175,176,],[94,94,94,94,94,94,94,94,94,94,94,183,184,185,186,187,]),'SLEVEL_EXPRESION_AUX':([68,],[97,]),'FLEVEL_EXPRESION_AUX':([69,],[101,]),'r_new_quadruple':([94,],[124,]),'r_new_quadruple_tlevel':([95,],[125,]),'r_new_operator':([98,99,102,103,146,147,148,151,152,153,154,155,],[127,128,129,130,169,170,171,172,173,174,175,176,]),'EXPRESION_AUX':([124,],[145,]),'TLEVEL_EXPRESION_AUX':([125,],[150,]),'r_new_rparen':([131,],[162,]),'ESTATUTO_SINO':([188,],[191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','parser.py',31),
  ('MAIN -> PRINCIPAL LPAREN RPAREN BLOQUE','MAIN',4,'p_MAIN','parser.py',35),
  ('PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN','PROG',6,'p_PROG','parser.py',39),
  ('VARS -> VAR TIPO','VARS',2,'p_VARS','parser.py',43),
  ('VARS -> EMPTY','VARS',1,'p_VARS','parser.py',44),
  ('TIPO -> INT VAR_INT SEMI_COLON TIPO','TIPO',4,'p_TIPO','parser.py',48),
  ('TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO','TIPO',4,'p_TIPO','parser.py',49),
  ('TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO','TIPO',4,'p_TIPO','parser.py',50),
  ('TIPO -> EMPTY','TIPO',1,'p_TIPO','parser.py',51),
  ('VAR_INT -> LIST_ID COMMA VAR_INT','VAR_INT',3,'p_VAR_INT','parser.py',55),
  ('VAR_INT -> ID COMMA VAR_INT','VAR_INT',3,'p_VAR_INT','parser.py',56),
  ('VAR_INT -> LIST_ID','VAR_INT',1,'p_VAR_INT','parser.py',57),
  ('VAR_INT -> ID','VAR_INT',1,'p_VAR_INT','parser.py',58),
  ('VAR_TIPO -> ID COMMA','VAR_TIPO',2,'p_VAR_TIPO','parser.py',62),
  ('VAR_TIPO -> ID','VAR_TIPO',1,'p_VAR_TIPO','parser.py',63),
  ('LIST_ID -> ID LSQ SLEVEL_EXPRESION RSQ','LIST_ID',4,'p_LIST_ID','parser.py',67),
  ('LIST_ID -> ID LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ','LIST_ID',7,'p_LIST_ID','parser.py',68),
  ('EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX','EXPRESION',3,'p_EXPRESION','parser.py',76),
  ('EXPRESION_AUX -> COMPAR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',80),
  ('EXPRESION_AUX -> AND r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',81),
  ('EXPRESION_AUX -> OR r_new_operator EXPRESION','EXPRESION_AUX',3,'p_EXPRESION_AUX','parser.py',82),
  ('EXPRESION_AUX -> EMPTY','EXPRESION_AUX',1,'p_EXPRESION_AUX','parser.py',83),
  ('TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX','TLEVEL_EXPRESION',3,'p_TLEVEL_EXPRESION','parser.py',87),
  ('TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',91),
  ('TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',92),
  ('TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',93),
  ('TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',94),
  ('TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION','TLEVEL_EXPRESION_AUX',3,'p_TLEVEL_EXPRESION_AUX','parser.py',95),
  ('TLEVEL_EXPRESION_AUX -> EMPTY','TLEVEL_EXPRESION_AUX',1,'p_TLEVEL_EXPRESION_AUX','parser.py',96),
  ('SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX','SLEVEL_EXPRESION',3,'p_SLEVEL_EXPRESION','parser.py',100),
  ('SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',104),
  ('SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION','SLEVEL_EXPRESION_AUX',3,'p_SLEVEL_EXPRESION_AUX','parser.py',105),
  ('SLEVEL_EXPRESION_AUX -> EMPTY','SLEVEL_EXPRESION_AUX',1,'p_SLEVEL_EXPRESION_AUX','parser.py',106),
  ('FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX','FLEVEL_EXPRESION',3,'p_FLEVEL_EXPRESION','parser.py',110),
  ('FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',114),
  ('FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION','FLEVEL_EXPRESION_AUX',3,'p_FLEVEL_EXPRESION_AUX','parser.py',115),
  ('FLEVEL_EXPRESION_AUX -> EMPTY','FLEVEL_EXPRESION_AUX',1,'p_FLEVEL_EXPRESION_AUX','parser.py',116),
  ('VALUE_EXPRESION -> ID r_new_id','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',120),
  ('VALUE_EXPRESION -> ID DET','VALUE_EXPRESION',2,'p_VALUE_EXPRESION','parser.py',121),
  ('VALUE_EXPRESION -> LIST_ID','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',122),
  ('VALUE_EXPRESION -> CONSTANTE','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',123),
  ('VALUE_EXPRESION -> LLAMADA','VALUE_EXPRESION',1,'p_VALUE_EXPRESION','parser.py',124),
  ('VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen','VALUE_EXPRESION',5,'p_VALUE_EXPRESION','parser.py',125),
  ('CONSTANTE -> CTE_I','CONSTANTE',1,'p_CONSTANTE','parser.py',129),
  ('CONSTANTE -> CTE_F','CONSTANTE',1,'p_CONSTANTE','parser.py',130),
  ('CONSTANTE -> CTE_C','CONSTANTE',1,'p_CONSTANTE','parser.py',131),
  ('CONSTANTE -> CTE_S','CONSTANTE',1,'p_CONSTANTE','parser.py',132),
  ('BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET','BLOQUE',3,'p_BLOQUE','parser.py',140),
  ('OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',144),
  ('OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',145),
  ('OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',146),
  ('OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',147),
  ('OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',148),
  ('OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE','OPCION_BLOQUE',2,'p_OPCION_BLOQUE','parser.py',149),
  ('OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE','OPCION_BLOQUE',3,'p_OPCION_BLOQUE','parser.py',150),
  ('OPCION_BLOQUE -> EMPTY','OPCION_BLOQUE',1,'p_OPCION_BLOQUE','parser.py',151),
  ('FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION','FUNCTION',9,'p_FUNCTION','parser.py',161),
  ('FUNCTION -> EMPTY','FUNCTION',1,'p_FUNCTION','parser.py',162),
  ('TIPO_FUNC -> INT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',166),
  ('TIPO_FUNC -> FLOAT','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',167),
  ('TIPO_FUNC -> CHAR','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',168),
  ('TIPO_FUNC -> VOID','TIPO_FUNC',1,'p_TIPO_FUNC','parser.py',169),
  ('PARAMETROS -> INT ID','PARAMETROS',2,'p_PARAMETROS','parser.py',173),
  ('PARAMETROS -> FLOAT ID','PARAMETROS',2,'p_PARAMETROS','parser.py',174),
  ('PARAMETROS -> CHAR ID','PARAMETROS',2,'p_PARAMETROS','parser.py',175),
  ('PARAMETROS -> COMMA PARAMETROS','PARAMETROS',2,'p_PARAMETROS','parser.py',176),
  ('DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE','DESDE_CICLO',8,'p_DESDE_CICLO','parser.py',181),
  ('MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE','MIENTRAS_CICLO',6,'p_MIENTRAS_CICLO','parser.py',186),
  ('LECTURA -> LEE LPAREN ID RPAREN','LECTURA',4,'p_LECTURA','parser.py',191),
  ('ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN','ESCRITURA',4,'p_ESCRITURA','parser.py',196),
  ('LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN','LLAMADA',4,'p_LLAMADA','parser.py',201),
  ('TIPO_PARAMETROS -> EXPRESION','TIPO_PARAMETROS',1,'p_TIPO_PARAMETROS','parser.py',205),
  ('TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS','TIPO_PARAMETROS',3,'p_TIPO_PARAMETROS','parser.py',206),
  ('ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO','ESTATUTO',7,'p_ESTATUTO','parser.py',211),
  ('ESTATUTO_SINO -> SINO BLOQUE','ESTATUTO_SINO',2,'p_ESTATUTO_SINO','parser.py',215),
  ('ESTATUTO_SINO -> EMPTY','ESTATUTO_SINO',1,'p_ESTATUTO_SINO','parser.py',216),
  ('ASIGNACION -> ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',221),
  ('ASIGNACION -> LIST_ID EQ EXPRESION','ASIGNACION',3,'p_ASIGNACION','parser.py',222),
  ('r_new_id -> <empty>','r_new_id',0,'p_r_new_id','parser.py',230),
  ('r_new_lparen -> <empty>','r_new_lparen',0,'p_r_new_lparen','parser.py',234),
  ('r_new_rparen -> <empty>','r_new_rparen',0,'p_r_new_rparen','parser.py',238),
  ('r_new_operator -> <empty>','r_new_operator',0,'p_r_new_operator','parser.py',242),
  ('r_new_quadruple_flevel -> <empty>','r_new_quadruple_flevel',0,'p_r_new_quadruple_flevel','parser.py',246),
  ('r_new_quadruple_slevel -> <empty>','r_new_quadruple_slevel',0,'p_r_new_quadruple_slevel','parser.py',254),
  ('r_new_quadruple_tlevel -> <empty>','r_new_quadruple_tlevel',0,'p_r_new_quadruple_tlevel','parser.py',262),
  ('r_new_quadruple -> <empty>','r_new_quadruple',0,'p_r_new_quadruple','parser.py',270),
]
