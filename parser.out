Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DOT
    INV
    NULL
    TRAN

Grammar

Rule 0     S' -> PROG
Rule 1     EMPTY -> <empty>
Rule 2     MAIN -> PRINCIPAL LPAREN RPAREN BLOQUE
Rule 3     PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN
Rule 4     VARS -> VAR TIPO
Rule 5     VARS -> EMPTY
Rule 6     TIPO -> INT VAR_INT SEMI_COLON TIPO
Rule 7     TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO
Rule 8     TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO
Rule 9     TIPO -> EMPTY
Rule 10    VAR_INT -> LIST_ID COMMA VAR_INT
Rule 11    VAR_INT -> ID COMMA VAR_INT
Rule 12    VAR_INT -> LIST_ID
Rule 13    VAR_INT -> ID
Rule 14    VAR_TIPO -> ID COMMA
Rule 15    VAR_TIPO -> ID
Rule 16    LIST_ID -> ID LSQ TIR_EXPRESION RSQ
Rule 17    LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
Rule 18    EXPRESION -> SEC_EXPRESION
Rule 19    EXPRESION -> SEC_EXPRESION COMPAR EXPRESION
Rule 20    EXPRESION -> SEC_EXPRESION AND EXPRESION
Rule 21    EXPRESION -> SEC_EXPRESION OR EXPRESION
Rule 22    SEC_EXPRESION -> TIR_EXPRESION
Rule 23    SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION
Rule 24    SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION
Rule 25    SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION
Rule 26    SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION
Rule 27    SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION
Rule 28    TIR_EXPRESION -> FOR_EXPRESION
Rule 29    TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION
Rule 30    TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION
Rule 31    FOR_EXPRESION -> FIF_EXPRESION
Rule 32    FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION
Rule 33    FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION
Rule 34    FIF_EXPRESION -> ID
Rule 35    FIF_EXPRESION -> ID DET
Rule 36    FIF_EXPRESION -> LIST_ID
Rule 37    FIF_EXPRESION -> CONSTANTE
Rule 38    FIF_EXPRESION -> LLAMADA
Rule 39    FIF_EXPRESION -> LPAREN EXPRESION RPAREN
Rule 40    CONSTANTE -> CTE_I
Rule 41    CONSTANTE -> CTE_F
Rule 42    CONSTANTE -> CTE_C
Rule 43    CONSTANTE -> CTE_S
Rule 44    BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET
Rule 45    OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE
Rule 46    OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE
Rule 47    OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE
Rule 48    OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE
Rule 49    OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE
Rule 50    OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE
Rule 51    OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE
Rule 52    OPCION_BLOQUE -> EMPTY
Rule 53    FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
Rule 54    FUNCTION -> EMPTY
Rule 55    TIPO_FUNC -> INT
Rule 56    TIPO_FUNC -> FLOAT
Rule 57    TIPO_FUNC -> CHAR
Rule 58    TIPO_FUNC -> VOID
Rule 59    PARAMETROS -> INT ID
Rule 60    PARAMETROS -> FLOAT ID
Rule 61    PARAMETROS -> CHAR ID
Rule 62    PARAMETROS -> COMMA PARAMETROS
Rule 63    DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
Rule 64    MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
Rule 65    LECTURA -> LEE LPAREN ID RPAREN
Rule 66    ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
Rule 67    LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN
Rule 68    TIPO_PARAMETROS -> EXPRESION
Rule 69    TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS
Rule 70    ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
Rule 71    ESTATUTO_SINO -> SINO BLOQUE
Rule 72    ESTATUTO_SINO -> EMPTY
Rule 73    ASIGNACION -> ID EQ EXPRESION
Rule 74    ASIGNACION -> LIST_ID EQ EXPRESION

Terminals, with rules where they appear

AND                  : 20
CHAR                 : 8 57 61
COLON                : 
COMMA                : 10 11 14 62 69
COMMENT              : 
COMPAR               : 19
CTE_C                : 42
CTE_F                : 41
CTE_I                : 40 63 63
CTE_S                : 43
DESDE                : 63
DET                  : 35
DIV                  : 33
DOT                  : 
ENTONCES             : 70
EQ                   : 63 73 74
ESCRIBE              : 66
FLOAT                : 7 56 60
FUNCION              : 53
GREATER              : 26
GREATER_EQ           : 24
HACER                : 63
HASTA                : 63
HAZ                  : 64
ID                   : 3 11 13 14 15 16 17 34 35 53 59 60 61 63 65 67 73
INT                  : 6 55 59
INV                  : 
LBRACKET             : 44
LEE                  : 65
LESS                 : 27
LESS_EQ              : 25
LPAREN               : 2 39 53 64 65 66 67 70
LSQ                  : 16 17 17
MIENTRAS             : 64
MINUS                : 30
MULT                 : 32
NOT_EQ               : 23
NULL                 : 
OR                   : 21
PLUS                 : 29
PRINCIPAL            : 2
PROGRAMA             : 3
RBRACKET             : 44
RPAREN               : 2 39 53 64 65 66 67 70
RSQ                  : 16 17 17
SEMI_COLON           : 3 6 7 8 45 46 47 51
SI                   : 70
SINO                 : 71
TRAN                 : 
VAR                  : 4
VOID                 : 58
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 51
BLOQUE               : 2 53 63 64 70 71
CONSTANTE            : 37
DESDE_CICLO          : 50
EMPTY                : 5 9 52 54 72
ESCRITURA            : 46
ESTATUTO             : 48
ESTATUTO_SINO        : 70
EXPRESION            : 19 20 21 39 64 68 69 70 73 74
FIF_EXPRESION        : 31 32 33
FOR_EXPRESION        : 28 29 30 32 33
FUNCTION             : 3 53
LECTURA              : 45
LIST_ID              : 10 12 36 74
LLAMADA              : 38 47
MAIN                 : 3
MIENTRAS_CICLO       : 49
OPCION_BLOQUE        : 44 45 46 47 48 49 50 51
PARAMETROS           : 53 62
PROG                 : 0
SEC_EXPRESION        : 18 19 20 21 23 24 25 26 27
TIPO                 : 4 6 7 8
TIPO_FUNC            : 53
TIPO_PARAMETROS      : 66 67 69
TIR_EXPRESION        : 16 17 17 22 23 24 25 26 27 29 30
VARS                 : 3 53
VAR_INT              : 6 10 11
VAR_TIPO             : 7 8

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (3) PROG -> . PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN

    PROGRAMA        shift and go to state 2

    PROG                           shift and go to state 1

state 1

    (0) S' -> PROG .



state 2

    (3) PROG -> PROGRAMA . ID SEMI_COLON VARS FUNCTION MAIN

    ID              shift and go to state 3


state 3

    (3) PROG -> PROGRAMA ID . SEMI_COLON VARS FUNCTION MAIN

    SEMI_COLON      shift and go to state 4


state 4

    (3) PROG -> PROGRAMA ID SEMI_COLON . VARS FUNCTION MAIN
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 6
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 5
    EMPTY                          shift and go to state 7

state 5

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS . FUNCTION MAIN
    (53) FUNCTION -> . FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (54) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 9
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 8
    EMPTY                          shift and go to state 10

state 6

    (4) VARS -> VAR . TIPO
    (6) TIPO -> . INT VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 11
    EMPTY                          shift and go to state 15

state 7

    (5) VARS -> EMPTY .

    FUNCION         reduce using rule 5 (VARS -> EMPTY .)
    PRINCIPAL       reduce using rule 5 (VARS -> EMPTY .)
    LBRACKET        reduce using rule 5 (VARS -> EMPTY .)


state 8

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION . MAIN
    (2) MAIN -> . PRINCIPAL LPAREN RPAREN BLOQUE

    PRINCIPAL       shift and go to state 17

    MAIN                           shift and go to state 16

state 9

    (53) FUNCTION -> FUNCION . TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (55) TIPO_FUNC -> . INT
    (56) TIPO_FUNC -> . FLOAT
    (57) TIPO_FUNC -> . CHAR
    (58) TIPO_FUNC -> . VOID

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    VOID            shift and go to state 22

    TIPO_FUNC                      shift and go to state 18

state 10

    (54) FUNCTION -> EMPTY .

    PRINCIPAL       reduce using rule 54 (FUNCTION -> EMPTY .)


state 11

    (4) VARS -> VAR TIPO .

    FUNCION         reduce using rule 4 (VARS -> VAR TIPO .)
    PRINCIPAL       reduce using rule 4 (VARS -> VAR TIPO .)
    LBRACKET        reduce using rule 4 (VARS -> VAR TIPO .)


state 12

    (6) TIPO -> INT . VAR_INT SEMI_COLON TIPO
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 23
    LIST_ID                        shift and go to state 24

state 13

    (7) TIPO -> FLOAT . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID COMMA
    (15) VAR_TIPO -> . ID

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 26

state 14

    (8) TIPO -> CHAR . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID COMMA
    (15) VAR_TIPO -> . ID

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 28

state 15

    (9) TIPO -> EMPTY .

    FUNCION         reduce using rule 9 (TIPO -> EMPTY .)
    PRINCIPAL       reduce using rule 9 (TIPO -> EMPTY .)
    LBRACKET        reduce using rule 9 (TIPO -> EMPTY .)


state 16

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN .

    $end            reduce using rule 3 (PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN .)


state 17

    (2) MAIN -> PRINCIPAL . LPAREN RPAREN BLOQUE

    LPAREN          shift and go to state 29


state 18

    (53) FUNCTION -> FUNCION TIPO_FUNC . ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    ID              shift and go to state 30


state 19

    (55) TIPO_FUNC -> INT .

    ID              reduce using rule 55 (TIPO_FUNC -> INT .)


state 20

    (56) TIPO_FUNC -> FLOAT .

    ID              reduce using rule 56 (TIPO_FUNC -> FLOAT .)


state 21

    (57) TIPO_FUNC -> CHAR .

    ID              reduce using rule 57 (TIPO_FUNC -> CHAR .)


state 22

    (58) TIPO_FUNC -> VOID .

    ID              reduce using rule 58 (TIPO_FUNC -> VOID .)


state 23

    (6) TIPO -> INT VAR_INT . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 31


state 24

    (10) VAR_INT -> LIST_ID . COMMA VAR_INT
    (12) VAR_INT -> LIST_ID .

    COMMA           shift and go to state 32
    SEMI_COLON      reduce using rule 12 (VAR_INT -> LIST_ID .)


state 25

    (11) VAR_INT -> ID . COMMA VAR_INT
    (13) VAR_INT -> ID .
    (16) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    COMMA           shift and go to state 33
    SEMI_COLON      reduce using rule 13 (VAR_INT -> ID .)
    LSQ             shift and go to state 34


state 26

    (7) TIPO -> FLOAT VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 35


state 27

    (14) VAR_TIPO -> ID . COMMA
    (15) VAR_TIPO -> ID .

    COMMA           shift and go to state 36
    SEMI_COLON      reduce using rule 15 (VAR_TIPO -> ID .)


state 28

    (8) TIPO -> CHAR VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 37


state 29

    (2) MAIN -> PRINCIPAL LPAREN . RPAREN BLOQUE

    RPAREN          shift and go to state 38


state 30

    (53) FUNCTION -> FUNCION TIPO_FUNC ID . LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    LPAREN          shift and go to state 39


state 31

    (6) TIPO -> INT VAR_INT SEMI_COLON . TIPO
    (6) TIPO -> . INT VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 40
    EMPTY                          shift and go to state 15

state 32

    (10) VAR_INT -> LIST_ID COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    ID              shift and go to state 25

    LIST_ID                        shift and go to state 24
    VAR_INT                        shift and go to state 41

state 33

    (11) VAR_INT -> ID COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 42
    LIST_ID                        shift and go to state 24

state 34

    (16) LIST_ID -> ID LSQ . TIR_EXPRESION RSQ
    (17) LIST_ID -> ID LSQ . TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 44
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 35

    (7) TIPO -> FLOAT VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 55
    EMPTY                          shift and go to state 15

state 36

    (14) VAR_TIPO -> ID COMMA .

    SEMI_COLON      reduce using rule 14 (VAR_TIPO -> ID COMMA .)


state 37

    (8) TIPO -> CHAR VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 56
    EMPTY                          shift and go to state 15

state 38

    (2) MAIN -> PRINCIPAL LPAREN RPAREN . BLOQUE
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 57

state 39

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN . PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (59) PARAMETROS -> . INT ID
    (60) PARAMETROS -> . FLOAT ID
    (61) PARAMETROS -> . CHAR ID
    (62) PARAMETROS -> . COMMA PARAMETROS

    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    CHAR            shift and go to state 62
    COMMA           shift and go to state 63

    PARAMETROS                     shift and go to state 59

state 40

    (6) TIPO -> INT VAR_INT SEMI_COLON TIPO .

    FUNCION         reduce using rule 6 (TIPO -> INT VAR_INT SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 6 (TIPO -> INT VAR_INT SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 6 (TIPO -> INT VAR_INT SEMI_COLON TIPO .)


state 41

    (10) VAR_INT -> LIST_ID COMMA VAR_INT .

    SEMI_COLON      reduce using rule 10 (VAR_INT -> LIST_ID COMMA VAR_INT .)


state 42

    (11) VAR_INT -> ID COMMA VAR_INT .

    SEMI_COLON      reduce using rule 11 (VAR_INT -> ID COMMA VAR_INT .)


state 43

    (34) FIF_EXPRESION -> ID .
    (35) FIF_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (67) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN

    MULT            reduce using rule 34 (FIF_EXPRESION -> ID .)
    DIV             reduce using rule 34 (FIF_EXPRESION -> ID .)
    PLUS            reduce using rule 34 (FIF_EXPRESION -> ID .)
    MINUS           reduce using rule 34 (FIF_EXPRESION -> ID .)
    RSQ             reduce using rule 34 (FIF_EXPRESION -> ID .)
    NOT_EQ          reduce using rule 34 (FIF_EXPRESION -> ID .)
    GREATER_EQ      reduce using rule 34 (FIF_EXPRESION -> ID .)
    LESS_EQ         reduce using rule 34 (FIF_EXPRESION -> ID .)
    GREATER         reduce using rule 34 (FIF_EXPRESION -> ID .)
    LESS            reduce using rule 34 (FIF_EXPRESION -> ID .)
    COMPAR          reduce using rule 34 (FIF_EXPRESION -> ID .)
    AND             reduce using rule 34 (FIF_EXPRESION -> ID .)
    OR              reduce using rule 34 (FIF_EXPRESION -> ID .)
    RPAREN          reduce using rule 34 (FIF_EXPRESION -> ID .)
    COMMA           reduce using rule 34 (FIF_EXPRESION -> ID .)
    SEMI_COLON      reduce using rule 34 (FIF_EXPRESION -> ID .)
    DET             shift and go to state 64
    LSQ             shift and go to state 34
    LPAREN          shift and go to state 65


state 44

    (16) LIST_ID -> ID LSQ TIR_EXPRESION . RSQ
    (17) LIST_ID -> ID LSQ TIR_EXPRESION . RSQ LSQ TIR_EXPRESION RSQ

    RSQ             shift and go to state 66


state 45

    (28) TIR_EXPRESION -> FOR_EXPRESION .
    (29) TIR_EXPRESION -> FOR_EXPRESION . PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> FOR_EXPRESION . MINUS TIR_EXPRESION

    RSQ             reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    NOT_EQ          reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    GREATER_EQ      reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    LESS_EQ         reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    GREATER         reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    LESS            reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    COMPAR          reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    AND             reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    OR              reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    RPAREN          reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    COMMA           reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    SEMI_COLON      reduce using rule 28 (TIR_EXPRESION -> FOR_EXPRESION .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 46

    (31) FOR_EXPRESION -> FIF_EXPRESION .
    (32) FOR_EXPRESION -> FIF_EXPRESION . MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> FIF_EXPRESION . DIV FOR_EXPRESION

    PLUS            reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    MINUS           reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    RSQ             reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    NOT_EQ          reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    GREATER_EQ      reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    LESS_EQ         reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    GREATER         reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    LESS            reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    COMPAR          reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    AND             reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    OR              reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    RPAREN          reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    COMMA           reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    SEMI_COLON      reduce using rule 31 (FOR_EXPRESION -> FIF_EXPRESION .)
    MULT            shift and go to state 69
    DIV             shift and go to state 70


state 47

    (36) FIF_EXPRESION -> LIST_ID .

    MULT            reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    DIV             reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    PLUS            reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    MINUS           reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    RSQ             reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    NOT_EQ          reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    GREATER_EQ      reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    LESS_EQ         reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    GREATER         reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    LESS            reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    COMPAR          reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    AND             reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    OR              reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    RPAREN          reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    COMMA           reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)
    SEMI_COLON      reduce using rule 36 (FIF_EXPRESION -> LIST_ID .)


state 48

    (37) FIF_EXPRESION -> CONSTANTE .

    MULT            reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    DIV             reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    PLUS            reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    MINUS           reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    RSQ             reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    NOT_EQ          reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    GREATER_EQ      reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    LESS_EQ         reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    GREATER         reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    LESS            reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    COMPAR          reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    AND             reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    OR              reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    RPAREN          reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    COMMA           reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)
    SEMI_COLON      reduce using rule 37 (FIF_EXPRESION -> CONSTANTE .)


state 49

    (38) FIF_EXPRESION -> LLAMADA .

    MULT            reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    RSQ             reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    AND             reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    OR              reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    RPAREN          reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    COMMA           reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)
    SEMI_COLON      reduce using rule 38 (FIF_EXPRESION -> LLAMADA .)


state 50

    (39) FIF_EXPRESION -> LPAREN . EXPRESION RPAREN
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    EXPRESION                      shift and go to state 71
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 51

    (40) CONSTANTE -> CTE_I .

    MULT            reduce using rule 40 (CONSTANTE -> CTE_I .)
    DIV             reduce using rule 40 (CONSTANTE -> CTE_I .)
    PLUS            reduce using rule 40 (CONSTANTE -> CTE_I .)
    MINUS           reduce using rule 40 (CONSTANTE -> CTE_I .)
    RSQ             reduce using rule 40 (CONSTANTE -> CTE_I .)
    NOT_EQ          reduce using rule 40 (CONSTANTE -> CTE_I .)
    GREATER_EQ      reduce using rule 40 (CONSTANTE -> CTE_I .)
    LESS_EQ         reduce using rule 40 (CONSTANTE -> CTE_I .)
    GREATER         reduce using rule 40 (CONSTANTE -> CTE_I .)
    LESS            reduce using rule 40 (CONSTANTE -> CTE_I .)
    COMPAR          reduce using rule 40 (CONSTANTE -> CTE_I .)
    AND             reduce using rule 40 (CONSTANTE -> CTE_I .)
    OR              reduce using rule 40 (CONSTANTE -> CTE_I .)
    RPAREN          reduce using rule 40 (CONSTANTE -> CTE_I .)
    COMMA           reduce using rule 40 (CONSTANTE -> CTE_I .)
    SEMI_COLON      reduce using rule 40 (CONSTANTE -> CTE_I .)


state 52

    (41) CONSTANTE -> CTE_F .

    MULT            reduce using rule 41 (CONSTANTE -> CTE_F .)
    DIV             reduce using rule 41 (CONSTANTE -> CTE_F .)
    PLUS            reduce using rule 41 (CONSTANTE -> CTE_F .)
    MINUS           reduce using rule 41 (CONSTANTE -> CTE_F .)
    RSQ             reduce using rule 41 (CONSTANTE -> CTE_F .)
    NOT_EQ          reduce using rule 41 (CONSTANTE -> CTE_F .)
    GREATER_EQ      reduce using rule 41 (CONSTANTE -> CTE_F .)
    LESS_EQ         reduce using rule 41 (CONSTANTE -> CTE_F .)
    GREATER         reduce using rule 41 (CONSTANTE -> CTE_F .)
    LESS            reduce using rule 41 (CONSTANTE -> CTE_F .)
    COMPAR          reduce using rule 41 (CONSTANTE -> CTE_F .)
    AND             reduce using rule 41 (CONSTANTE -> CTE_F .)
    OR              reduce using rule 41 (CONSTANTE -> CTE_F .)
    RPAREN          reduce using rule 41 (CONSTANTE -> CTE_F .)
    COMMA           reduce using rule 41 (CONSTANTE -> CTE_F .)
    SEMI_COLON      reduce using rule 41 (CONSTANTE -> CTE_F .)


state 53

    (42) CONSTANTE -> CTE_C .

    MULT            reduce using rule 42 (CONSTANTE -> CTE_C .)
    DIV             reduce using rule 42 (CONSTANTE -> CTE_C .)
    PLUS            reduce using rule 42 (CONSTANTE -> CTE_C .)
    MINUS           reduce using rule 42 (CONSTANTE -> CTE_C .)
    RSQ             reduce using rule 42 (CONSTANTE -> CTE_C .)
    NOT_EQ          reduce using rule 42 (CONSTANTE -> CTE_C .)
    GREATER_EQ      reduce using rule 42 (CONSTANTE -> CTE_C .)
    LESS_EQ         reduce using rule 42 (CONSTANTE -> CTE_C .)
    GREATER         reduce using rule 42 (CONSTANTE -> CTE_C .)
    LESS            reduce using rule 42 (CONSTANTE -> CTE_C .)
    COMPAR          reduce using rule 42 (CONSTANTE -> CTE_C .)
    AND             reduce using rule 42 (CONSTANTE -> CTE_C .)
    OR              reduce using rule 42 (CONSTANTE -> CTE_C .)
    RPAREN          reduce using rule 42 (CONSTANTE -> CTE_C .)
    COMMA           reduce using rule 42 (CONSTANTE -> CTE_C .)
    SEMI_COLON      reduce using rule 42 (CONSTANTE -> CTE_C .)


state 54

    (43) CONSTANTE -> CTE_S .

    MULT            reduce using rule 43 (CONSTANTE -> CTE_S .)
    DIV             reduce using rule 43 (CONSTANTE -> CTE_S .)
    PLUS            reduce using rule 43 (CONSTANTE -> CTE_S .)
    MINUS           reduce using rule 43 (CONSTANTE -> CTE_S .)
    RSQ             reduce using rule 43 (CONSTANTE -> CTE_S .)
    NOT_EQ          reduce using rule 43 (CONSTANTE -> CTE_S .)
    GREATER_EQ      reduce using rule 43 (CONSTANTE -> CTE_S .)
    LESS_EQ         reduce using rule 43 (CONSTANTE -> CTE_S .)
    GREATER         reduce using rule 43 (CONSTANTE -> CTE_S .)
    LESS            reduce using rule 43 (CONSTANTE -> CTE_S .)
    COMPAR          reduce using rule 43 (CONSTANTE -> CTE_S .)
    AND             reduce using rule 43 (CONSTANTE -> CTE_S .)
    OR              reduce using rule 43 (CONSTANTE -> CTE_S .)
    RPAREN          reduce using rule 43 (CONSTANTE -> CTE_S .)
    COMMA           reduce using rule 43 (CONSTANTE -> CTE_S .)
    SEMI_COLON      reduce using rule 43 (CONSTANTE -> CTE_S .)


state 55

    (7) TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 7 (TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 7 (TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 7 (TIPO -> FLOAT VAR_TIPO SEMI_COLON TIPO .)


state 56

    (8) TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 8 (TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 8 (TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 8 (TIPO -> CHAR VAR_TIPO SEMI_COLON TIPO .)


state 57

    (2) MAIN -> PRINCIPAL LPAREN RPAREN BLOQUE .

    $end            reduce using rule 2 (MAIN -> PRINCIPAL LPAREN RPAREN BLOQUE .)


state 58

    (44) BLOQUE -> LBRACKET . OPCION_BLOQUE RBRACKET
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    OPCION_BLOQUE                  shift and go to state 74
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 59

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS . RPAREN VARS BLOQUE FUNCTION

    RPAREN          shift and go to state 90


state 60

    (59) PARAMETROS -> INT . ID

    ID              shift and go to state 91


state 61

    (60) PARAMETROS -> FLOAT . ID

    ID              shift and go to state 92


state 62

    (61) PARAMETROS -> CHAR . ID

    ID              shift and go to state 93


state 63

    (62) PARAMETROS -> COMMA . PARAMETROS
    (59) PARAMETROS -> . INT ID
    (60) PARAMETROS -> . FLOAT ID
    (61) PARAMETROS -> . CHAR ID
    (62) PARAMETROS -> . COMMA PARAMETROS

    INT             shift and go to state 60
    FLOAT           shift and go to state 61
    CHAR            shift and go to state 62
    COMMA           shift and go to state 63

    PARAMETROS                     shift and go to state 94

state 64

    (35) FIF_EXPRESION -> ID DET .

    MULT            reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    DIV             reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    PLUS            reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    MINUS           reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    RSQ             reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    NOT_EQ          reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    GREATER_EQ      reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    LESS_EQ         reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    GREATER         reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    LESS            reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    COMPAR          reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    AND             reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    OR              reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    RPAREN          reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    COMMA           reduce using rule 35 (FIF_EXPRESION -> ID DET .)
    SEMI_COLON      reduce using rule 35 (FIF_EXPRESION -> ID DET .)


state 65

    (67) LLAMADA -> ID LPAREN . TIPO_PARAMETROS RPAREN
    (68) TIPO_PARAMETROS -> . EXPRESION
    (69) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIPO_PARAMETROS                shift and go to state 95
    EXPRESION                      shift and go to state 96
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 66

    (16) LIST_ID -> ID LSQ TIR_EXPRESION RSQ .
    (17) LIST_ID -> ID LSQ TIR_EXPRESION RSQ . LSQ TIR_EXPRESION RSQ

    COMMA           reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    MULT            reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    DIV             reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    PLUS            reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    MINUS           reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    RSQ             reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    GREATER         reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    LESS            reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    COMPAR          reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    AND             reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    OR              reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    RPAREN          reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    EQ              reduce using rule 16 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ .)
    LSQ             shift and go to state 97


state 67

    (29) TIR_EXPRESION -> FOR_EXPRESION PLUS . TIR_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    FOR_EXPRESION                  shift and go to state 45
    TIR_EXPRESION                  shift and go to state 98
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 68

    (30) TIR_EXPRESION -> FOR_EXPRESION MINUS . TIR_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    FOR_EXPRESION                  shift and go to state 45
    TIR_EXPRESION                  shift and go to state 99
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 69

    (32) FOR_EXPRESION -> FIF_EXPRESION MULT . FOR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    FIF_EXPRESION                  shift and go to state 46
    FOR_EXPRESION                  shift and go to state 100
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 70

    (33) FOR_EXPRESION -> FIF_EXPRESION DIV . FOR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    FIF_EXPRESION                  shift and go to state 46
    FOR_EXPRESION                  shift and go to state 101
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 71

    (39) FIF_EXPRESION -> LPAREN EXPRESION . RPAREN

    RPAREN          shift and go to state 102


state 72

    (18) EXPRESION -> SEC_EXPRESION .
    (19) EXPRESION -> SEC_EXPRESION . COMPAR EXPRESION
    (20) EXPRESION -> SEC_EXPRESION . AND EXPRESION
    (21) EXPRESION -> SEC_EXPRESION . OR EXPRESION

    RPAREN          reduce using rule 18 (EXPRESION -> SEC_EXPRESION .)
    COMMA           reduce using rule 18 (EXPRESION -> SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 18 (EXPRESION -> SEC_EXPRESION .)
    COMPAR          shift and go to state 103
    AND             shift and go to state 104
    OR              shift and go to state 105


state 73

    (22) SEC_EXPRESION -> TIR_EXPRESION .
    (23) SEC_EXPRESION -> TIR_EXPRESION . NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> TIR_EXPRESION . GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> TIR_EXPRESION . LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> TIR_EXPRESION . GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> TIR_EXPRESION . LESS SEC_EXPRESION

    COMPAR          reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    AND             reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    OR              reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    RPAREN          reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    COMMA           reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    SEMI_COLON      reduce using rule 22 (SEC_EXPRESION -> TIR_EXPRESION .)
    NOT_EQ          shift and go to state 106
    GREATER_EQ      shift and go to state 107
    LESS_EQ         shift and go to state 108
    GREATER         shift and go to state 109
    LESS            shift and go to state 110


state 74

    (44) BLOQUE -> LBRACKET OPCION_BLOQUE . RBRACKET

    RBRACKET        shift and go to state 111


state 75

    (45) OPCION_BLOQUE -> LECTURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 112


state 76

    (46) OPCION_BLOQUE -> ESCRITURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 113


state 77

    (47) OPCION_BLOQUE -> LLAMADA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 114


state 78

    (48) OPCION_BLOQUE -> ESTATUTO . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESTATUTO                       shift and go to state 78
    OPCION_BLOQUE                  shift and go to state 115
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 79

    (49) OPCION_BLOQUE -> MIENTRAS_CICLO . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    MIENTRAS_CICLO                 shift and go to state 79
    OPCION_BLOQUE                  shift and go to state 116
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 80

    (50) OPCION_BLOQUE -> DESDE_CICLO . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    DESDE_CICLO                    shift and go to state 80
    OPCION_BLOQUE                  shift and go to state 117
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 81

    (51) OPCION_BLOQUE -> ASIGNACION . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 118


state 82

    (52) OPCION_BLOQUE -> EMPTY .

    RBRACKET        reduce using rule 52 (OPCION_BLOQUE -> EMPTY .)


state 83

    (65) LECTURA -> LEE . LPAREN ID RPAREN

    LPAREN          shift and go to state 119


state 84

    (67) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN
    (73) ASIGNACION -> ID . EQ EXPRESION
    (16) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> ID . LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LPAREN          shift and go to state 65
    EQ              shift and go to state 120
    LSQ             shift and go to state 34


state 85

    (66) ESCRITURA -> ESCRIBE . LPAREN TIPO_PARAMETROS RPAREN

    LPAREN          shift and go to state 121


state 86

    (70) ESTATUTO -> SI . LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO

    LPAREN          shift and go to state 122


state 87

    (64) MIENTRAS_CICLO -> MIENTRAS . LPAREN EXPRESION RPAREN HAZ BLOQUE

    LPAREN          shift and go to state 123


state 88

    (63) DESDE_CICLO -> DESDE . ID EQ CTE_I HASTA CTE_I HACER BLOQUE

    ID              shift and go to state 124


state 89

    (74) ASIGNACION -> LIST_ID . EQ EXPRESION

    EQ              shift and go to state 125


state 90

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN . VARS BLOQUE FUNCTION
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 126
    EMPTY                          shift and go to state 7

state 91

    (59) PARAMETROS -> INT ID .

    RPAREN          reduce using rule 59 (PARAMETROS -> INT ID .)


state 92

    (60) PARAMETROS -> FLOAT ID .

    RPAREN          reduce using rule 60 (PARAMETROS -> FLOAT ID .)


state 93

    (61) PARAMETROS -> CHAR ID .

    RPAREN          reduce using rule 61 (PARAMETROS -> CHAR ID .)


state 94

    (62) PARAMETROS -> COMMA PARAMETROS .

    RPAREN          reduce using rule 62 (PARAMETROS -> COMMA PARAMETROS .)


state 95

    (67) LLAMADA -> ID LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 127


state 96

    (68) TIPO_PARAMETROS -> EXPRESION .
    (69) TIPO_PARAMETROS -> EXPRESION . COMMA TIPO_PARAMETROS

    RPAREN          reduce using rule 68 (TIPO_PARAMETROS -> EXPRESION .)
    COMMA           shift and go to state 128


state 97

    (17) LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ . TIR_EXPRESION RSQ
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 129
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 98

    (29) TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .

    RSQ             reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    NOT_EQ          reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    GREATER_EQ      reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    LESS_EQ         reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    GREATER         reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    LESS            reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    COMPAR          reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    AND             reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    OR              reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    RPAREN          reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    COMMA           reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)
    SEMI_COLON      reduce using rule 29 (TIR_EXPRESION -> FOR_EXPRESION PLUS TIR_EXPRESION .)


state 99

    (30) TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .

    RSQ             reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    NOT_EQ          reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    GREATER_EQ      reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    LESS_EQ         reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    GREATER         reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    LESS            reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    COMPAR          reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    AND             reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    OR              reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    RPAREN          reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    COMMA           reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)
    SEMI_COLON      reduce using rule 30 (TIR_EXPRESION -> FOR_EXPRESION MINUS TIR_EXPRESION .)


state 100

    (32) FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .

    PLUS            reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    MINUS           reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    RSQ             reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    NOT_EQ          reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    GREATER_EQ      reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    LESS_EQ         reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    GREATER         reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    LESS            reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    COMPAR          reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    AND             reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    OR              reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    RPAREN          reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    COMMA           reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)
    SEMI_COLON      reduce using rule 32 (FOR_EXPRESION -> FIF_EXPRESION MULT FOR_EXPRESION .)


state 101

    (33) FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .

    PLUS            reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    MINUS           reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    RSQ             reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    NOT_EQ          reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    GREATER_EQ      reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    LESS_EQ         reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    GREATER         reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    LESS            reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    COMPAR          reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    AND             reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    OR              reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    RPAREN          reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    COMMA           reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)
    SEMI_COLON      reduce using rule 33 (FOR_EXPRESION -> FIF_EXPRESION DIV FOR_EXPRESION .)


state 102

    (39) FIF_EXPRESION -> LPAREN EXPRESION RPAREN .

    MULT            reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    DIV             reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    PLUS            reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    MINUS           reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    RSQ             reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    NOT_EQ          reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    GREATER_EQ      reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    LESS_EQ         reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    GREATER         reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    LESS            reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    COMPAR          reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    AND             reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    OR              reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    RPAREN          reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    COMMA           reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)
    SEMI_COLON      reduce using rule 39 (FIF_EXPRESION -> LPAREN EXPRESION RPAREN .)


state 103

    (19) EXPRESION -> SEC_EXPRESION COMPAR . EXPRESION
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    SEC_EXPRESION                  shift and go to state 72
    EXPRESION                      shift and go to state 130
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 104

    (20) EXPRESION -> SEC_EXPRESION AND . EXPRESION
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    SEC_EXPRESION                  shift and go to state 72
    EXPRESION                      shift and go to state 131
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 105

    (21) EXPRESION -> SEC_EXPRESION OR . EXPRESION
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    SEC_EXPRESION                  shift and go to state 72
    EXPRESION                      shift and go to state 132
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 106

    (23) SEC_EXPRESION -> TIR_EXPRESION NOT_EQ . SEC_EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 73
    SEC_EXPRESION                  shift and go to state 133
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 107

    (24) SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ . SEC_EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 73
    SEC_EXPRESION                  shift and go to state 134
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 108

    (25) SEC_EXPRESION -> TIR_EXPRESION LESS_EQ . SEC_EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 73
    SEC_EXPRESION                  shift and go to state 135
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 109

    (26) SEC_EXPRESION -> TIR_EXPRESION GREATER . SEC_EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 73
    SEC_EXPRESION                  shift and go to state 136
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 110

    (27) SEC_EXPRESION -> TIR_EXPRESION LESS . SEC_EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIR_EXPRESION                  shift and go to state 73
    SEC_EXPRESION                  shift and go to state 137
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 111

    (44) BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .

    $end            reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    FUNCION         reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    PRINCIPAL       reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SINO            reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LEE             reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ESCRIBE         reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ID              reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SI              reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    MIENTRAS        reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    DESDE           reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RBRACKET        reduce using rule 44 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)


state 112

    (45) OPCION_BLOQUE -> LECTURA SEMI_COLON . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    LECTURA                        shift and go to state 75
    OPCION_BLOQUE                  shift and go to state 138
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 113

    (46) OPCION_BLOQUE -> ESCRITURA SEMI_COLON . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESCRITURA                      shift and go to state 76
    OPCION_BLOQUE                  shift and go to state 139
    LECTURA                        shift and go to state 75
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 114

    (47) OPCION_BLOQUE -> LLAMADA SEMI_COLON . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    LLAMADA                        shift and go to state 77
    OPCION_BLOQUE                  shift and go to state 140
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    ASIGNACION                     shift and go to state 81
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 115

    (48) OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE .

    RBRACKET        reduce using rule 48 (OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE .)


state 116

    (49) OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 49 (OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .)


state 117

    (50) OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 50 (OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .)


state 118

    (51) OPCION_BLOQUE -> ASIGNACION SEMI_COLON . OPCION_BLOQUE
    (45) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (46) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (47) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (48) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . EMPTY
    (65) LECTURA -> . LEE LPAREN ID RPAREN
    (66) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (70) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (64) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (63) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (73) ASIGNACION -> . ID EQ EXPRESION
    (74) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ

    LEE             shift and go to state 83
    ESCRIBE         shift and go to state 85
    ID              shift and go to state 84
    SI              shift and go to state 86
    MIENTRAS        shift and go to state 87
    DESDE           shift and go to state 88
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ASIGNACION                     shift and go to state 81
    OPCION_BLOQUE                  shift and go to state 141
    LECTURA                        shift and go to state 75
    ESCRITURA                      shift and go to state 76
    LLAMADA                        shift and go to state 77
    ESTATUTO                       shift and go to state 78
    MIENTRAS_CICLO                 shift and go to state 79
    DESDE_CICLO                    shift and go to state 80
    EMPTY                          shift and go to state 82
    LIST_ID                        shift and go to state 89

state 119

    (65) LECTURA -> LEE LPAREN . ID RPAREN

    ID              shift and go to state 142


state 120

    (73) ASIGNACION -> ID EQ . EXPRESION
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    EXPRESION                      shift and go to state 143
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 121

    (66) ESCRITURA -> ESCRIBE LPAREN . TIPO_PARAMETROS RPAREN
    (68) TIPO_PARAMETROS -> . EXPRESION
    (69) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    TIPO_PARAMETROS                shift and go to state 144
    EXPRESION                      shift and go to state 96
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 122

    (70) ESTATUTO -> SI LPAREN . EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    EXPRESION                      shift and go to state 145
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 123

    (64) MIENTRAS_CICLO -> MIENTRAS LPAREN . EXPRESION RPAREN HAZ BLOQUE
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    EXPRESION                      shift and go to state 146
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 124

    (63) DESDE_CICLO -> DESDE ID . EQ CTE_I HASTA CTE_I HACER BLOQUE

    EQ              shift and go to state 147


state 125

    (74) ASIGNACION -> LIST_ID EQ . EXPRESION
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    LIST_ID                        shift and go to state 47
    EXPRESION                      shift and go to state 148
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 126

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS . BLOQUE FUNCTION
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 149

state 127

    (67) LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .

    MULT            reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    DIV             reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    PLUS            reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    MINUS           reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RSQ             reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    NOT_EQ          reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER_EQ      reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS_EQ         reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER         reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS            reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMPAR          reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    AND             reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    OR              reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RPAREN          reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    SEMI_COLON      reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMMA           reduce using rule 67 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)


state 128

    (69) TIPO_PARAMETROS -> EXPRESION COMMA . TIPO_PARAMETROS
    (68) TIPO_PARAMETROS -> . EXPRESION
    (69) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . SEC_EXPRESION
    (19) EXPRESION -> . SEC_EXPRESION COMPAR EXPRESION
    (20) EXPRESION -> . SEC_EXPRESION AND EXPRESION
    (21) EXPRESION -> . SEC_EXPRESION OR EXPRESION
    (22) SEC_EXPRESION -> . TIR_EXPRESION
    (23) SEC_EXPRESION -> . TIR_EXPRESION NOT_EQ SEC_EXPRESION
    (24) SEC_EXPRESION -> . TIR_EXPRESION GREATER_EQ SEC_EXPRESION
    (25) SEC_EXPRESION -> . TIR_EXPRESION LESS_EQ SEC_EXPRESION
    (26) SEC_EXPRESION -> . TIR_EXPRESION GREATER SEC_EXPRESION
    (27) SEC_EXPRESION -> . TIR_EXPRESION LESS SEC_EXPRESION
    (28) TIR_EXPRESION -> . FOR_EXPRESION
    (29) TIR_EXPRESION -> . FOR_EXPRESION PLUS TIR_EXPRESION
    (30) TIR_EXPRESION -> . FOR_EXPRESION MINUS TIR_EXPRESION
    (31) FOR_EXPRESION -> . FIF_EXPRESION
    (32) FOR_EXPRESION -> . FIF_EXPRESION MULT FOR_EXPRESION
    (33) FOR_EXPRESION -> . FIF_EXPRESION DIV FOR_EXPRESION
    (34) FIF_EXPRESION -> . ID
    (35) FIF_EXPRESION -> . ID DET
    (36) FIF_EXPRESION -> . LIST_ID
    (37) FIF_EXPRESION -> . CONSTANTE
    (38) FIF_EXPRESION -> . LLAMADA
    (39) FIF_EXPRESION -> . LPAREN EXPRESION RPAREN
    (16) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ
    (17) LIST_ID -> . ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ
    (40) CONSTANTE -> . CTE_I
    (41) CONSTANTE -> . CTE_F
    (42) CONSTANTE -> . CTE_C
    (43) CONSTANTE -> . CTE_S
    (67) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN

    ID              shift and go to state 43
    LPAREN          shift and go to state 50
    CTE_I           shift and go to state 51
    CTE_F           shift and go to state 52
    CTE_C           shift and go to state 53
    CTE_S           shift and go to state 54

    EXPRESION                      shift and go to state 96
    TIPO_PARAMETROS                shift and go to state 150
    SEC_EXPRESION                  shift and go to state 72
    TIR_EXPRESION                  shift and go to state 73
    FOR_EXPRESION                  shift and go to state 45
    FIF_EXPRESION                  shift and go to state 46
    LIST_ID                        shift and go to state 47
    CONSTANTE                      shift and go to state 48
    LLAMADA                        shift and go to state 49

state 129

    (17) LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION . RSQ

    RSQ             shift and go to state 151


state 130

    (19) EXPRESION -> SEC_EXPRESION COMPAR EXPRESION .

    RPAREN          reduce using rule 19 (EXPRESION -> SEC_EXPRESION COMPAR EXPRESION .)
    COMMA           reduce using rule 19 (EXPRESION -> SEC_EXPRESION COMPAR EXPRESION .)
    SEMI_COLON      reduce using rule 19 (EXPRESION -> SEC_EXPRESION COMPAR EXPRESION .)


state 131

    (20) EXPRESION -> SEC_EXPRESION AND EXPRESION .

    RPAREN          reduce using rule 20 (EXPRESION -> SEC_EXPRESION AND EXPRESION .)
    COMMA           reduce using rule 20 (EXPRESION -> SEC_EXPRESION AND EXPRESION .)
    SEMI_COLON      reduce using rule 20 (EXPRESION -> SEC_EXPRESION AND EXPRESION .)


state 132

    (21) EXPRESION -> SEC_EXPRESION OR EXPRESION .

    RPAREN          reduce using rule 21 (EXPRESION -> SEC_EXPRESION OR EXPRESION .)
    COMMA           reduce using rule 21 (EXPRESION -> SEC_EXPRESION OR EXPRESION .)
    SEMI_COLON      reduce using rule 21 (EXPRESION -> SEC_EXPRESION OR EXPRESION .)


state 133

    (23) SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .

    COMPAR          reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)
    AND             reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)
    OR              reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)
    RPAREN          reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)
    COMMA           reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 23 (SEC_EXPRESION -> TIR_EXPRESION NOT_EQ SEC_EXPRESION .)


state 134

    (24) SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .

    COMPAR          reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)
    AND             reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)
    OR              reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)
    RPAREN          reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)
    COMMA           reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 24 (SEC_EXPRESION -> TIR_EXPRESION GREATER_EQ SEC_EXPRESION .)


state 135

    (25) SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .

    COMPAR          reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)
    AND             reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)
    OR              reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)
    RPAREN          reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)
    COMMA           reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 25 (SEC_EXPRESION -> TIR_EXPRESION LESS_EQ SEC_EXPRESION .)


state 136

    (26) SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .

    COMPAR          reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)
    AND             reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)
    OR              reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)
    RPAREN          reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)
    COMMA           reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 26 (SEC_EXPRESION -> TIR_EXPRESION GREATER SEC_EXPRESION .)


state 137

    (27) SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .

    COMPAR          reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)
    AND             reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)
    OR              reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)
    RPAREN          reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)
    COMMA           reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)
    SEMI_COLON      reduce using rule 27 (SEC_EXPRESION -> TIR_EXPRESION LESS SEC_EXPRESION .)


state 138

    (45) OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 45 (OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .)


state 139

    (46) OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 46 (OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .)


state 140

    (47) OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 47 (OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .)


state 141

    (51) OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 51 (OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .)


state 142

    (65) LECTURA -> LEE LPAREN ID . RPAREN

    RPAREN          shift and go to state 152


state 143

    (73) ASIGNACION -> ID EQ EXPRESION .

    SEMI_COLON      reduce using rule 73 (ASIGNACION -> ID EQ EXPRESION .)


state 144

    (66) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 153


state 145

    (70) ESTATUTO -> SI LPAREN EXPRESION . RPAREN ENTONCES BLOQUE ESTATUTO_SINO

    RPAREN          shift and go to state 154


state 146

    (64) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION . RPAREN HAZ BLOQUE

    RPAREN          shift and go to state 155


state 147

    (63) DESDE_CICLO -> DESDE ID EQ . CTE_I HASTA CTE_I HACER BLOQUE

    CTE_I           shift and go to state 156


state 148

    (74) ASIGNACION -> LIST_ID EQ EXPRESION .

    SEMI_COLON      reduce using rule 74 (ASIGNACION -> LIST_ID EQ EXPRESION .)


state 149

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE . FUNCTION
    (53) FUNCTION -> . FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (54) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 9
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 157
    EMPTY                          shift and go to state 10

state 150

    (69) TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .

    RPAREN          reduce using rule 69 (TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .)


state 151

    (17) LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .

    COMMA           reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    MULT            reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    DIV             reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    PLUS            reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    MINUS           reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    RSQ             reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    GREATER         reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    LESS            reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    COMPAR          reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    AND             reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    OR              reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    RPAREN          reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)
    EQ              reduce using rule 17 (LIST_ID -> ID LSQ TIR_EXPRESION RSQ LSQ TIR_EXPRESION RSQ .)


state 152

    (65) LECTURA -> LEE LPAREN ID RPAREN .

    SEMI_COLON      reduce using rule 65 (LECTURA -> LEE LPAREN ID RPAREN .)


state 153

    (66) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .

    SEMI_COLON      reduce using rule 66 (ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .)


state 154

    (70) ESTATUTO -> SI LPAREN EXPRESION RPAREN . ENTONCES BLOQUE ESTATUTO_SINO

    ENTONCES        shift and go to state 158


state 155

    (64) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN . HAZ BLOQUE

    HAZ             shift and go to state 159


state 156

    (63) DESDE_CICLO -> DESDE ID EQ CTE_I . HASTA CTE_I HACER BLOQUE

    HASTA           shift and go to state 160


state 157

    (53) FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .

    PRINCIPAL       reduce using rule 53 (FUNCTION -> FUNCION TIPO_FUNC ID LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .)


state 158

    (70) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES . BLOQUE ESTATUTO_SINO
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 161

state 159

    (64) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ . BLOQUE
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 162

state 160

    (63) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA . CTE_I HACER BLOQUE

    CTE_I           shift and go to state 163


state 161

    (70) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE . ESTATUTO_SINO
    (71) ESTATUTO_SINO -> . SINO BLOQUE
    (72) ESTATUTO_SINO -> . EMPTY
    (1) EMPTY -> .

    SINO            shift and go to state 165
    LEE             reduce using rule 1 (EMPTY -> .)
    ESCRIBE         reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    SI              reduce using rule 1 (EMPTY -> .)
    MIENTRAS        reduce using rule 1 (EMPTY -> .)
    DESDE           reduce using rule 1 (EMPTY -> .)
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESTATUTO_SINO                  shift and go to state 164
    EMPTY                          shift and go to state 166

state 162

    (64) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .

    LEE             reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    ESCRIBE         reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    ID              reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    SI              reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    MIENTRAS        reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    DESDE           reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    RBRACKET        reduce using rule 64 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)


state 163

    (63) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I . HACER BLOQUE

    HACER           shift and go to state 167


state 164

    (70) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .

    LEE             reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    ESCRIBE         reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    ID              reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    SI              reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    MIENTRAS        reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    DESDE           reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    RBRACKET        reduce using rule 70 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)


state 165

    (71) ESTATUTO_SINO -> SINO . BLOQUE
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 168

state 166

    (72) ESTATUTO_SINO -> EMPTY .

    LEE             reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    ESCRIBE         reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    ID              reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    SI              reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    MIENTRAS        reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    DESDE           reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)
    RBRACKET        reduce using rule 72 (ESTATUTO_SINO -> EMPTY .)


state 167

    (63) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER . BLOQUE
    (44) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 58

    BLOQUE                         shift and go to state 169

state 168

    (71) ESTATUTO_SINO -> SINO BLOQUE .

    LEE             reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    ESCRIBE         reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    ID              reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    SI              reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    MIENTRAS        reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    DESDE           reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)
    RBRACKET        reduce using rule 71 (ESTATUTO_SINO -> SINO BLOQUE .)


state 169

    (63) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .

    LEE             reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ESCRIBE         reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ID              reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    SI              reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    MIENTRAS        reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    DESDE           reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    RBRACKET        reduce using rule 63 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)

