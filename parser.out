Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DOT
    INV
    NULL
    TRAN

Grammar

Rule 0     S' -> PROG
Rule 1     EMPTY -> <empty>
Rule 2     MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE
Rule 3     PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN
Rule 4     VARS -> VAR TIPO
Rule 5     VARS -> EMPTY
Rule 6     TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO
Rule 7     TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
Rule 8     TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
Rule 9     TIPO -> EMPTY
Rule 10    VAR_INT -> LIST_ID COMMA VAR_INT
Rule 11    VAR_INT -> ID r_new_variable COMMA VAR_INT
Rule 12    VAR_INT -> LIST_ID
Rule 13    VAR_INT -> ID r_new_variable
Rule 14    VAR_TIPO -> ID r_new_variable COMMA
Rule 15    VAR_TIPO -> ID r_new_variable
Rule 16    LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
Rule 17    LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
Rule 18    EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
Rule 19    EXPRESION_AUX -> COMPAR r_new_operator EXPRESION
Rule 20    EXPRESION_AUX -> AND r_new_operator EXPRESION
Rule 21    EXPRESION_AUX -> OR r_new_operator EXPRESION
Rule 22    EXPRESION_AUX -> EMPTY
Rule 23    TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
Rule 24    TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION
Rule 25    TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION
Rule 26    TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION
Rule 27    TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION
Rule 28    TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION
Rule 29    TLEVEL_EXPRESION_AUX -> EMPTY
Rule 30    SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
Rule 31    SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION
Rule 32    SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION
Rule 33    SLEVEL_EXPRESION_AUX -> EMPTY
Rule 34    FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
Rule 35    FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION
Rule 36    FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION
Rule 37    FLEVEL_EXPRESION_AUX -> EMPTY
Rule 38    VALUE_EXPRESION -> ID r_new_id
Rule 39    VALUE_EXPRESION -> ID DET
Rule 40    VALUE_EXPRESION -> LIST_ID
Rule 41    VALUE_EXPRESION -> CONSTANTE
Rule 42    VALUE_EXPRESION -> LLAMADA
Rule 43    VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
Rule 44    CONSTANTE -> CTE_I r_new_constant
Rule 45    CONSTANTE -> CTE_F r_new_constant
Rule 46    CONSTANTE -> CTE_C r_new_constant
Rule 47    CONSTANTE -> CTE_S r_new_constant
Rule 48    BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET
Rule 49    OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE
Rule 50    OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE
Rule 51    OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE
Rule 52    OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE
Rule 53    OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE
Rule 54    OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE
Rule 55    OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE
Rule 56    OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE
Rule 57    OPCION_BLOQUE -> EMPTY
Rule 58    FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
Rule 59    FUNCTION -> EMPTY
Rule 60    TIPO_FUNC -> INT r_set_fun_type
Rule 61    TIPO_FUNC -> FLOAT r_set_fun_type
Rule 62    TIPO_FUNC -> CHAR r_set_fun_type
Rule 63    TIPO_FUNC -> VOID r_set_fun_type
Rule 64    PARAMETROS -> AUX_PARAM
Rule 65    PARAMETROS -> EMPTY
Rule 66    AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 67    AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 68    AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 69    NEXT_PARAM -> COMMA AUX_PARAM
Rule 70    NEXT_PARAM -> EMPTY
Rule 71    DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
Rule 72    MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
Rule 73    LECTURA -> LEE LPAREN ID RPAREN
Rule 74    ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
Rule 75    LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
Rule 76    TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX
Rule 77    TIPO_PARAMETROS -> EMPTY
Rule 78    TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter
Rule 79    TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX
Rule 80    IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
Rule 81    IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
Rule 82    ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal
Rule 83    ASIGNACION_AUX -> EQ r_new_operator ASIGNACION
Rule 84    ASIGNACION_AUX -> EMPTY
Rule 85    r_new_id -> <empty>
Rule 86    r_new_constant -> <empty>
Rule 87    r_new_lparen -> <empty>
Rule 88    r_new_rparen -> <empty>
Rule 89    r_new_operator -> <empty>
Rule 90    r_new_quadruple_flevel -> <empty>
Rule 91    r_new_quadruple_slevel -> <empty>
Rule 92    r_new_quadruple_tlevel -> <empty>
Rule 93    r_new_quadruple -> <empty>
Rule 94    r_new_equal -> <empty>
Rule 95    r_new_goto -> <empty>
Rule 96    r_complete_goto -> <empty>
Rule 97    r_new_gotof -> <empty>
Rule 98    r_complete_gotof -> <empty>
Rule 99    r_new_migajita -> <empty>
Rule 100   r_new_id_for -> <empty>
Rule 101   r_compara_for -> <empty>
Rule 102   r_update_for -> <empty>
Rule 103   r_clear_for -> <empty>
Rule 104   r_new_function -> <empty>
Rule 105   r_insert_type -> <empty>
Rule 106   r_set_fun_type -> <empty>
Rule 107   r_set_fun_name -> <empty>
Rule 108   r_new_vartable -> <empty>
Rule 109   r_end_function -> <empty>
Rule 110   r_verify_function -> <empty>
Rule 111   r_generate_era -> <empty>
Rule 112   r_verify_parameter -> <empty>
Rule 113   r_next_parameter -> <empty>
Rule 114   r_verify_last_parameter -> <empty>
Rule 115   r_generate_gosub -> <empty>
Rule 116   r_set_var_type -> <empty>
Rule 117   r_new_variable -> <empty>
Rule 118   r_change_local_context -> <empty>
Rule 119   r_change_global_context -> <empty>
Rule 120   r_display_var_table -> <empty>
Rule 121   push_type -> <empty>
Rule 122   push_func -> <empty>
Rule 123   push_var -> <empty>
Rule 124   push_main -> <empty>

Terminals, with rules where they appear

AND                  : 20
CHAR                 : 8 62 68
COLON                : 
COMMA                : 10 11 14 69 79
COMMENT              : 
COMPAR               : 19
CTE_C                : 46
CTE_F                : 45
CTE_I                : 44 71 71
CTE_S                : 47
DESDE                : 71
DET                  : 39
DIV                  : 36
DOT                  : 
ENTONCES             : 80 81
EQ                   : 71 83
ESCRIBE              : 74
FLOAT                : 7 61 67
FUNCION              : 58
GREATER              : 27
GREATER_EQ           : 25
HACER                : 71
HASTA                : 71
HAZ                  : 72
ID                   : 3 11 13 14 15 16 17 38 39 58 66 67 68 71 73 75
INT                  : 6 60 66
INV                  : 
LBRACKET             : 48
LEE                  : 73
LESS                 : 28
LESS_EQ              : 26
LPAREN               : 2 43 58 72 73 74 75 80 81
LSQ                  : 16 17 17
MIENTRAS             : 72
MINUS                : 32
MULT                 : 35
NOT_EQ               : 24
NULL                 : 
OR                   : 21
PLUS                 : 31
PRINCIPAL            : 2
PROGRAMA             : 3
RBRACKET             : 48
RPAREN               : 2 43 58 72 73 74 75 80 81
RSQ                  : 16 17 17
SEMI_COLON           : 3 6 7 8 49 50 51 56
SI                   : 80 81
SINO                 : 81
TRAN                 : 
VAR                  : 4
VOID                 : 63
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 56 83
ASIGNACION_AUX       : 82
AUX_PARAM            : 64 69
BLOQUE               : 2 58 71 72 80 81 81
CONSTANTE            : 41
DESDE_CICLO          : 55
EMPTY                : 5 9 22 29 33 37 57 59 65 70 77 84
ESCRITURA            : 50
EXPRESION            : 19 20 21 43 72 78 79 80 81 82
EXPRESION_AUX        : 18
FLEVEL_EXPRESION     : 30 35 36
FLEVEL_EXPRESION_AUX : 34
FUNCTION             : 3 58
IF_ELSE_STMT         : 53
IF_STMT              : 52
LECTURA              : 49
LIST_ID              : 10 12 40
LLAMADA              : 42 51
MAIN                 : 3
MIENTRAS_CICLO       : 54
NEXT_PARAM           : 66 67 68
OPCION_BLOQUE        : 48 49 50 51 52 53 54 55 56
PARAMETROS           : 58
PROG                 : 0
SLEVEL_EXPRESION     : 16 17 17 23 31 32
SLEVEL_EXPRESION_AUX : 30
TIPO                 : 4 6 7 8
TIPO_FUNC            : 58
TIPO_PARAMETROS      : 74 75
TIPO_PARAMETROS_AUX  : 76 79
TLEVEL_EXPRESION     : 18 24 25 26 27 28
TLEVEL_EXPRESION_AUX : 23
VALUE_EXPRESION      : 34
VARS                 : 3 58
VAR_INT              : 6 10 11
VAR_TIPO             : 7 8
push_func            : 
push_main            : 2
push_type            : 
push_var             : 
r_change_global_context : 3
r_change_local_context : 3
r_clear_for          : 71
r_compara_for        : 71
r_complete_goto      : 3 81
r_complete_gotof     : 71 72 80 81
r_display_var_table  : 3
r_end_function       : 58
r_generate_era       : 75
r_generate_gosub     : 75
r_insert_type        : 66 67 68
r_new_constant       : 44 45 46 47 71 71
r_new_equal          : 71 82
r_new_function       : 58
r_new_goto           : 3 71 72 81
r_new_gotof          : 71 72 80 81
r_new_id             : 38
r_new_id_for         : 71
r_new_lparen         : 43
r_new_migajita       : 71 72
r_new_operator       : 19 20 21 24 25 26 27 28 31 32 35 36 71 83
r_new_quadruple      : 18
r_new_quadruple_flevel : 34
r_new_quadruple_slevel : 30
r_new_quadruple_tlevel : 23
r_new_rparen         : 43
r_new_variable       : 11 13 14 15 16 17 66 67 68
r_new_vartable       : 58
r_next_parameter     : 79
r_set_fun_name       : 58
r_set_fun_type       : 60 61 62 63
r_set_var_type       : 6 7 8 66 67 68
r_update_for         : 71
r_verify_function    : 75
r_verify_last_parameter : 75
r_verify_parameter   : 78 79

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (3) PROG -> . r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN
    (95) r_new_goto -> .

    PROGRAMA        reduce using rule 95 (r_new_goto -> .)

    PROG                           shift and go to state 1
    r_new_goto                     shift and go to state 2

state 1

    (0) S' -> PROG .



state 2

    (3) PROG -> r_new_goto . PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN

    PROGRAMA        shift and go to state 3


state 3

    (3) PROG -> r_new_goto PROGRAMA . ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN

    ID              shift and go to state 4


state 4

    (3) PROG -> r_new_goto PROGRAMA ID . SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN

    SEMI_COLON      shift and go to state 5


state 5

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON . VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 6
    EMPTY                          shift and go to state 8

state 6

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS . r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN
    (118) r_change_local_context -> .

    PRINCIPAL       reduce using rule 118 (r_change_local_context -> .)
    FUNCION         reduce using rule 118 (r_change_local_context -> .)

    r_change_local_context         shift and go to state 9

state 7

    (4) VARS -> VAR . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 10
    EMPTY                          shift and go to state 14

state 8

    (5) VARS -> EMPTY .

    PRINCIPAL       reduce using rule 5 (VARS -> EMPTY .)
    FUNCION         reduce using rule 5 (VARS -> EMPTY .)
    LBRACKET        reduce using rule 5 (VARS -> EMPTY .)


state 9

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context . FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN
    (58) FUNCTION -> . r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (59) FUNCTION -> . EMPTY
    (104) r_new_function -> .
    (1) EMPTY -> .

    FUNCION         reduce using rule 104 (r_new_function -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 15
    r_new_function                 shift and go to state 16
    EMPTY                          shift and go to state 17

state 10

    (4) VARS -> VAR TIPO .

    PRINCIPAL       reduce using rule 4 (VARS -> VAR TIPO .)
    FUNCION         reduce using rule 4 (VARS -> VAR TIPO .)
    LBRACKET        reduce using rule 4 (VARS -> VAR TIPO .)


state 11

    (6) TIPO -> INT . r_set_var_type VAR_INT SEMI_COLON TIPO
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 18

state 12

    (7) TIPO -> FLOAT . r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 19

state 13

    (8) TIPO -> CHAR . r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 20

state 14

    (9) TIPO -> EMPTY .

    PRINCIPAL       reduce using rule 9 (TIPO -> EMPTY .)
    FUNCION         reduce using rule 9 (TIPO -> EMPTY .)
    LBRACKET        reduce using rule 9 (TIPO -> EMPTY .)


state 15

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION . r_complete_goto r_change_global_context r_display_var_table MAIN
    (96) r_complete_goto -> .

    PRINCIPAL       reduce using rule 96 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 21

state 16

    (58) FUNCTION -> r_new_function . FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION

    FUNCION         shift and go to state 22


state 17

    (59) FUNCTION -> EMPTY .

    PRINCIPAL       reduce using rule 59 (FUNCTION -> EMPTY .)


state 18

    (6) TIPO -> INT r_set_var_type . VAR_INT SEMI_COLON TIPO
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 23
    LIST_ID                        shift and go to state 24

state 19

    (7) TIPO -> FLOAT r_set_var_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID r_new_variable COMMA
    (15) VAR_TIPO -> . ID r_new_variable

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 26

state 20

    (8) TIPO -> CHAR r_set_var_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID r_new_variable COMMA
    (15) VAR_TIPO -> . ID r_new_variable

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 28

state 21

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto . r_change_global_context r_display_var_table MAIN
    (119) r_change_global_context -> .

    PRINCIPAL       reduce using rule 119 (r_change_global_context -> .)

    r_change_global_context        shift and go to state 29

state 22

    (58) FUNCTION -> r_new_function FUNCION . TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (60) TIPO_FUNC -> . INT r_set_fun_type
    (61) TIPO_FUNC -> . FLOAT r_set_fun_type
    (62) TIPO_FUNC -> . CHAR r_set_fun_type
    (63) TIPO_FUNC -> . VOID r_set_fun_type

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    CHAR            shift and go to state 33
    VOID            shift and go to state 34

    TIPO_FUNC                      shift and go to state 30

state 23

    (6) TIPO -> INT r_set_var_type VAR_INT . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 35


state 24

    (10) VAR_INT -> LIST_ID . COMMA VAR_INT
    (12) VAR_INT -> LIST_ID .

    COMMA           shift and go to state 36
    SEMI_COLON      reduce using rule 12 (VAR_INT -> LIST_ID .)


state 25

    (11) VAR_INT -> ID . r_new_variable COMMA VAR_INT
    (13) VAR_INT -> ID . r_new_variable
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (117) r_new_variable -> .

    COMMA           reduce using rule 117 (r_new_variable -> .)
    LSQ             reduce using rule 117 (r_new_variable -> .)
    SEMI_COLON      reduce using rule 117 (r_new_variable -> .)

    r_new_variable                 shift and go to state 37

state 26

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 38


state 27

    (14) VAR_TIPO -> ID . r_new_variable COMMA
    (15) VAR_TIPO -> ID . r_new_variable
    (117) r_new_variable -> .

    COMMA           reduce using rule 117 (r_new_variable -> .)
    SEMI_COLON      reduce using rule 117 (r_new_variable -> .)

    r_new_variable                 shift and go to state 39

state 28

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 40


state 29

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context . r_display_var_table MAIN
    (120) r_display_var_table -> .

    PRINCIPAL       reduce using rule 120 (r_display_var_table -> .)

    r_display_var_table            shift and go to state 41

state 30

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC . ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION

    ID              shift and go to state 42


state 31

    (60) TIPO_FUNC -> INT . r_set_fun_type
    (106) r_set_fun_type -> .

    ID              reduce using rule 106 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 43

state 32

    (61) TIPO_FUNC -> FLOAT . r_set_fun_type
    (106) r_set_fun_type -> .

    ID              reduce using rule 106 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 44

state 33

    (62) TIPO_FUNC -> CHAR . r_set_fun_type
    (106) r_set_fun_type -> .

    ID              reduce using rule 106 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 45

state 34

    (63) TIPO_FUNC -> VOID . r_set_fun_type
    (106) r_set_fun_type -> .

    ID              reduce using rule 106 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 46

state 35

    (6) TIPO -> INT r_set_var_type VAR_INT SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 47
    EMPTY                          shift and go to state 14

state 36

    (10) VAR_INT -> LIST_ID COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    LIST_ID                        shift and go to state 24
    VAR_INT                        shift and go to state 48

state 37

    (11) VAR_INT -> ID r_new_variable . COMMA VAR_INT
    (13) VAR_INT -> ID r_new_variable .
    (16) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    COMMA           shift and go to state 49
    SEMI_COLON      reduce using rule 13 (VAR_INT -> ID r_new_variable .)
    LSQ             shift and go to state 50


state 38

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 51
    EMPTY                          shift and go to state 14

state 39

    (14) VAR_TIPO -> ID r_new_variable . COMMA
    (15) VAR_TIPO -> ID r_new_variable .

    COMMA           shift and go to state 52
    SEMI_COLON      reduce using rule 15 (VAR_TIPO -> ID r_new_variable .)


state 40

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 53
    EMPTY                          shift and go to state 14

state 41

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table . MAIN
    (2) MAIN -> . PRINCIPAL push_main LPAREN RPAREN BLOQUE

    PRINCIPAL       shift and go to state 55

    MAIN                           shift and go to state 54

state 42

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID . r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (107) r_set_fun_name -> .

    LPAREN          reduce using rule 107 (r_set_fun_name -> .)

    r_set_fun_name                 shift and go to state 56

state 43

    (60) TIPO_FUNC -> INT r_set_fun_type .

    ID              reduce using rule 60 (TIPO_FUNC -> INT r_set_fun_type .)


state 44

    (61) TIPO_FUNC -> FLOAT r_set_fun_type .

    ID              reduce using rule 61 (TIPO_FUNC -> FLOAT r_set_fun_type .)


state 45

    (62) TIPO_FUNC -> CHAR r_set_fun_type .

    ID              reduce using rule 62 (TIPO_FUNC -> CHAR r_set_fun_type .)


state 46

    (63) TIPO_FUNC -> VOID r_set_fun_type .

    ID              reduce using rule 63 (TIPO_FUNC -> VOID r_set_fun_type .)


state 47

    (6) TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)
    FUNCION         reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)


state 48

    (10) VAR_INT -> LIST_ID COMMA VAR_INT .

    SEMI_COLON      reduce using rule 10 (VAR_INT -> LIST_ID COMMA VAR_INT .)


state 49

    (11) VAR_INT -> ID r_new_variable COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 57
    LIST_ID                        shift and go to state 24

state 50

    (16) LIST_ID -> ID r_new_variable LSQ . SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable LSQ . SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 59
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 51

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    FUNCION         reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)


state 52

    (14) VAR_TIPO -> ID r_new_variable COMMA .

    SEMI_COLON      reduce using rule 14 (VAR_TIPO -> ID r_new_variable COMMA .)


state 53

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    FUNCION         reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)


state 54

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN .

    $end            reduce using rule 3 (PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN .)


state 55

    (2) MAIN -> PRINCIPAL . push_main LPAREN RPAREN BLOQUE
    (124) push_main -> .

    LPAREN          reduce using rule 124 (push_main -> .)

    push_main                      shift and go to state 70

state 56

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name . r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (108) r_new_vartable -> .

    LPAREN          reduce using rule 108 (r_new_vartable -> .)

    r_new_vartable                 shift and go to state 71

state 57

    (11) VAR_INT -> ID r_new_variable COMMA VAR_INT .

    SEMI_COLON      reduce using rule 11 (VAR_INT -> ID r_new_variable COMMA VAR_INT .)


state 58

    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (75) LLAMADA -> ID . r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (85) r_new_id -> .
    (117) r_new_variable -> .
    (110) r_verify_function -> .

    DET             shift and go to state 73
    MULT            reduce using rule 85 (r_new_id -> .)
    DIV             reduce using rule 85 (r_new_id -> .)
    PLUS            reduce using rule 85 (r_new_id -> .)
    MINUS           reduce using rule 85 (r_new_id -> .)
    RSQ             reduce using rule 85 (r_new_id -> .)
    NOT_EQ          reduce using rule 85 (r_new_id -> .)
    GREATER_EQ      reduce using rule 85 (r_new_id -> .)
    LESS_EQ         reduce using rule 85 (r_new_id -> .)
    GREATER         reduce using rule 85 (r_new_id -> .)
    LESS            reduce using rule 85 (r_new_id -> .)
    COMPAR          reduce using rule 85 (r_new_id -> .)
    AND             reduce using rule 85 (r_new_id -> .)
    OR              reduce using rule 85 (r_new_id -> .)
    RPAREN          reduce using rule 85 (r_new_id -> .)
    COMMA           reduce using rule 85 (r_new_id -> .)
    EQ              reduce using rule 85 (r_new_id -> .)
    SEMI_COLON      reduce using rule 85 (r_new_id -> .)
    LSQ             reduce using rule 117 (r_new_variable -> .)
    LPAREN          reduce using rule 110 (r_verify_function -> .)

    r_new_id                       shift and go to state 72
    r_new_variable                 shift and go to state 74
    r_verify_function              shift and go to state 75

state 59

    (16) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION . RSQ
    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION . RSQ LSQ SLEVEL_EXPRESION RSQ

    RSQ             shift and go to state 76


state 60

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION . r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (91) r_new_quadruple_slevel -> .

    PLUS            reduce using rule 91 (r_new_quadruple_slevel -> .)
    MINUS           reduce using rule 91 (r_new_quadruple_slevel -> .)
    RSQ             reduce using rule 91 (r_new_quadruple_slevel -> .)
    NOT_EQ          reduce using rule 91 (r_new_quadruple_slevel -> .)
    GREATER_EQ      reduce using rule 91 (r_new_quadruple_slevel -> .)
    LESS_EQ         reduce using rule 91 (r_new_quadruple_slevel -> .)
    GREATER         reduce using rule 91 (r_new_quadruple_slevel -> .)
    LESS            reduce using rule 91 (r_new_quadruple_slevel -> .)
    COMPAR          reduce using rule 91 (r_new_quadruple_slevel -> .)
    AND             reduce using rule 91 (r_new_quadruple_slevel -> .)
    OR              reduce using rule 91 (r_new_quadruple_slevel -> .)
    RPAREN          reduce using rule 91 (r_new_quadruple_slevel -> .)
    COMMA           reduce using rule 91 (r_new_quadruple_slevel -> .)
    EQ              reduce using rule 91 (r_new_quadruple_slevel -> .)
    SEMI_COLON      reduce using rule 91 (r_new_quadruple_slevel -> .)

    r_new_quadruple_slevel         shift and go to state 77

state 61

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION . r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (90) r_new_quadruple_flevel -> .

    MULT            reduce using rule 90 (r_new_quadruple_flevel -> .)
    DIV             reduce using rule 90 (r_new_quadruple_flevel -> .)
    PLUS            reduce using rule 90 (r_new_quadruple_flevel -> .)
    MINUS           reduce using rule 90 (r_new_quadruple_flevel -> .)
    RSQ             reduce using rule 90 (r_new_quadruple_flevel -> .)
    NOT_EQ          reduce using rule 90 (r_new_quadruple_flevel -> .)
    GREATER_EQ      reduce using rule 90 (r_new_quadruple_flevel -> .)
    LESS_EQ         reduce using rule 90 (r_new_quadruple_flevel -> .)
    GREATER         reduce using rule 90 (r_new_quadruple_flevel -> .)
    LESS            reduce using rule 90 (r_new_quadruple_flevel -> .)
    COMPAR          reduce using rule 90 (r_new_quadruple_flevel -> .)
    AND             reduce using rule 90 (r_new_quadruple_flevel -> .)
    OR              reduce using rule 90 (r_new_quadruple_flevel -> .)
    RPAREN          reduce using rule 90 (r_new_quadruple_flevel -> .)
    COMMA           reduce using rule 90 (r_new_quadruple_flevel -> .)
    EQ              reduce using rule 90 (r_new_quadruple_flevel -> .)
    SEMI_COLON      reduce using rule 90 (r_new_quadruple_flevel -> .)

    r_new_quadruple_flevel         shift and go to state 78

state 62

    (40) VALUE_EXPRESION -> LIST_ID .

    MULT            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    DIV             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    PLUS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    MINUS           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RSQ             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    NOT_EQ          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER_EQ      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS_EQ         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMPAR          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    AND             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    OR              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RPAREN          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMMA           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    EQ              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    SEMI_COLON      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)


state 63

    (41) VALUE_EXPRESION -> CONSTANTE .

    MULT            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    DIV             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    PLUS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    MINUS           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RSQ             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    NOT_EQ          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER_EQ      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS_EQ         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMPAR          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    AND             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    OR              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RPAREN          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMMA           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    EQ              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    SEMI_COLON      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)


state 64

    (42) VALUE_EXPRESION -> LLAMADA .

    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RSQ             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RPAREN          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMMA           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    SEMI_COLON      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)


state 65

    (43) VALUE_EXPRESION -> r_new_lparen . LPAREN EXPRESION RPAREN r_new_rparen

    LPAREN          shift and go to state 79


state 66

    (44) CONSTANTE -> CTE_I . r_new_constant
    (86) r_new_constant -> .

    MULT            reduce using rule 86 (r_new_constant -> .)
    DIV             reduce using rule 86 (r_new_constant -> .)
    PLUS            reduce using rule 86 (r_new_constant -> .)
    MINUS           reduce using rule 86 (r_new_constant -> .)
    RSQ             reduce using rule 86 (r_new_constant -> .)
    NOT_EQ          reduce using rule 86 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 86 (r_new_constant -> .)
    LESS_EQ         reduce using rule 86 (r_new_constant -> .)
    GREATER         reduce using rule 86 (r_new_constant -> .)
    LESS            reduce using rule 86 (r_new_constant -> .)
    COMPAR          reduce using rule 86 (r_new_constant -> .)
    AND             reduce using rule 86 (r_new_constant -> .)
    OR              reduce using rule 86 (r_new_constant -> .)
    RPAREN          reduce using rule 86 (r_new_constant -> .)
    COMMA           reduce using rule 86 (r_new_constant -> .)
    EQ              reduce using rule 86 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 80

state 67

    (45) CONSTANTE -> CTE_F . r_new_constant
    (86) r_new_constant -> .

    MULT            reduce using rule 86 (r_new_constant -> .)
    DIV             reduce using rule 86 (r_new_constant -> .)
    PLUS            reduce using rule 86 (r_new_constant -> .)
    MINUS           reduce using rule 86 (r_new_constant -> .)
    RSQ             reduce using rule 86 (r_new_constant -> .)
    NOT_EQ          reduce using rule 86 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 86 (r_new_constant -> .)
    LESS_EQ         reduce using rule 86 (r_new_constant -> .)
    GREATER         reduce using rule 86 (r_new_constant -> .)
    LESS            reduce using rule 86 (r_new_constant -> .)
    COMPAR          reduce using rule 86 (r_new_constant -> .)
    AND             reduce using rule 86 (r_new_constant -> .)
    OR              reduce using rule 86 (r_new_constant -> .)
    RPAREN          reduce using rule 86 (r_new_constant -> .)
    COMMA           reduce using rule 86 (r_new_constant -> .)
    EQ              reduce using rule 86 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 81

state 68

    (46) CONSTANTE -> CTE_C . r_new_constant
    (86) r_new_constant -> .

    MULT            reduce using rule 86 (r_new_constant -> .)
    DIV             reduce using rule 86 (r_new_constant -> .)
    PLUS            reduce using rule 86 (r_new_constant -> .)
    MINUS           reduce using rule 86 (r_new_constant -> .)
    RSQ             reduce using rule 86 (r_new_constant -> .)
    NOT_EQ          reduce using rule 86 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 86 (r_new_constant -> .)
    LESS_EQ         reduce using rule 86 (r_new_constant -> .)
    GREATER         reduce using rule 86 (r_new_constant -> .)
    LESS            reduce using rule 86 (r_new_constant -> .)
    COMPAR          reduce using rule 86 (r_new_constant -> .)
    AND             reduce using rule 86 (r_new_constant -> .)
    OR              reduce using rule 86 (r_new_constant -> .)
    RPAREN          reduce using rule 86 (r_new_constant -> .)
    COMMA           reduce using rule 86 (r_new_constant -> .)
    EQ              reduce using rule 86 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 82

state 69

    (47) CONSTANTE -> CTE_S . r_new_constant
    (86) r_new_constant -> .

    MULT            reduce using rule 86 (r_new_constant -> .)
    DIV             reduce using rule 86 (r_new_constant -> .)
    PLUS            reduce using rule 86 (r_new_constant -> .)
    MINUS           reduce using rule 86 (r_new_constant -> .)
    RSQ             reduce using rule 86 (r_new_constant -> .)
    NOT_EQ          reduce using rule 86 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 86 (r_new_constant -> .)
    LESS_EQ         reduce using rule 86 (r_new_constant -> .)
    GREATER         reduce using rule 86 (r_new_constant -> .)
    LESS            reduce using rule 86 (r_new_constant -> .)
    COMPAR          reduce using rule 86 (r_new_constant -> .)
    AND             reduce using rule 86 (r_new_constant -> .)
    OR              reduce using rule 86 (r_new_constant -> .)
    RPAREN          reduce using rule 86 (r_new_constant -> .)
    COMMA           reduce using rule 86 (r_new_constant -> .)
    EQ              reduce using rule 86 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 83

state 70

    (2) MAIN -> PRINCIPAL push_main . LPAREN RPAREN BLOQUE

    LPAREN          shift and go to state 84


state 71

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable . LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION

    LPAREN          shift and go to state 85


state 72

    (38) VALUE_EXPRESION -> ID r_new_id .

    MULT            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    DIV             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    PLUS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    MINUS           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RSQ             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    NOT_EQ          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER_EQ      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS_EQ         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMPAR          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    AND             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    OR              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RPAREN          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMMA           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    EQ              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    SEMI_COLON      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)


state 73

    (39) VALUE_EXPRESION -> ID DET .

    MULT            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    DIV             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    PLUS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    MINUS           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RSQ             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    NOT_EQ          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER_EQ      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS_EQ         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMPAR          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    AND             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    OR              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RPAREN          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMMA           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    EQ              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    SEMI_COLON      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)


state 74

    (16) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LSQ             shift and go to state 50


state 75

    (75) LLAMADA -> ID r_verify_function . r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (111) r_generate_era -> .

    LPAREN          reduce using rule 111 (r_generate_era -> .)

    r_generate_era                 shift and go to state 86

state 76

    (16) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .
    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ . LSQ SLEVEL_EXPRESION RSQ

    COMMA           reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LSQ             shift and go to state 87


state 77

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel . SLEVEL_EXPRESION_AUX
    (31) SLEVEL_EXPRESION_AUX -> . PLUS r_new_operator SLEVEL_EXPRESION
    (32) SLEVEL_EXPRESION_AUX -> . MINUS r_new_operator SLEVEL_EXPRESION
    (33) SLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    SLEVEL_EXPRESION_AUX           shift and go to state 88
    EMPTY                          shift and go to state 91

state 78

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel . FLEVEL_EXPRESION_AUX
    (35) FLEVEL_EXPRESION_AUX -> . MULT r_new_operator FLEVEL_EXPRESION
    (36) FLEVEL_EXPRESION_AUX -> . DIV r_new_operator FLEVEL_EXPRESION
    (37) FLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    MULT            shift and go to state 93
    DIV             shift and go to state 94
    PLUS            reduce using rule 1 (EMPTY -> .)
    MINUS           reduce using rule 1 (EMPTY -> .)
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    FLEVEL_EXPRESION_AUX           shift and go to state 92
    EMPTY                          shift and go to state 95

state 79

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN . EXPRESION RPAREN r_new_rparen
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 96
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64

state 80

    (44) CONSTANTE -> CTE_I r_new_constant .

    MULT            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    DIV             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    PLUS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    MINUS           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RSQ             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    NOT_EQ          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER_EQ      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS_EQ         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMPAR          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    AND             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    OR              reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RPAREN          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMMA           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    EQ              reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    SEMI_COLON      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)


state 81

    (45) CONSTANTE -> CTE_F r_new_constant .

    MULT            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    DIV             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    PLUS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    MINUS           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RSQ             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    NOT_EQ          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER_EQ      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS_EQ         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMPAR          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    AND             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    OR              reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RPAREN          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMMA           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    EQ              reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    SEMI_COLON      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)


state 82

    (46) CONSTANTE -> CTE_C r_new_constant .

    MULT            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    DIV             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    PLUS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    MINUS           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RSQ             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    NOT_EQ          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER_EQ      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS_EQ         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMPAR          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    AND             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    OR              reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RPAREN          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMMA           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    EQ              reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    SEMI_COLON      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)


state 83

    (47) CONSTANTE -> CTE_S r_new_constant .

    MULT            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    DIV             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    PLUS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    MINUS           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RSQ             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    NOT_EQ          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER_EQ      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS_EQ         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMPAR          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    AND             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    OR              reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RPAREN          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMMA           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    EQ              reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    SEMI_COLON      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)


state 84

    (2) MAIN -> PRINCIPAL push_main LPAREN . RPAREN BLOQUE

    RPAREN          shift and go to state 99


state 85

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN . PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (64) PARAMETROS -> . AUX_PARAM
    (65) PARAMETROS -> . EMPTY
    (66) AUX_PARAM -> . INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (67) AUX_PARAM -> . FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (68) AUX_PARAM -> . CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (1) EMPTY -> .

    INT             shift and go to state 103
    FLOAT           shift and go to state 104
    CHAR            shift and go to state 105
    RPAREN          reduce using rule 1 (EMPTY -> .)

    PARAMETROS                     shift and go to state 100
    AUX_PARAM                      shift and go to state 101
    EMPTY                          shift and go to state 102

state 86

    (75) LLAMADA -> ID r_verify_function r_generate_era . LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub

    LPAREN          shift and go to state 106


state 87

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ . SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 107
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 88

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .

    RSQ             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)


state 89

    (31) SLEVEL_EXPRESION_AUX -> PLUS . r_new_operator SLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 108

state 90

    (32) SLEVEL_EXPRESION_AUX -> MINUS . r_new_operator SLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 109

state 91

    (33) SLEVEL_EXPRESION_AUX -> EMPTY .

    RSQ             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)


state 92

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .

    PLUS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    MINUS           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RSQ             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)


state 93

    (35) FLEVEL_EXPRESION_AUX -> MULT . r_new_operator FLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 110

state 94

    (36) FLEVEL_EXPRESION_AUX -> DIV . r_new_operator FLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 111

state 95

    (37) FLEVEL_EXPRESION_AUX -> EMPTY .

    PLUS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    MINUS           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RSQ             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)


state 96

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION . RPAREN r_new_rparen

    RPAREN          shift and go to state 112


state 97

    (18) EXPRESION -> TLEVEL_EXPRESION . r_new_quadruple EXPRESION_AUX
    (93) r_new_quadruple -> .

    COMPAR          reduce using rule 93 (r_new_quadruple -> .)
    AND             reduce using rule 93 (r_new_quadruple -> .)
    OR              reduce using rule 93 (r_new_quadruple -> .)
    RPAREN          reduce using rule 93 (r_new_quadruple -> .)
    COMMA           reduce using rule 93 (r_new_quadruple -> .)
    EQ              reduce using rule 93 (r_new_quadruple -> .)
    SEMI_COLON      reduce using rule 93 (r_new_quadruple -> .)

    r_new_quadruple                shift and go to state 113

state 98

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION . r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (92) r_new_quadruple_tlevel -> .

    NOT_EQ          reduce using rule 92 (r_new_quadruple_tlevel -> .)
    GREATER_EQ      reduce using rule 92 (r_new_quadruple_tlevel -> .)
    LESS_EQ         reduce using rule 92 (r_new_quadruple_tlevel -> .)
    GREATER         reduce using rule 92 (r_new_quadruple_tlevel -> .)
    LESS            reduce using rule 92 (r_new_quadruple_tlevel -> .)
    COMPAR          reduce using rule 92 (r_new_quadruple_tlevel -> .)
    AND             reduce using rule 92 (r_new_quadruple_tlevel -> .)
    OR              reduce using rule 92 (r_new_quadruple_tlevel -> .)
    RPAREN          reduce using rule 92 (r_new_quadruple_tlevel -> .)
    COMMA           reduce using rule 92 (r_new_quadruple_tlevel -> .)
    EQ              reduce using rule 92 (r_new_quadruple_tlevel -> .)
    SEMI_COLON      reduce using rule 92 (r_new_quadruple_tlevel -> .)

    r_new_quadruple_tlevel         shift and go to state 114

state 99

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 115

state 100

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS . RPAREN VARS BLOQUE r_end_function FUNCTION

    RPAREN          shift and go to state 117


state 101

    (64) PARAMETROS -> AUX_PARAM .

    RPAREN          reduce using rule 64 (PARAMETROS -> AUX_PARAM .)


state 102

    (65) PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 65 (PARAMETROS -> EMPTY .)


state 103

    (66) AUX_PARAM -> INT . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 118

state 104

    (67) AUX_PARAM -> FLOAT . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 119

state 105

    (68) AUX_PARAM -> CHAR . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (116) r_set_var_type -> .

    ID              reduce using rule 116 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 120

state 106

    (75) LLAMADA -> ID r_verify_function r_generate_era LPAREN . TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (76) TIPO_PARAMETROS -> . TIPO_PARAMETROS_AUX
    (77) TIPO_PARAMETROS -> . EMPTY
    (78) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter
    (79) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    RPAREN          reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 121
    TIPO_PARAMETROS_AUX            shift and go to state 122
    EMPTY                          shift and go to state 123
    EXPRESION                      shift and go to state 124
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 107

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION . RSQ

    RSQ             shift and go to state 125


state 108

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 126
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 109

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 127
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 110

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 128
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 111

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 129
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 112

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN . r_new_rparen
    (88) r_new_rparen -> .

    MULT            reduce using rule 88 (r_new_rparen -> .)
    DIV             reduce using rule 88 (r_new_rparen -> .)
    PLUS            reduce using rule 88 (r_new_rparen -> .)
    MINUS           reduce using rule 88 (r_new_rparen -> .)
    RSQ             reduce using rule 88 (r_new_rparen -> .)
    NOT_EQ          reduce using rule 88 (r_new_rparen -> .)
    GREATER_EQ      reduce using rule 88 (r_new_rparen -> .)
    LESS_EQ         reduce using rule 88 (r_new_rparen -> .)
    GREATER         reduce using rule 88 (r_new_rparen -> .)
    LESS            reduce using rule 88 (r_new_rparen -> .)
    COMPAR          reduce using rule 88 (r_new_rparen -> .)
    AND             reduce using rule 88 (r_new_rparen -> .)
    OR              reduce using rule 88 (r_new_rparen -> .)
    RPAREN          reduce using rule 88 (r_new_rparen -> .)
    COMMA           reduce using rule 88 (r_new_rparen -> .)
    EQ              reduce using rule 88 (r_new_rparen -> .)
    SEMI_COLON      reduce using rule 88 (r_new_rparen -> .)

    r_new_rparen                   shift and go to state 130

state 113

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple . EXPRESION_AUX
    (19) EXPRESION_AUX -> . COMPAR r_new_operator EXPRESION
    (20) EXPRESION_AUX -> . AND r_new_operator EXPRESION
    (21) EXPRESION_AUX -> . OR r_new_operator EXPRESION
    (22) EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    COMPAR          shift and go to state 132
    AND             shift and go to state 133
    OR              shift and go to state 134
    RPAREN          reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    EXPRESION_AUX                  shift and go to state 131
    EMPTY                          shift and go to state 135

state 114

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel . TLEVEL_EXPRESION_AUX
    (24) TLEVEL_EXPRESION_AUX -> . NOT_EQ r_new_operator TLEVEL_EXPRESION
    (25) TLEVEL_EXPRESION_AUX -> . GREATER_EQ r_new_operator TLEVEL_EXPRESION
    (26) TLEVEL_EXPRESION_AUX -> . LESS_EQ r_new_operator TLEVEL_EXPRESION
    (27) TLEVEL_EXPRESION_AUX -> . GREATER r_new_operator TLEVEL_EXPRESION
    (28) TLEVEL_EXPRESION_AUX -> . LESS r_new_operator TLEVEL_EXPRESION
    (29) TLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    NOT_EQ          shift and go to state 137
    GREATER_EQ      shift and go to state 138
    LESS_EQ         shift and go to state 139
    GREATER         shift and go to state 140
    LESS            shift and go to state 141
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    TLEVEL_EXPRESION_AUX           shift and go to state 136
    EMPTY                          shift and go to state 142

state 115

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .

    $end            reduce using rule 2 (MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .)


state 116

    (48) BLOQUE -> LBRACKET . OPCION_BLOQUE RBRACKET
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    OPCION_BLOQUE                  shift and go to state 143
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 117

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN . VARS BLOQUE r_end_function FUNCTION
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 160
    EMPTY                          shift and go to state 8

state 118

    (66) AUX_PARAM -> INT r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (105) r_insert_type -> .

    ID              reduce using rule 105 (r_insert_type -> .)

    r_insert_type                  shift and go to state 161

state 119

    (67) AUX_PARAM -> FLOAT r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (105) r_insert_type -> .

    ID              reduce using rule 105 (r_insert_type -> .)

    r_insert_type                  shift and go to state 162

state 120

    (68) AUX_PARAM -> CHAR r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (105) r_insert_type -> .

    ID              reduce using rule 105 (r_insert_type -> .)

    r_insert_type                  shift and go to state 163

state 121

    (75) LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS . RPAREN r_verify_last_parameter r_generate_gosub

    RPAREN          shift and go to state 164


state 122

    (76) TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX .

    RPAREN          reduce using rule 76 (TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX .)


state 123

    (77) TIPO_PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 77 (TIPO_PARAMETROS -> EMPTY .)


state 124

    (78) TIPO_PARAMETROS_AUX -> EXPRESION . r_verify_parameter
    (79) TIPO_PARAMETROS_AUX -> EXPRESION . r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX
    (112) r_verify_parameter -> .

    COMMA           reduce using rule 112 (r_verify_parameter -> .)
    RPAREN          reduce using rule 112 (r_verify_parameter -> .)

    r_verify_parameter             shift and go to state 165

state 125

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .

    COMMA           reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)


state 126

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)


state 127

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)


state 128

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)


state 129

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)


state 130

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .

    MULT            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    DIV             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    PLUS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    MINUS           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RSQ             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    NOT_EQ          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER_EQ      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS_EQ         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMPAR          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    AND             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    OR              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RPAREN          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMMA           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    EQ              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    SEMI_COLON      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)


state 131

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .

    RPAREN          reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    COMMA           reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    EQ              reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)


state 132

    (19) EXPRESION_AUX -> COMPAR . r_new_operator EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 166

state 133

    (20) EXPRESION_AUX -> AND . r_new_operator EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 167

state 134

    (21) EXPRESION_AUX -> OR . r_new_operator EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 168

state 135

    (22) EXPRESION_AUX -> EMPTY .

    RPAREN          reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 22 (EXPRESION_AUX -> EMPTY .)


state 136

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .

    COMPAR          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)


state 137

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ . r_new_operator TLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 169

state 138

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ . r_new_operator TLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 170

state 139

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ . r_new_operator TLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 171

state 140

    (27) TLEVEL_EXPRESION_AUX -> GREATER . r_new_operator TLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 172

state 141

    (28) TLEVEL_EXPRESION_AUX -> LESS . r_new_operator TLEVEL_EXPRESION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 173

state 142

    (29) TLEVEL_EXPRESION_AUX -> EMPTY .

    COMPAR          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)


state 143

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE . RBRACKET

    RBRACKET        shift and go to state 174


state 144

    (49) OPCION_BLOQUE -> LECTURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 175


state 145

    (50) OPCION_BLOQUE -> ESCRITURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 176


state 146

    (51) OPCION_BLOQUE -> LLAMADA . SEMI_COLON OPCION_BLOQUE
    (42) VALUE_EXPRESION -> LLAMADA .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 177
    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)

  ! SEMI_COLON      [ reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .) ]


state 147

    (52) OPCION_BLOQUE -> IF_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    IF_STMT                        shift and go to state 147
    OPCION_BLOQUE                  shift and go to state 178
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 148

    (53) OPCION_BLOQUE -> IF_ELSE_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    IF_ELSE_STMT                   shift and go to state 148
    OPCION_BLOQUE                  shift and go to state 179
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 149

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    MIENTRAS_CICLO                 shift and go to state 149
    OPCION_BLOQUE                  shift and go to state 180
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 150

    (55) OPCION_BLOQUE -> DESDE_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    DESDE_CICLO                    shift and go to state 150
    OPCION_BLOQUE                  shift and go to state 181
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 151

    (56) OPCION_BLOQUE -> ASIGNACION . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 182


state 152

    (57) OPCION_BLOQUE -> EMPTY .

    RBRACKET        reduce using rule 57 (OPCION_BLOQUE -> EMPTY .)


state 153

    (73) LECTURA -> LEE . LPAREN ID RPAREN

    LPAREN          shift and go to state 183


state 154

    (75) LLAMADA -> ID . r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (110) r_verify_function -> .
    (85) r_new_id -> .
    (117) r_new_variable -> .

    DET             shift and go to state 73
    LPAREN          reduce using rule 110 (r_verify_function -> .)
    MULT            reduce using rule 85 (r_new_id -> .)
    DIV             reduce using rule 85 (r_new_id -> .)
    PLUS            reduce using rule 85 (r_new_id -> .)
    MINUS           reduce using rule 85 (r_new_id -> .)
    NOT_EQ          reduce using rule 85 (r_new_id -> .)
    GREATER_EQ      reduce using rule 85 (r_new_id -> .)
    LESS_EQ         reduce using rule 85 (r_new_id -> .)
    GREATER         reduce using rule 85 (r_new_id -> .)
    LESS            reduce using rule 85 (r_new_id -> .)
    COMPAR          reduce using rule 85 (r_new_id -> .)
    AND             reduce using rule 85 (r_new_id -> .)
    OR              reduce using rule 85 (r_new_id -> .)
    EQ              reduce using rule 85 (r_new_id -> .)
    SEMI_COLON      reduce using rule 85 (r_new_id -> .)
    LSQ             reduce using rule 117 (r_new_variable -> .)

    r_verify_function              shift and go to state 75
    r_new_id                       shift and go to state 72
    r_new_variable                 shift and go to state 74

state 155

    (74) ESCRITURA -> ESCRIBE . LPAREN TIPO_PARAMETROS RPAREN

    LPAREN          shift and go to state 184


state 156

    (80) IF_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    LPAREN          shift and go to state 185


state 157

    (82) ASIGNACION -> EXPRESION . ASIGNACION_AUX r_new_equal
    (83) ASIGNACION_AUX -> . EQ r_new_operator ASIGNACION
    (84) ASIGNACION_AUX -> . EMPTY
    (1) EMPTY -> .

    EQ              shift and go to state 187
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    ASIGNACION_AUX                 shift and go to state 186
    EMPTY                          shift and go to state 188

state 158

    (72) MIENTRAS_CICLO -> MIENTRAS . r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (99) r_new_migajita -> .

    LPAREN          reduce using rule 99 (r_new_migajita -> .)

    r_new_migajita                 shift and go to state 189

state 159

    (71) DESDE_CICLO -> DESDE . ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    ID              shift and go to state 190


state 160

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS . BLOQUE r_end_function FUNCTION
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 191

state 161

    (66) AUX_PARAM -> INT r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 192


state 162

    (67) AUX_PARAM -> FLOAT r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 193


state 163

    (68) AUX_PARAM -> CHAR r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 194


state 164

    (75) LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN . r_verify_last_parameter r_generate_gosub
    (114) r_verify_last_parameter -> .

    MULT            reduce using rule 114 (r_verify_last_parameter -> .)
    DIV             reduce using rule 114 (r_verify_last_parameter -> .)
    PLUS            reduce using rule 114 (r_verify_last_parameter -> .)
    MINUS           reduce using rule 114 (r_verify_last_parameter -> .)
    RSQ             reduce using rule 114 (r_verify_last_parameter -> .)
    NOT_EQ          reduce using rule 114 (r_verify_last_parameter -> .)
    GREATER_EQ      reduce using rule 114 (r_verify_last_parameter -> .)
    LESS_EQ         reduce using rule 114 (r_verify_last_parameter -> .)
    GREATER         reduce using rule 114 (r_verify_last_parameter -> .)
    LESS            reduce using rule 114 (r_verify_last_parameter -> .)
    COMPAR          reduce using rule 114 (r_verify_last_parameter -> .)
    AND             reduce using rule 114 (r_verify_last_parameter -> .)
    OR              reduce using rule 114 (r_verify_last_parameter -> .)
    RPAREN          reduce using rule 114 (r_verify_last_parameter -> .)
    COMMA           reduce using rule 114 (r_verify_last_parameter -> .)
    EQ              reduce using rule 114 (r_verify_last_parameter -> .)
    SEMI_COLON      reduce using rule 114 (r_verify_last_parameter -> .)

    r_verify_last_parameter        shift and go to state 195

state 165

    (78) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter .
    (79) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter . COMMA r_next_parameter TIPO_PARAMETROS_AUX

    RPAREN          reduce using rule 78 (TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter .)
    COMMA           shift and go to state 196


state 166

    (19) EXPRESION_AUX -> COMPAR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 197
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 167

    (20) EXPRESION_AUX -> AND r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 198
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 168

    (21) EXPRESION_AUX -> OR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 199
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 169

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 200
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 170

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 201
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 171

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 202
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 172

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 203
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 173

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 204
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 174

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .

    $end            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    FUNCION         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    PRINCIPAL       reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SINO            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LEE             reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ESCRIBE         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ID              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SI              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    MIENTRAS        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    DESDE           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_I           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_F           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_C           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_S           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LPAREN          reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RBRACKET        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)


state 175

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    LECTURA                        shift and go to state 144
    OPCION_BLOQUE                  shift and go to state 205
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 176

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    ESCRITURA                      shift and go to state 145
    OPCION_BLOQUE                  shift and go to state 206
    LECTURA                        shift and go to state 144
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 177

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    LLAMADA                        shift and go to state 146
    OPCION_BLOQUE                  shift and go to state 207
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    ASIGNACION                     shift and go to state 151
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 178

    (52) OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 52 (OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .)


state 179

    (53) OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 53 (OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .)


state 180

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 54 (OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .)


state 181

    (55) OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 55 (OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .)


state 182

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (80) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (87) r_new_lparen -> .

    LEE             shift and go to state 153
    ESCRIBE         shift and go to state 155
    ID              shift and go to state 154
    SI              shift and go to state 156
    MIENTRAS        shift and go to state 158
    DESDE           shift and go to state 159
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 151
    OPCION_BLOQUE                  shift and go to state 208
    LECTURA                        shift and go to state 144
    ESCRITURA                      shift and go to state 145
    LLAMADA                        shift and go to state 146
    IF_STMT                        shift and go to state 147
    IF_ELSE_STMT                   shift and go to state 148
    MIENTRAS_CICLO                 shift and go to state 149
    DESDE_CICLO                    shift and go to state 150
    EMPTY                          shift and go to state 152
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    r_new_lparen                   shift and go to state 65

state 183

    (73) LECTURA -> LEE LPAREN . ID RPAREN

    ID              shift and go to state 209


state 184

    (74) ESCRITURA -> ESCRIBE LPAREN . TIPO_PARAMETROS RPAREN
    (76) TIPO_PARAMETROS -> . TIPO_PARAMETROS_AUX
    (77) TIPO_PARAMETROS -> . EMPTY
    (78) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter
    (79) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    RPAREN          reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 210
    TIPO_PARAMETROS_AUX            shift and go to state 122
    EMPTY                          shift and go to state 123
    EXPRESION                      shift and go to state 124
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 185

    (80) IF_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 211
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 186

    (82) ASIGNACION -> EXPRESION ASIGNACION_AUX . r_new_equal
    (94) r_new_equal -> .

    SEMI_COLON      reduce using rule 94 (r_new_equal -> .)

    r_new_equal                    shift and go to state 212

state 187

    (83) ASIGNACION_AUX -> EQ . r_new_operator ASIGNACION
    (89) r_new_operator -> .

    ID              reduce using rule 89 (r_new_operator -> .)
    CTE_I           reduce using rule 89 (r_new_operator -> .)
    CTE_F           reduce using rule 89 (r_new_operator -> .)
    CTE_C           reduce using rule 89 (r_new_operator -> .)
    CTE_S           reduce using rule 89 (r_new_operator -> .)
    LPAREN          reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 213

state 188

    (84) ASIGNACION_AUX -> EMPTY .

    SEMI_COLON      reduce using rule 84 (ASIGNACION_AUX -> EMPTY .)


state 189

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita . LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    LPAREN          shift and go to state 214


state 190

    (71) DESDE_CICLO -> DESDE ID . r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (100) r_new_id_for -> .

    EQ              reduce using rule 100 (r_new_id_for -> .)

    r_new_id_for                   shift and go to state 215

state 191

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE . r_end_function FUNCTION
    (109) r_end_function -> .

    FUNCION         reduce using rule 109 (r_end_function -> .)
    PRINCIPAL       reduce using rule 109 (r_end_function -> .)

    r_end_function                 shift and go to state 216

state 192

    (66) AUX_PARAM -> INT r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (117) r_new_variable -> .

    COMMA           reduce using rule 117 (r_new_variable -> .)
    RPAREN          reduce using rule 117 (r_new_variable -> .)

    r_new_variable                 shift and go to state 217

state 193

    (67) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (117) r_new_variable -> .

    COMMA           reduce using rule 117 (r_new_variable -> .)
    RPAREN          reduce using rule 117 (r_new_variable -> .)

    r_new_variable                 shift and go to state 218

state 194

    (68) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (117) r_new_variable -> .

    COMMA           reduce using rule 117 (r_new_variable -> .)
    RPAREN          reduce using rule 117 (r_new_variable -> .)

    r_new_variable                 shift and go to state 219

state 195

    (75) LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter . r_generate_gosub
    (115) r_generate_gosub -> .

    MULT            reduce using rule 115 (r_generate_gosub -> .)
    DIV             reduce using rule 115 (r_generate_gosub -> .)
    PLUS            reduce using rule 115 (r_generate_gosub -> .)
    MINUS           reduce using rule 115 (r_generate_gosub -> .)
    RSQ             reduce using rule 115 (r_generate_gosub -> .)
    NOT_EQ          reduce using rule 115 (r_generate_gosub -> .)
    GREATER_EQ      reduce using rule 115 (r_generate_gosub -> .)
    LESS_EQ         reduce using rule 115 (r_generate_gosub -> .)
    GREATER         reduce using rule 115 (r_generate_gosub -> .)
    LESS            reduce using rule 115 (r_generate_gosub -> .)
    COMPAR          reduce using rule 115 (r_generate_gosub -> .)
    AND             reduce using rule 115 (r_generate_gosub -> .)
    OR              reduce using rule 115 (r_generate_gosub -> .)
    RPAREN          reduce using rule 115 (r_generate_gosub -> .)
    COMMA           reduce using rule 115 (r_generate_gosub -> .)
    EQ              reduce using rule 115 (r_generate_gosub -> .)
    SEMI_COLON      reduce using rule 115 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 220

state 196

    (79) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA . r_next_parameter TIPO_PARAMETROS_AUX
    (113) r_next_parameter -> .

    ID              reduce using rule 113 (r_next_parameter -> .)
    CTE_I           reduce using rule 113 (r_next_parameter -> .)
    CTE_F           reduce using rule 113 (r_next_parameter -> .)
    CTE_C           reduce using rule 113 (r_next_parameter -> .)
    CTE_S           reduce using rule 113 (r_next_parameter -> .)
    LPAREN          reduce using rule 113 (r_next_parameter -> .)

    r_next_parameter               shift and go to state 221

state 197

    (19) EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .

    RPAREN          reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    COMMA           reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    EQ              reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)


state 198

    (20) EXPRESION_AUX -> AND r_new_operator EXPRESION .

    RPAREN          reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    COMMA           reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    EQ              reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)


state 199

    (21) EXPRESION_AUX -> OR r_new_operator EXPRESION .

    RPAREN          reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    COMMA           reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    EQ              reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)


state 200

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)


state 201

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)


state 202

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)


state 203

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)


state 204

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)


state 205

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 49 (OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .)


state 206

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 50 (OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .)


state 207

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 51 (OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .)


state 208

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 56 (OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .)


state 209

    (73) LECTURA -> LEE LPAREN ID . RPAREN

    RPAREN          shift and go to state 222


state 210

    (74) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 223


state 211

    (80) IF_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    RPAREN          shift and go to state 224


state 212

    (82) ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .

    SEMI_COLON      reduce using rule 82 (ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .)


state 213

    (83) ASIGNACION_AUX -> EQ r_new_operator . ASIGNACION
    (82) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 225
    EXPRESION                      shift and go to state 157
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 214

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN . EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 226
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 215

    (71) DESDE_CICLO -> DESDE ID r_new_id_for . EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    EQ              shift and go to state 227


state 216

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function . FUNCTION
    (58) FUNCTION -> . r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION
    (59) FUNCTION -> . EMPTY
    (104) r_new_function -> .
    (1) EMPTY -> .

    FUNCION         reduce using rule 104 (r_new_function -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    r_new_function                 shift and go to state 16
    FUNCTION                       shift and go to state 228
    EMPTY                          shift and go to state 17

state 217

    (66) AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 230
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 229
    EMPTY                          shift and go to state 231

state 218

    (67) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 230
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 232
    EMPTY                          shift and go to state 231

state 219

    (68) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 230
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 233
    EMPTY                          shift and go to state 231

state 220

    (75) LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .

    MULT            reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    DIV             reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    PLUS            reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    MINUS           reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    RSQ             reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    NOT_EQ          reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    GREATER_EQ      reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    LESS_EQ         reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    GREATER         reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    LESS            reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    COMPAR          reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    AND             reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    OR              reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    RPAREN          reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    COMMA           reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    EQ              reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)
    SEMI_COLON      reduce using rule 75 (LLAMADA -> ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub .)


state 221

    (79) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA r_next_parameter . TIPO_PARAMETROS_AUX
    (78) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter
    (79) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID r_verify_function r_generate_era LPAREN TIPO_PARAMETROS RPAREN r_verify_last_parameter r_generate_gosub
    (87) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 87 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 124
    TIPO_PARAMETROS_AUX            shift and go to state 234
    TLEVEL_EXPRESION               shift and go to state 97
    SLEVEL_EXPRESION               shift and go to state 98
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 222

    (73) LECTURA -> LEE LPAREN ID RPAREN .

    SEMI_COLON      reduce using rule 73 (LECTURA -> LEE LPAREN ID RPAREN .)


state 223

    (74) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .

    SEMI_COLON      reduce using rule 74 (ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .)


state 224

    (80) IF_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (97) r_new_gotof -> .

    ENTONCES        reduce using rule 97 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 235

state 225

    (83) ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .

    SEMI_COLON      reduce using rule 83 (ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .)


state 226

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION . RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    RPAREN          shift and go to state 236


state 227

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ . r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (89) r_new_operator -> .

    CTE_I           reduce using rule 89 (r_new_operator -> .)

    r_new_operator                 shift and go to state 237

state 228

    (58) FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION .

    PRINCIPAL       reduce using rule 58 (FUNCTION -> r_new_function FUNCION TIPO_FUNC ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS BLOQUE r_end_function FUNCTION .)


state 229

    (66) AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 66 (AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 230

    (69) NEXT_PARAM -> COMMA . AUX_PARAM
    (66) AUX_PARAM -> . INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (67) AUX_PARAM -> . FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (68) AUX_PARAM -> . CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM

    INT             shift and go to state 103
    FLOAT           shift and go to state 104
    CHAR            shift and go to state 105

    AUX_PARAM                      shift and go to state 238

state 231

    (70) NEXT_PARAM -> EMPTY .

    RPAREN          reduce using rule 70 (NEXT_PARAM -> EMPTY .)


state 232

    (67) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 67 (AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 233

    (68) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 68 (AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 234

    (79) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX .

    RPAREN          reduce using rule 79 (TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA r_next_parameter TIPO_PARAMETROS_AUX .)


state 235

    (80) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    ENTONCES        shift and go to state 239


state 236

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN . r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (97) r_new_gotof -> .

    HAZ             reduce using rule 97 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 240

state 237

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator . CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    CTE_I           shift and go to state 241


state 238

    (69) NEXT_PARAM -> COMMA AUX_PARAM .

    RPAREN          reduce using rule 69 (NEXT_PARAM -> COMMA AUX_PARAM .)


state 239

    (80) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 242

state 240

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof . HAZ BLOQUE r_new_goto r_complete_gotof

    HAZ             shift and go to state 243


state 241

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I . r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (86) r_new_constant -> .

    HASTA           reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 244

state 242

    (80) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_complete_gotof
    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (98) r_complete_gotof -> .
    (95) r_new_goto -> .

    LEE             reduce using rule 98 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 98 (r_complete_gotof -> .)
    ID              reduce using rule 98 (r_complete_gotof -> .)
    SI              reduce using rule 98 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 98 (r_complete_gotof -> .)
    DESDE           reduce using rule 98 (r_complete_gotof -> .)
    CTE_I           reduce using rule 98 (r_complete_gotof -> .)
    CTE_F           reduce using rule 98 (r_complete_gotof -> .)
    CTE_C           reduce using rule 98 (r_complete_gotof -> .)
    CTE_S           reduce using rule 98 (r_complete_gotof -> .)
    LPAREN          reduce using rule 98 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 98 (r_complete_gotof -> .)
    SINO            reduce using rule 95 (r_new_goto -> .)

    r_complete_gotof               shift and go to state 245
    r_new_goto                     shift and go to state 246

state 243

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ . BLOQUE r_new_goto r_complete_gotof
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 247

state 244

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant . r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (94) r_new_equal -> .

    HASTA           reduce using rule 94 (r_new_equal -> .)

    r_new_equal                    shift and go to state 248

state 245

    (80) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .

    LEE             reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ESCRIBE         reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ID              reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    SI              reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    MIENTRAS        reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    DESDE           reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_I           reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_F           reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_C           reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_S           reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    LPAREN          reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    RBRACKET        reduce using rule 80 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)


state 246

    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto . r_complete_gotof SINO BLOQUE r_complete_goto
    (98) r_complete_gotof -> .

    SINO            reduce using rule 98 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 249

state 247

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE . r_new_goto r_complete_gotof
    (95) r_new_goto -> .

    LEE             reduce using rule 95 (r_new_goto -> .)
    ESCRIBE         reduce using rule 95 (r_new_goto -> .)
    ID              reduce using rule 95 (r_new_goto -> .)
    SI              reduce using rule 95 (r_new_goto -> .)
    MIENTRAS        reduce using rule 95 (r_new_goto -> .)
    DESDE           reduce using rule 95 (r_new_goto -> .)
    CTE_I           reduce using rule 95 (r_new_goto -> .)
    CTE_F           reduce using rule 95 (r_new_goto -> .)
    CTE_C           reduce using rule 95 (r_new_goto -> .)
    CTE_S           reduce using rule 95 (r_new_goto -> .)
    LPAREN          reduce using rule 95 (r_new_goto -> .)
    RBRACKET        reduce using rule 95 (r_new_goto -> .)

    r_new_goto                     shift and go to state 250

state 248

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal . HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    HASTA           shift and go to state 251


state 249

    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof . SINO BLOQUE r_complete_goto

    SINO            shift and go to state 252


state 250

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto . r_complete_gotof
    (98) r_complete_gotof -> .

    LEE             reduce using rule 98 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 98 (r_complete_gotof -> .)
    ID              reduce using rule 98 (r_complete_gotof -> .)
    SI              reduce using rule 98 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 98 (r_complete_gotof -> .)
    DESDE           reduce using rule 98 (r_complete_gotof -> .)
    CTE_I           reduce using rule 98 (r_complete_gotof -> .)
    CTE_F           reduce using rule 98 (r_complete_gotof -> .)
    CTE_C           reduce using rule 98 (r_complete_gotof -> .)
    CTE_S           reduce using rule 98 (r_complete_gotof -> .)
    LPAREN          reduce using rule 98 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 98 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 253

state 251

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA . CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    CTE_I           shift and go to state 254


state 252

    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO . BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 255

state 253

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .

    LEE             reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ESCRIBE         reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ID              reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    SI              reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    MIENTRAS        reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    DESDE           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_I           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_F           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_C           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_S           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    LPAREN          reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    RBRACKET        reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)


state 254

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I . r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (86) r_new_constant -> .

    HACER           reduce using rule 86 (r_new_constant -> .)

    r_new_constant                 shift and go to state 256

state 255

    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE . r_complete_goto
    (96) r_complete_goto -> .

    LEE             reduce using rule 96 (r_complete_goto -> .)
    ESCRIBE         reduce using rule 96 (r_complete_goto -> .)
    ID              reduce using rule 96 (r_complete_goto -> .)
    SI              reduce using rule 96 (r_complete_goto -> .)
    MIENTRAS        reduce using rule 96 (r_complete_goto -> .)
    DESDE           reduce using rule 96 (r_complete_goto -> .)
    CTE_I           reduce using rule 96 (r_complete_goto -> .)
    CTE_F           reduce using rule 96 (r_complete_goto -> .)
    CTE_C           reduce using rule 96 (r_complete_goto -> .)
    CTE_S           reduce using rule 96 (r_complete_goto -> .)
    LPAREN          reduce using rule 96 (r_complete_goto -> .)
    RBRACKET        reduce using rule 96 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 257

state 256

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant . r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (99) r_new_migajita -> .

    HACER           reduce using rule 99 (r_new_migajita -> .)

    r_new_migajita                 shift and go to state 258

state 257

    (81) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .

    LEE             reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ESCRIBE         reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ID              reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    SI              reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    MIENTRAS        reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    DESDE           reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_I           reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_F           reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_C           reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_S           reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    LPAREN          reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    RBRACKET        reduce using rule 81 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)


state 258

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita . r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (101) r_compara_for -> .

    HACER           reduce using rule 101 (r_compara_for -> .)

    r_compara_for                  shift and go to state 259

state 259

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for . HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    HACER           shift and go to state 260


state 260

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER . r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (97) r_new_gotof -> .

    LBRACKET        reduce using rule 97 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 261

state 261

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof . BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 116

    BLOQUE                         shift and go to state 262

state 262

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE . r_update_for r_new_goto r_complete_gotof r_clear_for
    (102) r_update_for -> .

    LEE             reduce using rule 102 (r_update_for -> .)
    ESCRIBE         reduce using rule 102 (r_update_for -> .)
    ID              reduce using rule 102 (r_update_for -> .)
    SI              reduce using rule 102 (r_update_for -> .)
    MIENTRAS        reduce using rule 102 (r_update_for -> .)
    DESDE           reduce using rule 102 (r_update_for -> .)
    CTE_I           reduce using rule 102 (r_update_for -> .)
    CTE_F           reduce using rule 102 (r_update_for -> .)
    CTE_C           reduce using rule 102 (r_update_for -> .)
    CTE_S           reduce using rule 102 (r_update_for -> .)
    LPAREN          reduce using rule 102 (r_update_for -> .)
    RBRACKET        reduce using rule 102 (r_update_for -> .)

    r_update_for                   shift and go to state 263

state 263

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for . r_new_goto r_complete_gotof r_clear_for
    (95) r_new_goto -> .

    LEE             reduce using rule 95 (r_new_goto -> .)
    ESCRIBE         reduce using rule 95 (r_new_goto -> .)
    ID              reduce using rule 95 (r_new_goto -> .)
    SI              reduce using rule 95 (r_new_goto -> .)
    MIENTRAS        reduce using rule 95 (r_new_goto -> .)
    DESDE           reduce using rule 95 (r_new_goto -> .)
    CTE_I           reduce using rule 95 (r_new_goto -> .)
    CTE_F           reduce using rule 95 (r_new_goto -> .)
    CTE_C           reduce using rule 95 (r_new_goto -> .)
    CTE_S           reduce using rule 95 (r_new_goto -> .)
    LPAREN          reduce using rule 95 (r_new_goto -> .)
    RBRACKET        reduce using rule 95 (r_new_goto -> .)

    r_new_goto                     shift and go to state 264

state 264

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto . r_complete_gotof r_clear_for
    (98) r_complete_gotof -> .

    LEE             reduce using rule 98 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 98 (r_complete_gotof -> .)
    ID              reduce using rule 98 (r_complete_gotof -> .)
    SI              reduce using rule 98 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 98 (r_complete_gotof -> .)
    DESDE           reduce using rule 98 (r_complete_gotof -> .)
    CTE_I           reduce using rule 98 (r_complete_gotof -> .)
    CTE_F           reduce using rule 98 (r_complete_gotof -> .)
    CTE_C           reduce using rule 98 (r_complete_gotof -> .)
    CTE_S           reduce using rule 98 (r_complete_gotof -> .)
    LPAREN          reduce using rule 98 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 98 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 265

state 265

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof . r_clear_for
    (103) r_clear_for -> .

    LEE             reduce using rule 103 (r_clear_for -> .)
    ESCRIBE         reduce using rule 103 (r_clear_for -> .)
    ID              reduce using rule 103 (r_clear_for -> .)
    SI              reduce using rule 103 (r_clear_for -> .)
    MIENTRAS        reduce using rule 103 (r_clear_for -> .)
    DESDE           reduce using rule 103 (r_clear_for -> .)
    CTE_I           reduce using rule 103 (r_clear_for -> .)
    CTE_F           reduce using rule 103 (r_clear_for -> .)
    CTE_C           reduce using rule 103 (r_clear_for -> .)
    CTE_S           reduce using rule 103 (r_clear_for -> .)
    LPAREN          reduce using rule 103 (r_clear_for -> .)
    RBRACKET        reduce using rule 103 (r_clear_for -> .)

    r_clear_for                    shift and go to state 266

state 266

    (71) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .

    LEE             reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    ESCRIBE         reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    ID              reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    SI              reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    MIENTRAS        reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    DESDE           reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_I           reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_F           reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_C           reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_S           reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    LPAREN          reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    RBRACKET        reduce using rule 71 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_constant r_new_equal HASTA CTE_I r_new_constant r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 146 resolved as shift
