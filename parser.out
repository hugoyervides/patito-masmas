Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DOT
    INV
    NULL
    TRAN

Grammar

Rule 0     S' -> PROG
Rule 1     EMPTY -> <empty>
Rule 2     MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE
Rule 3     PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN
Rule 4     VARS -> VAR TIPO
Rule 5     VARS -> EMPTY
Rule 6     TIPO -> INT push_type VAR_INT SEMI_COLON TIPO
Rule 7     TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO
Rule 8     TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO
Rule 9     TIPO -> EMPTY
Rule 10    VAR_INT -> LIST_ID push_var COMMA VAR_INT
Rule 11    VAR_INT -> ID push_var COMMA VAR_INT
Rule 12    VAR_INT -> LIST_ID push_var
Rule 13    VAR_INT -> ID push_var
Rule 14    VAR_TIPO -> ID push_var COMMA
Rule 15    VAR_TIPO -> ID push_var
Rule 16    LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ
Rule 17    LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
Rule 18    EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
Rule 19    EXPRESION_AUX -> COMPAR r_new_operator EXPRESION
Rule 20    EXPRESION_AUX -> AND r_new_operator EXPRESION
Rule 21    EXPRESION_AUX -> OR r_new_operator EXPRESION
Rule 22    EXPRESION_AUX -> EMPTY
Rule 23    TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
Rule 24    TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION
Rule 25    TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION
Rule 26    TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION
Rule 27    TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION
Rule 28    TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION
Rule 29    TLEVEL_EXPRESION_AUX -> EMPTY
Rule 30    SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
Rule 31    SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION
Rule 32    SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION
Rule 33    SLEVEL_EXPRESION_AUX -> EMPTY
Rule 34    FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
Rule 35    FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION
Rule 36    FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION
Rule 37    FLEVEL_EXPRESION_AUX -> EMPTY
Rule 38    VALUE_EXPRESION -> ID r_new_id
Rule 39    VALUE_EXPRESION -> ID DET
Rule 40    VALUE_EXPRESION -> LIST_ID
Rule 41    VALUE_EXPRESION -> CONSTANTE
Rule 42    VALUE_EXPRESION -> LLAMADA
Rule 43    VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
Rule 44    CONSTANTE -> CTE_I r_new_constant
Rule 45    CONSTANTE -> CTE_F r_new_constant
Rule 46    CONSTANTE -> CTE_C r_new_constant
Rule 47    CONSTANTE -> CTE_S r_new_constant
Rule 48    BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET
Rule 49    OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE
Rule 50    OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE
Rule 51    OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE
Rule 52    OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE
Rule 53    OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE
Rule 54    OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE
Rule 55    OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE
Rule 56    OPCION_BLOQUE -> EMPTY
Rule 57    FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
Rule 58    FUNCTION -> EMPTY
Rule 59    TIPO_FUNC -> INT
Rule 60    TIPO_FUNC -> FLOAT
Rule 61    TIPO_FUNC -> CHAR
Rule 62    TIPO_FUNC -> VOID
Rule 63    PARAMETROS -> AUX_PARAM
Rule 64    PARAMETROS -> EMPTY
Rule 65    AUX_PARAM -> INT ID NEXT_PARAM
Rule 66    AUX_PARAM -> FLOAT ID NEXT_PARAM
Rule 67    AUX_PARAM -> CHAR ID NEXT_PARAM
Rule 68    NEXT_PARAM -> COMMA AUX_PARAM
Rule 69    NEXT_PARAM -> EMPTY
Rule 70    DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
Rule 71    MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
Rule 72    LECTURA -> LEE LPAREN ID RPAREN
Rule 73    ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
Rule 74    LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN
Rule 75    TIPO_PARAMETROS -> EXPRESION
Rule 76    TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS
Rule 77    ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
Rule 78    ESTATUTO_SINO -> SINO BLOQUE
Rule 79    ESTATUTO_SINO -> EMPTY
Rule 80    ASIGNACION -> ID EQ EXPRESION
Rule 81    ASIGNACION -> LIST_ID EQ EXPRESION
Rule 82    r_new_id -> <empty>
Rule 83    r_new_constant -> <empty>
Rule 84    r_new_lparen -> <empty>
Rule 85    r_new_rparen -> <empty>
Rule 86    r_new_operator -> <empty>
Rule 87    r_new_quadruple_flevel -> <empty>
Rule 88    r_new_quadruple_slevel -> <empty>
Rule 89    r_new_quadruple_tlevel -> <empty>
Rule 90    r_new_quadruple -> <empty>
Rule 91    push_type -> <empty>
Rule 92    push_func -> <empty>
Rule 93    push_var -> <empty>
Rule 94    push_main -> <empty>

Terminals, with rules where they appear

AND                  : 20
CHAR                 : 8 61 67
COLON                : 
COMMA                : 10 11 14 68 76
COMMENT              : 
COMPAR               : 19
CTE_C                : 46
CTE_F                : 45
CTE_I                : 44 70 70
CTE_S                : 47
DESDE                : 70
DET                  : 39
DIV                  : 36
DOT                  : 
ENTONCES             : 77
EQ                   : 70 80 81
ESCRIBE              : 73
FLOAT                : 7 60 66
FUNCION              : 57
GREATER              : 27
GREATER_EQ           : 25
HACER                : 70
HASTA                : 70
HAZ                  : 71
ID                   : 3 11 13 14 15 16 17 38 39 57 65 66 67 70 72 74 80
INT                  : 6 59 65
INV                  : 
LBRACKET             : 48
LEE                  : 72
LESS                 : 28
LESS_EQ              : 26
LPAREN               : 2 43 57 71 72 73 74 77
LSQ                  : 16 17 17
MIENTRAS             : 71
MINUS                : 32
MULT                 : 35
NOT_EQ               : 24
NULL                 : 
OR                   : 21
PLUS                 : 31
PRINCIPAL            : 2
PROGRAMA             : 3
RBRACKET             : 48
RPAREN               : 2 43 57 71 72 73 74 77
RSQ                  : 16 17 17
SEMI_COLON           : 3 6 7 8 49 50 51 55
SI                   : 77
SINO                 : 78
TRAN                 : 
VAR                  : 4
VOID                 : 62
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 55
AUX_PARAM            : 63 68
BLOQUE               : 2 57 70 71 77 78
CONSTANTE            : 41
DESDE_CICLO          : 54
EMPTY                : 5 9 22 29 33 37 56 58 64 69 79
ESCRITURA            : 50
ESTATUTO             : 52
ESTATUTO_SINO        : 77
EXPRESION            : 19 20 21 43 71 75 76 77 80 81
EXPRESION_AUX        : 18
FLEVEL_EXPRESION     : 30 35 36
FLEVEL_EXPRESION_AUX : 34
FUNCTION             : 3 57
LECTURA              : 49
LIST_ID              : 10 12 40 81
LLAMADA              : 42 51
MAIN                 : 3
MIENTRAS_CICLO       : 53
NEXT_PARAM           : 65 66 67
OPCION_BLOQUE        : 48 49 50 51 52 53 54 55
PARAMETROS           : 57
PROG                 : 0
SLEVEL_EXPRESION     : 16 17 17 23 31 32
SLEVEL_EXPRESION_AUX : 30
TIPO                 : 4 6 7 8
TIPO_FUNC            : 57
TIPO_PARAMETROS      : 73 74 76
TLEVEL_EXPRESION     : 18 24 25 26 27 28
TLEVEL_EXPRESION_AUX : 23
VALUE_EXPRESION      : 34
VARS                 : 3 57
VAR_INT              : 6 10 11
VAR_TIPO             : 7 8
push_func            : 57
push_main            : 2
push_type            : 6 7 8
push_var             : 10 11 12 13 14 15 16 17
r_new_constant       : 44 45 46 47
r_new_id             : 38
r_new_lparen         : 43
r_new_operator       : 19 20 21 24 25 26 27 28 31 32 35 36
r_new_quadruple      : 18
r_new_quadruple_flevel : 34
r_new_quadruple_slevel : 30
r_new_quadruple_tlevel : 23
r_new_rparen         : 43

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (3) PROG -> . PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN

    PROGRAMA        shift and go to state 2

    PROG                           shift and go to state 1

state 1

    (0) S' -> PROG .



state 2

    (3) PROG -> PROGRAMA . ID SEMI_COLON VARS FUNCTION MAIN

    ID              shift and go to state 3


state 3

    (3) PROG -> PROGRAMA ID . SEMI_COLON VARS FUNCTION MAIN

    SEMI_COLON      shift and go to state 4


state 4

    (3) PROG -> PROGRAMA ID SEMI_COLON . VARS FUNCTION MAIN
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 6
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 5
    EMPTY                          shift and go to state 7

state 5

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS . FUNCTION MAIN
    (57) FUNCTION -> . FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (58) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 9
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 8
    EMPTY                          shift and go to state 10

state 6

    (4) VARS -> VAR . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 11
    EMPTY                          shift and go to state 15

state 7

    (5) VARS -> EMPTY .

    FUNCION         reduce using rule 5 (VARS -> EMPTY .)
    PRINCIPAL       reduce using rule 5 (VARS -> EMPTY .)
    LBRACKET        reduce using rule 5 (VARS -> EMPTY .)


state 8

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION . MAIN
    (2) MAIN -> . PRINCIPAL push_main LPAREN RPAREN BLOQUE

    PRINCIPAL       shift and go to state 17

    MAIN                           shift and go to state 16

state 9

    (57) FUNCTION -> FUNCION . TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (59) TIPO_FUNC -> . INT
    (60) TIPO_FUNC -> . FLOAT
    (61) TIPO_FUNC -> . CHAR
    (62) TIPO_FUNC -> . VOID

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    VOID            shift and go to state 22

    TIPO_FUNC                      shift and go to state 18

state 10

    (58) FUNCTION -> EMPTY .

    PRINCIPAL       reduce using rule 58 (FUNCTION -> EMPTY .)


state 11

    (4) VARS -> VAR TIPO .

    FUNCION         reduce using rule 4 (VARS -> VAR TIPO .)
    PRINCIPAL       reduce using rule 4 (VARS -> VAR TIPO .)
    LBRACKET        reduce using rule 4 (VARS -> VAR TIPO .)


state 12

    (6) TIPO -> INT . push_type VAR_INT SEMI_COLON TIPO
    (91) push_type -> .

    ID              reduce using rule 91 (push_type -> .)

    push_type                      shift and go to state 23

state 13

    (7) TIPO -> FLOAT . push_type VAR_TIPO SEMI_COLON TIPO
    (91) push_type -> .

    ID              reduce using rule 91 (push_type -> .)

    push_type                      shift and go to state 24

state 14

    (8) TIPO -> CHAR . push_type VAR_TIPO SEMI_COLON TIPO
    (91) push_type -> .

    ID              reduce using rule 91 (push_type -> .)

    push_type                      shift and go to state 25

state 15

    (9) TIPO -> EMPTY .

    FUNCION         reduce using rule 9 (TIPO -> EMPTY .)
    PRINCIPAL       reduce using rule 9 (TIPO -> EMPTY .)
    LBRACKET        reduce using rule 9 (TIPO -> EMPTY .)


state 16

    (3) PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN .

    $end            reduce using rule 3 (PROG -> PROGRAMA ID SEMI_COLON VARS FUNCTION MAIN .)


state 17

    (2) MAIN -> PRINCIPAL . push_main LPAREN RPAREN BLOQUE
    (94) push_main -> .

    LPAREN          reduce using rule 94 (push_main -> .)

    push_main                      shift and go to state 26

state 18

    (57) FUNCTION -> FUNCION TIPO_FUNC . ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    ID              shift and go to state 27


state 19

    (59) TIPO_FUNC -> INT .

    ID              reduce using rule 59 (TIPO_FUNC -> INT .)


state 20

    (60) TIPO_FUNC -> FLOAT .

    ID              reduce using rule 60 (TIPO_FUNC -> FLOAT .)


state 21

    (61) TIPO_FUNC -> CHAR .

    ID              reduce using rule 61 (TIPO_FUNC -> CHAR .)


state 22

    (62) TIPO_FUNC -> VOID .

    ID              reduce using rule 62 (TIPO_FUNC -> VOID .)


state 23

    (6) TIPO -> INT push_type . VAR_INT SEMI_COLON TIPO
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 30

    VAR_INT                        shift and go to state 28
    LIST_ID                        shift and go to state 29

state 24

    (7) TIPO -> FLOAT push_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID push_var COMMA
    (15) VAR_TIPO -> . ID push_var

    ID              shift and go to state 32

    VAR_TIPO                       shift and go to state 31

state 25

    (8) TIPO -> CHAR push_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID push_var COMMA
    (15) VAR_TIPO -> . ID push_var

    ID              shift and go to state 32

    VAR_TIPO                       shift and go to state 33

state 26

    (2) MAIN -> PRINCIPAL push_main . LPAREN RPAREN BLOQUE

    LPAREN          shift and go to state 34


state 27

    (57) FUNCTION -> FUNCION TIPO_FUNC ID . push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (92) push_func -> .

    LPAREN          reduce using rule 92 (push_func -> .)

    push_func                      shift and go to state 35

state 28

    (6) TIPO -> INT push_type VAR_INT . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 36


state 29

    (10) VAR_INT -> LIST_ID . push_var COMMA VAR_INT
    (12) VAR_INT -> LIST_ID . push_var
    (93) push_var -> .

    COMMA           reduce using rule 93 (push_var -> .)
    SEMI_COLON      reduce using rule 93 (push_var -> .)

    push_var                       shift and go to state 37

state 30

    (11) VAR_INT -> ID . push_var COMMA VAR_INT
    (13) VAR_INT -> ID . push_var
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (93) push_var -> .

    COMMA           reduce using rule 93 (push_var -> .)
    LSQ             reduce using rule 93 (push_var -> .)
    SEMI_COLON      reduce using rule 93 (push_var -> .)

    push_var                       shift and go to state 38

state 31

    (7) TIPO -> FLOAT push_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 39


state 32

    (14) VAR_TIPO -> ID . push_var COMMA
    (15) VAR_TIPO -> ID . push_var
    (93) push_var -> .

    COMMA           reduce using rule 93 (push_var -> .)
    SEMI_COLON      reduce using rule 93 (push_var -> .)

    push_var                       shift and go to state 40

state 33

    (8) TIPO -> CHAR push_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 41


state 34

    (2) MAIN -> PRINCIPAL push_main LPAREN . RPAREN BLOQUE

    RPAREN          shift and go to state 42


state 35

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func . LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    LPAREN          shift and go to state 43


state 36

    (6) TIPO -> INT push_type VAR_INT SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 44
    EMPTY                          shift and go to state 15

state 37

    (10) VAR_INT -> LIST_ID push_var . COMMA VAR_INT
    (12) VAR_INT -> LIST_ID push_var .

    COMMA           shift and go to state 45
    SEMI_COLON      reduce using rule 12 (VAR_INT -> LIST_ID push_var .)


state 38

    (11) VAR_INT -> ID push_var . COMMA VAR_INT
    (13) VAR_INT -> ID push_var .
    (16) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    COMMA           shift and go to state 46
    SEMI_COLON      reduce using rule 13 (VAR_INT -> ID push_var .)
    LSQ             shift and go to state 47


state 39

    (7) TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 48
    EMPTY                          shift and go to state 15

state 40

    (14) VAR_TIPO -> ID push_var . COMMA
    (15) VAR_TIPO -> ID push_var .

    COMMA           shift and go to state 49
    SEMI_COLON      reduce using rule 15 (VAR_TIPO -> ID push_var .)


state 41

    (8) TIPO -> CHAR push_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 50
    EMPTY                          shift and go to state 15

state 42

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 51

state 43

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN . PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (63) PARAMETROS -> . AUX_PARAM
    (64) PARAMETROS -> . EMPTY
    (65) AUX_PARAM -> . INT ID NEXT_PARAM
    (66) AUX_PARAM -> . FLOAT ID NEXT_PARAM
    (67) AUX_PARAM -> . CHAR ID NEXT_PARAM
    (1) EMPTY -> .

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    CHAR            shift and go to state 58
    RPAREN          reduce using rule 1 (EMPTY -> .)

    PARAMETROS                     shift and go to state 53
    AUX_PARAM                      shift and go to state 54
    EMPTY                          shift and go to state 55

state 44

    (6) TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .

    FUNCION         reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)


state 45

    (10) VAR_INT -> LIST_ID push_var COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 30

    LIST_ID                        shift and go to state 29
    VAR_INT                        shift and go to state 59

state 46

    (11) VAR_INT -> ID push_var COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 30

    VAR_INT                        shift and go to state 60
    LIST_ID                        shift and go to state 29

state 47

    (16) LIST_ID -> ID push_var LSQ . SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var LSQ . SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 62
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 48

    (7) TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)


state 49

    (14) VAR_TIPO -> ID push_var COMMA .

    SEMI_COLON      reduce using rule 14 (VAR_TIPO -> ID push_var COMMA .)


state 50

    (8) TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)


state 51

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .

    $end            reduce using rule 2 (MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .)


state 52

    (48) BLOQUE -> LBRACKET . OPCION_BLOQUE RBRACKET
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    OPCION_BLOQUE                  shift and go to state 73
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 53

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS . RPAREN VARS BLOQUE FUNCTION

    RPAREN          shift and go to state 89


state 54

    (63) PARAMETROS -> AUX_PARAM .

    RPAREN          reduce using rule 63 (PARAMETROS -> AUX_PARAM .)


state 55

    (64) PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 64 (PARAMETROS -> EMPTY .)


state 56

    (65) AUX_PARAM -> INT . ID NEXT_PARAM

    ID              shift and go to state 90


state 57

    (66) AUX_PARAM -> FLOAT . ID NEXT_PARAM

    ID              shift and go to state 91


state 58

    (67) AUX_PARAM -> CHAR . ID NEXT_PARAM

    ID              shift and go to state 92


state 59

    (10) VAR_INT -> LIST_ID push_var COMMA VAR_INT .

    SEMI_COLON      reduce using rule 10 (VAR_INT -> LIST_ID push_var COMMA VAR_INT .)


state 60

    (11) VAR_INT -> ID push_var COMMA VAR_INT .

    SEMI_COLON      reduce using rule 11 (VAR_INT -> ID push_var COMMA VAR_INT .)


state 61

    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (74) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN
    (82) r_new_id -> .
    (93) push_var -> .

    DET             shift and go to state 94
    LPAREN          shift and go to state 96
    MULT            reduce using rule 82 (r_new_id -> .)
    DIV             reduce using rule 82 (r_new_id -> .)
    PLUS            reduce using rule 82 (r_new_id -> .)
    MINUS           reduce using rule 82 (r_new_id -> .)
    RSQ             reduce using rule 82 (r_new_id -> .)
    NOT_EQ          reduce using rule 82 (r_new_id -> .)
    GREATER_EQ      reduce using rule 82 (r_new_id -> .)
    LESS_EQ         reduce using rule 82 (r_new_id -> .)
    GREATER         reduce using rule 82 (r_new_id -> .)
    LESS            reduce using rule 82 (r_new_id -> .)
    COMPAR          reduce using rule 82 (r_new_id -> .)
    AND             reduce using rule 82 (r_new_id -> .)
    OR              reduce using rule 82 (r_new_id -> .)
    COMMA           reduce using rule 82 (r_new_id -> .)
    RPAREN          reduce using rule 82 (r_new_id -> .)
    SEMI_COLON      reduce using rule 82 (r_new_id -> .)
    LSQ             reduce using rule 93 (push_var -> .)

    r_new_id                       shift and go to state 93
    push_var                       shift and go to state 95

state 62

    (16) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION . RSQ
    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION . RSQ LSQ SLEVEL_EXPRESION RSQ

    RSQ             shift and go to state 97


state 63

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION . r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (88) r_new_quadruple_slevel -> .

    PLUS            reduce using rule 88 (r_new_quadruple_slevel -> .)
    MINUS           reduce using rule 88 (r_new_quadruple_slevel -> .)
    RSQ             reduce using rule 88 (r_new_quadruple_slevel -> .)
    NOT_EQ          reduce using rule 88 (r_new_quadruple_slevel -> .)
    GREATER_EQ      reduce using rule 88 (r_new_quadruple_slevel -> .)
    LESS_EQ         reduce using rule 88 (r_new_quadruple_slevel -> .)
    GREATER         reduce using rule 88 (r_new_quadruple_slevel -> .)
    LESS            reduce using rule 88 (r_new_quadruple_slevel -> .)
    COMPAR          reduce using rule 88 (r_new_quadruple_slevel -> .)
    AND             reduce using rule 88 (r_new_quadruple_slevel -> .)
    OR              reduce using rule 88 (r_new_quadruple_slevel -> .)
    COMMA           reduce using rule 88 (r_new_quadruple_slevel -> .)
    RPAREN          reduce using rule 88 (r_new_quadruple_slevel -> .)
    SEMI_COLON      reduce using rule 88 (r_new_quadruple_slevel -> .)

    r_new_quadruple_slevel         shift and go to state 98

state 64

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION . r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (87) r_new_quadruple_flevel -> .

    MULT            reduce using rule 87 (r_new_quadruple_flevel -> .)
    DIV             reduce using rule 87 (r_new_quadruple_flevel -> .)
    PLUS            reduce using rule 87 (r_new_quadruple_flevel -> .)
    MINUS           reduce using rule 87 (r_new_quadruple_flevel -> .)
    RSQ             reduce using rule 87 (r_new_quadruple_flevel -> .)
    NOT_EQ          reduce using rule 87 (r_new_quadruple_flevel -> .)
    GREATER_EQ      reduce using rule 87 (r_new_quadruple_flevel -> .)
    LESS_EQ         reduce using rule 87 (r_new_quadruple_flevel -> .)
    GREATER         reduce using rule 87 (r_new_quadruple_flevel -> .)
    LESS            reduce using rule 87 (r_new_quadruple_flevel -> .)
    COMPAR          reduce using rule 87 (r_new_quadruple_flevel -> .)
    AND             reduce using rule 87 (r_new_quadruple_flevel -> .)
    OR              reduce using rule 87 (r_new_quadruple_flevel -> .)
    COMMA           reduce using rule 87 (r_new_quadruple_flevel -> .)
    RPAREN          reduce using rule 87 (r_new_quadruple_flevel -> .)
    SEMI_COLON      reduce using rule 87 (r_new_quadruple_flevel -> .)

    r_new_quadruple_flevel         shift and go to state 99

state 65

    (40) VALUE_EXPRESION -> LIST_ID .

    MULT            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    DIV             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    PLUS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    MINUS           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RSQ             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    NOT_EQ          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER_EQ      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS_EQ         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMPAR          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    AND             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    OR              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMMA           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RPAREN          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    SEMI_COLON      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)


state 66

    (41) VALUE_EXPRESION -> CONSTANTE .

    MULT            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    DIV             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    PLUS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    MINUS           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RSQ             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    NOT_EQ          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER_EQ      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS_EQ         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMPAR          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    AND             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    OR              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMMA           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RPAREN          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    SEMI_COLON      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)


state 67

    (42) VALUE_EXPRESION -> LLAMADA .

    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RSQ             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMMA           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RPAREN          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    SEMI_COLON      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)


state 68

    (43) VALUE_EXPRESION -> r_new_lparen . LPAREN EXPRESION RPAREN r_new_rparen

    LPAREN          shift and go to state 100


state 69

    (44) CONSTANTE -> CTE_I . r_new_constant
    (83) r_new_constant -> .

    MULT            reduce using rule 83 (r_new_constant -> .)
    DIV             reduce using rule 83 (r_new_constant -> .)
    PLUS            reduce using rule 83 (r_new_constant -> .)
    MINUS           reduce using rule 83 (r_new_constant -> .)
    RSQ             reduce using rule 83 (r_new_constant -> .)
    NOT_EQ          reduce using rule 83 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 83 (r_new_constant -> .)
    LESS_EQ         reduce using rule 83 (r_new_constant -> .)
    GREATER         reduce using rule 83 (r_new_constant -> .)
    LESS            reduce using rule 83 (r_new_constant -> .)
    COMPAR          reduce using rule 83 (r_new_constant -> .)
    AND             reduce using rule 83 (r_new_constant -> .)
    OR              reduce using rule 83 (r_new_constant -> .)
    COMMA           reduce using rule 83 (r_new_constant -> .)
    RPAREN          reduce using rule 83 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 83 (r_new_constant -> .)

    r_new_constant                 shift and go to state 101

state 70

    (45) CONSTANTE -> CTE_F . r_new_constant
    (83) r_new_constant -> .

    MULT            reduce using rule 83 (r_new_constant -> .)
    DIV             reduce using rule 83 (r_new_constant -> .)
    PLUS            reduce using rule 83 (r_new_constant -> .)
    MINUS           reduce using rule 83 (r_new_constant -> .)
    RSQ             reduce using rule 83 (r_new_constant -> .)
    NOT_EQ          reduce using rule 83 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 83 (r_new_constant -> .)
    LESS_EQ         reduce using rule 83 (r_new_constant -> .)
    GREATER         reduce using rule 83 (r_new_constant -> .)
    LESS            reduce using rule 83 (r_new_constant -> .)
    COMPAR          reduce using rule 83 (r_new_constant -> .)
    AND             reduce using rule 83 (r_new_constant -> .)
    OR              reduce using rule 83 (r_new_constant -> .)
    COMMA           reduce using rule 83 (r_new_constant -> .)
    RPAREN          reduce using rule 83 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 83 (r_new_constant -> .)

    r_new_constant                 shift and go to state 102

state 71

    (46) CONSTANTE -> CTE_C . r_new_constant
    (83) r_new_constant -> .

    MULT            reduce using rule 83 (r_new_constant -> .)
    DIV             reduce using rule 83 (r_new_constant -> .)
    PLUS            reduce using rule 83 (r_new_constant -> .)
    MINUS           reduce using rule 83 (r_new_constant -> .)
    RSQ             reduce using rule 83 (r_new_constant -> .)
    NOT_EQ          reduce using rule 83 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 83 (r_new_constant -> .)
    LESS_EQ         reduce using rule 83 (r_new_constant -> .)
    GREATER         reduce using rule 83 (r_new_constant -> .)
    LESS            reduce using rule 83 (r_new_constant -> .)
    COMPAR          reduce using rule 83 (r_new_constant -> .)
    AND             reduce using rule 83 (r_new_constant -> .)
    OR              reduce using rule 83 (r_new_constant -> .)
    COMMA           reduce using rule 83 (r_new_constant -> .)
    RPAREN          reduce using rule 83 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 83 (r_new_constant -> .)

    r_new_constant                 shift and go to state 103

state 72

    (47) CONSTANTE -> CTE_S . r_new_constant
    (83) r_new_constant -> .

    MULT            reduce using rule 83 (r_new_constant -> .)
    DIV             reduce using rule 83 (r_new_constant -> .)
    PLUS            reduce using rule 83 (r_new_constant -> .)
    MINUS           reduce using rule 83 (r_new_constant -> .)
    RSQ             reduce using rule 83 (r_new_constant -> .)
    NOT_EQ          reduce using rule 83 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 83 (r_new_constant -> .)
    LESS_EQ         reduce using rule 83 (r_new_constant -> .)
    GREATER         reduce using rule 83 (r_new_constant -> .)
    LESS            reduce using rule 83 (r_new_constant -> .)
    COMPAR          reduce using rule 83 (r_new_constant -> .)
    AND             reduce using rule 83 (r_new_constant -> .)
    OR              reduce using rule 83 (r_new_constant -> .)
    COMMA           reduce using rule 83 (r_new_constant -> .)
    RPAREN          reduce using rule 83 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 83 (r_new_constant -> .)

    r_new_constant                 shift and go to state 104

state 73

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE . RBRACKET

    RBRACKET        shift and go to state 105


state 74

    (49) OPCION_BLOQUE -> LECTURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 106


state 75

    (50) OPCION_BLOQUE -> ESCRITURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 107


state 76

    (51) OPCION_BLOQUE -> LLAMADA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 108


state 77

    (52) OPCION_BLOQUE -> ESTATUTO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESTATUTO                       shift and go to state 77
    OPCION_BLOQUE                  shift and go to state 109
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 78

    (53) OPCION_BLOQUE -> MIENTRAS_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    MIENTRAS_CICLO                 shift and go to state 78
    OPCION_BLOQUE                  shift and go to state 110
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 79

    (54) OPCION_BLOQUE -> DESDE_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    DESDE_CICLO                    shift and go to state 79
    OPCION_BLOQUE                  shift and go to state 111
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 80

    (55) OPCION_BLOQUE -> ASIGNACION . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 112


state 81

    (56) OPCION_BLOQUE -> EMPTY .

    RBRACKET        reduce using rule 56 (OPCION_BLOQUE -> EMPTY .)


state 82

    (72) LECTURA -> LEE . LPAREN ID RPAREN

    LPAREN          shift and go to state 113


state 83

    (74) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN
    (80) ASIGNACION -> ID . EQ EXPRESION
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (93) push_var -> .

    LPAREN          shift and go to state 96
    EQ              shift and go to state 114
    LSQ             reduce using rule 93 (push_var -> .)

    push_var                       shift and go to state 95

state 84

    (73) ESCRITURA -> ESCRIBE . LPAREN TIPO_PARAMETROS RPAREN

    LPAREN          shift and go to state 115


state 85

    (77) ESTATUTO -> SI . LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO

    LPAREN          shift and go to state 116


state 86

    (71) MIENTRAS_CICLO -> MIENTRAS . LPAREN EXPRESION RPAREN HAZ BLOQUE

    LPAREN          shift and go to state 117


state 87

    (70) DESDE_CICLO -> DESDE . ID EQ CTE_I HASTA CTE_I HACER BLOQUE

    ID              shift and go to state 118


state 88

    (81) ASIGNACION -> LIST_ID . EQ EXPRESION

    EQ              shift and go to state 119


state 89

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN . VARS BLOQUE FUNCTION
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 120
    EMPTY                          shift and go to state 7

state 90

    (65) AUX_PARAM -> INT ID . NEXT_PARAM
    (68) NEXT_PARAM -> . COMMA AUX_PARAM
    (69) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 122
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 121
    EMPTY                          shift and go to state 123

state 91

    (66) AUX_PARAM -> FLOAT ID . NEXT_PARAM
    (68) NEXT_PARAM -> . COMMA AUX_PARAM
    (69) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 122
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 124
    EMPTY                          shift and go to state 123

state 92

    (67) AUX_PARAM -> CHAR ID . NEXT_PARAM
    (68) NEXT_PARAM -> . COMMA AUX_PARAM
    (69) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 122
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 125
    EMPTY                          shift and go to state 123

state 93

    (38) VALUE_EXPRESION -> ID r_new_id .

    MULT            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    DIV             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    PLUS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    MINUS           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RSQ             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    NOT_EQ          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER_EQ      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS_EQ         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMPAR          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    AND             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    OR              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMMA           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RPAREN          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    SEMI_COLON      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)


state 94

    (39) VALUE_EXPRESION -> ID DET .

    MULT            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    DIV             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    PLUS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    MINUS           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RSQ             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    NOT_EQ          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER_EQ      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS_EQ         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMPAR          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    AND             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    OR              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMMA           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RPAREN          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    SEMI_COLON      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)


state 95

    (16) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LSQ             shift and go to state 47


state 96

    (74) LLAMADA -> ID LPAREN . TIPO_PARAMETROS RPAREN
    (75) TIPO_PARAMETROS -> . EXPRESION
    (76) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 126
    EXPRESION                      shift and go to state 127
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 97

    (16) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .
    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ . LSQ SLEVEL_EXPRESION RSQ

    COMMA           reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LSQ             shift and go to state 130


state 98

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel . SLEVEL_EXPRESION_AUX
    (31) SLEVEL_EXPRESION_AUX -> . PLUS r_new_operator SLEVEL_EXPRESION
    (32) SLEVEL_EXPRESION_AUX -> . MINUS r_new_operator SLEVEL_EXPRESION
    (33) SLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    SLEVEL_EXPRESION_AUX           shift and go to state 131
    EMPTY                          shift and go to state 134

state 99

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel . FLEVEL_EXPRESION_AUX
    (35) FLEVEL_EXPRESION_AUX -> . MULT r_new_operator FLEVEL_EXPRESION
    (36) FLEVEL_EXPRESION_AUX -> . DIV r_new_operator FLEVEL_EXPRESION
    (37) FLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    MULT            shift and go to state 136
    DIV             shift and go to state 137
    PLUS            reduce using rule 1 (EMPTY -> .)
    MINUS           reduce using rule 1 (EMPTY -> .)
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    FLEVEL_EXPRESION_AUX           shift and go to state 135
    EMPTY                          shift and go to state 138

state 100

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN . EXPRESION RPAREN r_new_rparen
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 68
    EXPRESION                      shift and go to state 139
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67

state 101

    (44) CONSTANTE -> CTE_I r_new_constant .

    MULT            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    DIV             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    PLUS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    MINUS           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RSQ             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    NOT_EQ          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER_EQ      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS_EQ         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMPAR          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    AND             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    OR              reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMMA           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RPAREN          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    SEMI_COLON      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)


state 102

    (45) CONSTANTE -> CTE_F r_new_constant .

    MULT            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    DIV             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    PLUS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    MINUS           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RSQ             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    NOT_EQ          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER_EQ      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS_EQ         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMPAR          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    AND             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    OR              reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMMA           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RPAREN          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    SEMI_COLON      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)


state 103

    (46) CONSTANTE -> CTE_C r_new_constant .

    MULT            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    DIV             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    PLUS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    MINUS           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RSQ             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    NOT_EQ          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER_EQ      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS_EQ         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMPAR          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    AND             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    OR              reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMMA           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RPAREN          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    SEMI_COLON      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)


state 104

    (47) CONSTANTE -> CTE_S r_new_constant .

    MULT            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    DIV             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    PLUS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    MINUS           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RSQ             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    NOT_EQ          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER_EQ      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS_EQ         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMPAR          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    AND             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    OR              reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMMA           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RPAREN          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    SEMI_COLON      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)


state 105

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .

    $end            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    FUNCION         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    PRINCIPAL       reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SINO            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LEE             reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ESCRIBE         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ID              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SI              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    MIENTRAS        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    DESDE           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RBRACKET        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)


state 106

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    LECTURA                        shift and go to state 74
    OPCION_BLOQUE                  shift and go to state 140
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 107

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESCRITURA                      shift and go to state 75
    OPCION_BLOQUE                  shift and go to state 141
    LECTURA                        shift and go to state 74
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 108

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    LLAMADA                        shift and go to state 76
    OPCION_BLOQUE                  shift and go to state 142
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    ASIGNACION                     shift and go to state 80
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 109

    (52) OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE .

    RBRACKET        reduce using rule 52 (OPCION_BLOQUE -> ESTATUTO OPCION_BLOQUE .)


state 110

    (53) OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 53 (OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .)


state 111

    (54) OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 54 (OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .)


state 112

    (55) OPCION_BLOQUE -> ASIGNACION SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . ESTATUTO OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . EMPTY
    (72) LECTURA -> . LEE LPAREN ID RPAREN
    (73) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (77) ESTATUTO -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (71) MIENTRAS_CICLO -> . MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE
    (70) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . ID EQ EXPRESION
    (81) ASIGNACION -> . LIST_ID EQ EXPRESION
    (1) EMPTY -> .
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LEE             shift and go to state 82
    ESCRIBE         shift and go to state 84
    ID              shift and go to state 83
    SI              shift and go to state 85
    MIENTRAS        shift and go to state 86
    DESDE           shift and go to state 87
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ASIGNACION                     shift and go to state 80
    OPCION_BLOQUE                  shift and go to state 143
    LECTURA                        shift and go to state 74
    ESCRITURA                      shift and go to state 75
    LLAMADA                        shift and go to state 76
    ESTATUTO                       shift and go to state 77
    MIENTRAS_CICLO                 shift and go to state 78
    DESDE_CICLO                    shift and go to state 79
    EMPTY                          shift and go to state 81
    LIST_ID                        shift and go to state 88

state 113

    (72) LECTURA -> LEE LPAREN . ID RPAREN

    ID              shift and go to state 144


state 114

    (80) ASIGNACION -> ID EQ . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 145
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 115

    (73) ESCRITURA -> ESCRIBE LPAREN . TIPO_PARAMETROS RPAREN
    (75) TIPO_PARAMETROS -> . EXPRESION
    (76) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 146
    EXPRESION                      shift and go to state 127
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 116

    (77) ESTATUTO -> SI LPAREN . EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 147
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 117

    (71) MIENTRAS_CICLO -> MIENTRAS LPAREN . EXPRESION RPAREN HAZ BLOQUE
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 148
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 118

    (70) DESDE_CICLO -> DESDE ID . EQ CTE_I HASTA CTE_I HACER BLOQUE

    EQ              shift and go to state 149


state 119

    (81) ASIGNACION -> LIST_ID EQ . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    LIST_ID                        shift and go to state 65
    EXPRESION                      shift and go to state 150
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 120

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS . BLOQUE FUNCTION
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 151

state 121

    (65) AUX_PARAM -> INT ID NEXT_PARAM .

    RPAREN          reduce using rule 65 (AUX_PARAM -> INT ID NEXT_PARAM .)


state 122

    (68) NEXT_PARAM -> COMMA . AUX_PARAM
    (65) AUX_PARAM -> . INT ID NEXT_PARAM
    (66) AUX_PARAM -> . FLOAT ID NEXT_PARAM
    (67) AUX_PARAM -> . CHAR ID NEXT_PARAM

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    CHAR            shift and go to state 58

    AUX_PARAM                      shift and go to state 152

state 123

    (69) NEXT_PARAM -> EMPTY .

    RPAREN          reduce using rule 69 (NEXT_PARAM -> EMPTY .)


state 124

    (66) AUX_PARAM -> FLOAT ID NEXT_PARAM .

    RPAREN          reduce using rule 66 (AUX_PARAM -> FLOAT ID NEXT_PARAM .)


state 125

    (67) AUX_PARAM -> CHAR ID NEXT_PARAM .

    RPAREN          reduce using rule 67 (AUX_PARAM -> CHAR ID NEXT_PARAM .)


state 126

    (74) LLAMADA -> ID LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 153


state 127

    (75) TIPO_PARAMETROS -> EXPRESION .
    (76) TIPO_PARAMETROS -> EXPRESION . COMMA TIPO_PARAMETROS

    RPAREN          reduce using rule 75 (TIPO_PARAMETROS -> EXPRESION .)
    COMMA           shift and go to state 154


state 128

    (18) EXPRESION -> TLEVEL_EXPRESION . r_new_quadruple EXPRESION_AUX
    (90) r_new_quadruple -> .

    COMPAR          reduce using rule 90 (r_new_quadruple -> .)
    AND             reduce using rule 90 (r_new_quadruple -> .)
    OR              reduce using rule 90 (r_new_quadruple -> .)
    COMMA           reduce using rule 90 (r_new_quadruple -> .)
    RPAREN          reduce using rule 90 (r_new_quadruple -> .)
    SEMI_COLON      reduce using rule 90 (r_new_quadruple -> .)

    r_new_quadruple                shift and go to state 155

state 129

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION . r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (89) r_new_quadruple_tlevel -> .

    NOT_EQ          reduce using rule 89 (r_new_quadruple_tlevel -> .)
    GREATER_EQ      reduce using rule 89 (r_new_quadruple_tlevel -> .)
    LESS_EQ         reduce using rule 89 (r_new_quadruple_tlevel -> .)
    GREATER         reduce using rule 89 (r_new_quadruple_tlevel -> .)
    LESS            reduce using rule 89 (r_new_quadruple_tlevel -> .)
    COMPAR          reduce using rule 89 (r_new_quadruple_tlevel -> .)
    AND             reduce using rule 89 (r_new_quadruple_tlevel -> .)
    OR              reduce using rule 89 (r_new_quadruple_tlevel -> .)
    COMMA           reduce using rule 89 (r_new_quadruple_tlevel -> .)
    RPAREN          reduce using rule 89 (r_new_quadruple_tlevel -> .)
    SEMI_COLON      reduce using rule 89 (r_new_quadruple_tlevel -> .)

    r_new_quadruple_tlevel         shift and go to state 156

state 130

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ . SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 157
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 131

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .

    RSQ             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)


state 132

    (31) SLEVEL_EXPRESION_AUX -> PLUS . r_new_operator SLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 158

state 133

    (32) SLEVEL_EXPRESION_AUX -> MINUS . r_new_operator SLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 159

state 134

    (33) SLEVEL_EXPRESION_AUX -> EMPTY .

    RSQ             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)


state 135

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .

    PLUS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    MINUS           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RSQ             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)


state 136

    (35) FLEVEL_EXPRESION_AUX -> MULT . r_new_operator FLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 160

state 137

    (36) FLEVEL_EXPRESION_AUX -> DIV . r_new_operator FLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 161

state 138

    (37) FLEVEL_EXPRESION_AUX -> EMPTY .

    PLUS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    MINUS           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RSQ             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)


state 139

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION . RPAREN r_new_rparen

    RPAREN          shift and go to state 162


state 140

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 49 (OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .)


state 141

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 50 (OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .)


state 142

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 51 (OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .)


state 143

    (55) OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 55 (OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .)


state 144

    (72) LECTURA -> LEE LPAREN ID . RPAREN

    RPAREN          shift and go to state 163


state 145

    (80) ASIGNACION -> ID EQ EXPRESION .

    SEMI_COLON      reduce using rule 80 (ASIGNACION -> ID EQ EXPRESION .)


state 146

    (73) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 164


state 147

    (77) ESTATUTO -> SI LPAREN EXPRESION . RPAREN ENTONCES BLOQUE ESTATUTO_SINO

    RPAREN          shift and go to state 165


state 148

    (71) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION . RPAREN HAZ BLOQUE

    RPAREN          shift and go to state 166


state 149

    (70) DESDE_CICLO -> DESDE ID EQ . CTE_I HASTA CTE_I HACER BLOQUE

    CTE_I           shift and go to state 167


state 150

    (81) ASIGNACION -> LIST_ID EQ EXPRESION .

    SEMI_COLON      reduce using rule 81 (ASIGNACION -> LIST_ID EQ EXPRESION .)


state 151

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE . FUNCTION
    (57) FUNCTION -> . FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (58) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 9
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 168
    EMPTY                          shift and go to state 10

state 152

    (68) NEXT_PARAM -> COMMA AUX_PARAM .

    RPAREN          reduce using rule 68 (NEXT_PARAM -> COMMA AUX_PARAM .)


state 153

    (74) LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .

    MULT            reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    DIV             reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    PLUS            reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    MINUS           reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RSQ             reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    SEMI_COLON      reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    NOT_EQ          reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER_EQ      reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS_EQ         reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER         reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS            reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMPAR          reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    AND             reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    OR              reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMMA           reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RPAREN          reduce using rule 74 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)


state 154

    (76) TIPO_PARAMETROS -> EXPRESION COMMA . TIPO_PARAMETROS
    (75) TIPO_PARAMETROS -> . EXPRESION
    (76) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 127
    TIPO_PARAMETROS                shift and go to state 169
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 155

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple . EXPRESION_AUX
    (19) EXPRESION_AUX -> . COMPAR r_new_operator EXPRESION
    (20) EXPRESION_AUX -> . AND r_new_operator EXPRESION
    (21) EXPRESION_AUX -> . OR r_new_operator EXPRESION
    (22) EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    COMPAR          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    EXPRESION_AUX                  shift and go to state 170
    EMPTY                          shift and go to state 174

state 156

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel . TLEVEL_EXPRESION_AUX
    (24) TLEVEL_EXPRESION_AUX -> . NOT_EQ r_new_operator TLEVEL_EXPRESION
    (25) TLEVEL_EXPRESION_AUX -> . GREATER_EQ r_new_operator TLEVEL_EXPRESION
    (26) TLEVEL_EXPRESION_AUX -> . LESS_EQ r_new_operator TLEVEL_EXPRESION
    (27) TLEVEL_EXPRESION_AUX -> . GREATER r_new_operator TLEVEL_EXPRESION
    (28) TLEVEL_EXPRESION_AUX -> . LESS r_new_operator TLEVEL_EXPRESION
    (29) TLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    NOT_EQ          shift and go to state 176
    GREATER_EQ      shift and go to state 177
    LESS_EQ         shift and go to state 178
    GREATER         shift and go to state 179
    LESS            shift and go to state 180
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    TLEVEL_EXPRESION_AUX           shift and go to state 175
    EMPTY                          shift and go to state 181

state 157

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION . RSQ

    RSQ             shift and go to state 182


state 158

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 183
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 159

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 184
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 160

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 185
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 161

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 186
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 162

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN . r_new_rparen
    (85) r_new_rparen -> .

    MULT            reduce using rule 85 (r_new_rparen -> .)
    DIV             reduce using rule 85 (r_new_rparen -> .)
    PLUS            reduce using rule 85 (r_new_rparen -> .)
    MINUS           reduce using rule 85 (r_new_rparen -> .)
    RSQ             reduce using rule 85 (r_new_rparen -> .)
    NOT_EQ          reduce using rule 85 (r_new_rparen -> .)
    GREATER_EQ      reduce using rule 85 (r_new_rparen -> .)
    LESS_EQ         reduce using rule 85 (r_new_rparen -> .)
    GREATER         reduce using rule 85 (r_new_rparen -> .)
    LESS            reduce using rule 85 (r_new_rparen -> .)
    COMPAR          reduce using rule 85 (r_new_rparen -> .)
    AND             reduce using rule 85 (r_new_rparen -> .)
    OR              reduce using rule 85 (r_new_rparen -> .)
    COMMA           reduce using rule 85 (r_new_rparen -> .)
    RPAREN          reduce using rule 85 (r_new_rparen -> .)
    SEMI_COLON      reduce using rule 85 (r_new_rparen -> .)

    r_new_rparen                   shift and go to state 187

state 163

    (72) LECTURA -> LEE LPAREN ID RPAREN .

    SEMI_COLON      reduce using rule 72 (LECTURA -> LEE LPAREN ID RPAREN .)


state 164

    (73) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .

    SEMI_COLON      reduce using rule 73 (ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .)


state 165

    (77) ESTATUTO -> SI LPAREN EXPRESION RPAREN . ENTONCES BLOQUE ESTATUTO_SINO

    ENTONCES        shift and go to state 188


state 166

    (71) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN . HAZ BLOQUE

    HAZ             shift and go to state 189


state 167

    (70) DESDE_CICLO -> DESDE ID EQ CTE_I . HASTA CTE_I HACER BLOQUE

    HASTA           shift and go to state 190


state 168

    (57) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .

    PRINCIPAL       reduce using rule 57 (FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .)


state 169

    (76) TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .

    RPAREN          reduce using rule 76 (TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .)


state 170

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .

    COMMA           reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    RPAREN          reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)


state 171

    (19) EXPRESION_AUX -> COMPAR . r_new_operator EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 191

state 172

    (20) EXPRESION_AUX -> AND . r_new_operator EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 192

state 173

    (21) EXPRESION_AUX -> OR . r_new_operator EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 193

state 174

    (22) EXPRESION_AUX -> EMPTY .

    COMMA           reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 22 (EXPRESION_AUX -> EMPTY .)


state 175

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .

    COMPAR          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)


state 176

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ . r_new_operator TLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 194

state 177

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ . r_new_operator TLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 195

state 178

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ . r_new_operator TLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 196

state 179

    (27) TLEVEL_EXPRESION_AUX -> GREATER . r_new_operator TLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 197

state 180

    (28) TLEVEL_EXPRESION_AUX -> LESS . r_new_operator TLEVEL_EXPRESION
    (86) r_new_operator -> .

    ID              reduce using rule 86 (r_new_operator -> .)
    CTE_I           reduce using rule 86 (r_new_operator -> .)
    CTE_F           reduce using rule 86 (r_new_operator -> .)
    CTE_C           reduce using rule 86 (r_new_operator -> .)
    CTE_S           reduce using rule 86 (r_new_operator -> .)
    LPAREN          reduce using rule 86 (r_new_operator -> .)

    r_new_operator                 shift and go to state 198

state 181

    (29) TLEVEL_EXPRESION_AUX -> EMPTY .

    COMPAR          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)


state 182

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .

    COMMA           reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)


state 183

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)


state 184

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)


state 185

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)


state 186

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)


state 187

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .

    MULT            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    DIV             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    PLUS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    MINUS           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RSQ             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    NOT_EQ          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER_EQ      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS_EQ         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMPAR          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    AND             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    OR              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMMA           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RPAREN          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    SEMI_COLON      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)


state 188

    (77) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES . BLOQUE ESTATUTO_SINO
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 199

state 189

    (71) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 200

state 190

    (70) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA . CTE_I HACER BLOQUE

    CTE_I           shift and go to state 201


state 191

    (19) EXPRESION_AUX -> COMPAR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 202
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 192

    (20) EXPRESION_AUX -> AND r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 203
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 193

    (21) EXPRESION_AUX -> OR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 204
    TLEVEL_EXPRESION               shift and go to state 128
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 194

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 205
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 195

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 206
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 196

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 207
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 197

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 208
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 198

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (74) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (84) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 84 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 209
    SLEVEL_EXPRESION               shift and go to state 129
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 199

    (77) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE . ESTATUTO_SINO
    (78) ESTATUTO_SINO -> . SINO BLOQUE
    (79) ESTATUTO_SINO -> . EMPTY
    (1) EMPTY -> .

    SINO            shift and go to state 211
    LEE             reduce using rule 1 (EMPTY -> .)
    ESCRIBE         reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    SI              reduce using rule 1 (EMPTY -> .)
    MIENTRAS        reduce using rule 1 (EMPTY -> .)
    DESDE           reduce using rule 1 (EMPTY -> .)
    RBRACKET        reduce using rule 1 (EMPTY -> .)

    ESTATUTO_SINO                  shift and go to state 210
    EMPTY                          shift and go to state 212

state 200

    (71) MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .

    LEE             reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    ESCRIBE         reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    ID              reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    SI              reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    MIENTRAS        reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    DESDE           reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)
    RBRACKET        reduce using rule 71 (MIENTRAS_CICLO -> MIENTRAS LPAREN EXPRESION RPAREN HAZ BLOQUE .)


state 201

    (70) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I . HACER BLOQUE

    HACER           shift and go to state 213


state 202

    (19) EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .

    COMMA           reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    RPAREN          reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)


state 203

    (20) EXPRESION_AUX -> AND r_new_operator EXPRESION .

    COMMA           reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    RPAREN          reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)


state 204

    (21) EXPRESION_AUX -> OR r_new_operator EXPRESION .

    COMMA           reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    RPAREN          reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)


state 205

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)


state 206

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)


state 207

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)


state 208

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)


state 209

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)


state 210

    (77) ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .

    LEE             reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    ESCRIBE         reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    ID              reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    SI              reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    MIENTRAS        reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    DESDE           reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)
    RBRACKET        reduce using rule 77 (ESTATUTO -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE ESTATUTO_SINO .)


state 211

    (78) ESTATUTO_SINO -> SINO . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 214

state 212

    (79) ESTATUTO_SINO -> EMPTY .

    LEE             reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    ESCRIBE         reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    ID              reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    SI              reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    MIENTRAS        reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    DESDE           reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)
    RBRACKET        reduce using rule 79 (ESTATUTO_SINO -> EMPTY .)


state 213

    (70) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 52

    BLOQUE                         shift and go to state 215

state 214

    (78) ESTATUTO_SINO -> SINO BLOQUE .

    LEE             reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    ESCRIBE         reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    ID              reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    SI              reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    MIENTRAS        reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    DESDE           reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)
    RBRACKET        reduce using rule 78 (ESTATUTO_SINO -> SINO BLOQUE .)


state 215

    (70) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .

    LEE             reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ESCRIBE         reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ID              reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    SI              reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    MIENTRAS        reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    DESDE           reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    RBRACKET        reduce using rule 70 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)

