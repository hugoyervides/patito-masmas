Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DOT
    INV
    NULL
    TRAN

Grammar

Rule 0     S' -> PROG
Rule 1     EMPTY -> <empty>
Rule 2     MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE
Rule 3     PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN
Rule 4     VARS -> VAR TIPO
Rule 5     VARS -> EMPTY
Rule 6     TIPO -> INT push_type VAR_INT SEMI_COLON TIPO
Rule 7     TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO
Rule 8     TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO
Rule 9     TIPO -> EMPTY
Rule 10    VAR_INT -> LIST_ID push_var COMMA VAR_INT
Rule 11    VAR_INT -> ID push_var COMMA VAR_INT
Rule 12    VAR_INT -> LIST_ID push_var
Rule 13    VAR_INT -> ID push_var
Rule 14    VAR_TIPO -> ID push_var COMMA
Rule 15    VAR_TIPO -> ID push_var
Rule 16    LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ
Rule 17    LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
Rule 18    EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
Rule 19    EXPRESION_AUX -> COMPAR r_new_operator EXPRESION
Rule 20    EXPRESION_AUX -> AND r_new_operator EXPRESION
Rule 21    EXPRESION_AUX -> OR r_new_operator EXPRESION
Rule 22    EXPRESION_AUX -> EMPTY
Rule 23    TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
Rule 24    TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION
Rule 25    TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION
Rule 26    TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION
Rule 27    TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION
Rule 28    TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION
Rule 29    TLEVEL_EXPRESION_AUX -> EMPTY
Rule 30    SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
Rule 31    SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION
Rule 32    SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION
Rule 33    SLEVEL_EXPRESION_AUX -> EMPTY
Rule 34    FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
Rule 35    FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION
Rule 36    FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION
Rule 37    FLEVEL_EXPRESION_AUX -> EMPTY
Rule 38    VALUE_EXPRESION -> ID r_new_id
Rule 39    VALUE_EXPRESION -> ID DET
Rule 40    VALUE_EXPRESION -> LIST_ID
Rule 41    VALUE_EXPRESION -> CONSTANTE
Rule 42    VALUE_EXPRESION -> LLAMADA
Rule 43    VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
Rule 44    CONSTANTE -> CTE_I r_new_constant
Rule 45    CONSTANTE -> CTE_F r_new_constant
Rule 46    CONSTANTE -> CTE_C r_new_constant
Rule 47    CONSTANTE -> CTE_S r_new_constant
Rule 48    BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET
Rule 49    OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE
Rule 50    OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE
Rule 51    OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE
Rule 52    OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE
Rule 53    OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE
Rule 54    OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE
Rule 55    OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE
Rule 56    OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE
Rule 57    OPCION_BLOQUE -> EMPTY
Rule 58    FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
Rule 59    FUNCTION -> EMPTY
Rule 60    TIPO_FUNC -> INT
Rule 61    TIPO_FUNC -> FLOAT
Rule 62    TIPO_FUNC -> CHAR
Rule 63    TIPO_FUNC -> VOID
Rule 64    PARAMETROS -> AUX_PARAM
Rule 65    PARAMETROS -> EMPTY
Rule 66    AUX_PARAM -> INT ID NEXT_PARAM
Rule 67    AUX_PARAM -> FLOAT ID NEXT_PARAM
Rule 68    AUX_PARAM -> CHAR ID NEXT_PARAM
Rule 69    NEXT_PARAM -> COMMA AUX_PARAM
Rule 70    NEXT_PARAM -> EMPTY
Rule 71    DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
Rule 72    MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
Rule 73    LECTURA -> LEE LPAREN ID RPAREN
Rule 74    ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
Rule 75    LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN
Rule 76    TIPO_PARAMETROS -> EXPRESION
Rule 77    TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS
Rule 78    IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
Rule 79    IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
Rule 80    ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal
Rule 81    ASIGNACION_AUX -> EQ r_new_operator ASIGNACION
Rule 82    ASIGNACION_AUX -> EMPTY
Rule 83    r_new_id -> <empty>
Rule 84    r_new_constant -> <empty>
Rule 85    r_new_lparen -> <empty>
Rule 86    r_new_rparen -> <empty>
Rule 87    r_new_operator -> <empty>
Rule 88    r_new_quadruple_flevel -> <empty>
Rule 89    r_new_quadruple_slevel -> <empty>
Rule 90    r_new_quadruple_tlevel -> <empty>
Rule 91    r_new_quadruple -> <empty>
Rule 92    r_new_equal -> <empty>
Rule 93    r_new_goto -> <empty>
Rule 94    r_complete_goto -> <empty>
Rule 95    r_new_gotof -> <empty>
Rule 96    r_complete_gotof -> <empty>
Rule 97    r_new_migajita -> <empty>
Rule 98    push_type -> <empty>
Rule 99    push_func -> <empty>
Rule 100   push_var -> <empty>
Rule 101   push_main -> <empty>

Terminals, with rules where they appear

AND                  : 20
CHAR                 : 8 62 68
COLON                : 
COMMA                : 10 11 14 69 77
COMMENT              : 
COMPAR               : 19
CTE_C                : 46
CTE_F                : 45
CTE_I                : 44 71 71
CTE_S                : 47
DESDE                : 71
DET                  : 39
DIV                  : 36
DOT                  : 
ENTONCES             : 78 79
EQ                   : 71 81
ESCRIBE              : 74
FLOAT                : 7 61 67
FUNCION              : 58
GREATER              : 27
GREATER_EQ           : 25
HACER                : 71
HASTA                : 71
HAZ                  : 72
ID                   : 3 11 13 14 15 16 17 38 39 58 66 67 68 71 73 75
INT                  : 6 60 66
INV                  : 
LBRACKET             : 48
LEE                  : 73
LESS                 : 28
LESS_EQ              : 26
LPAREN               : 2 43 58 72 73 74 75 78 79
LSQ                  : 16 17 17
MIENTRAS             : 72
MINUS                : 32
MULT                 : 35
NOT_EQ               : 24
NULL                 : 
OR                   : 21
PLUS                 : 31
PRINCIPAL            : 2
PROGRAMA             : 3
RBRACKET             : 48
RPAREN               : 2 43 58 72 73 74 75 78 79
RSQ                  : 16 17 17
SEMI_COLON           : 3 6 7 8 49 50 51 56
SI                   : 78 79
SINO                 : 79
TRAN                 : 
VAR                  : 4
VOID                 : 63
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 56 81
ASIGNACION_AUX       : 80
AUX_PARAM            : 64 69
BLOQUE               : 2 58 71 72 78 79 79
CONSTANTE            : 41
DESDE_CICLO          : 55
EMPTY                : 5 9 22 29 33 37 57 59 65 70 82
ESCRITURA            : 50
EXPRESION            : 19 20 21 43 72 76 77 78 79 80
EXPRESION_AUX        : 18
FLEVEL_EXPRESION     : 30 35 36
FLEVEL_EXPRESION_AUX : 34
FUNCTION             : 3 58
IF_ELSE_STMT         : 53
IF_STMT              : 52
LECTURA              : 49
LIST_ID              : 10 12 40
LLAMADA              : 42 51
MAIN                 : 3
MIENTRAS_CICLO       : 54
NEXT_PARAM           : 66 67 68
OPCION_BLOQUE        : 48 49 50 51 52 53 54 55 56
PARAMETROS           : 58
PROG                 : 0
SLEVEL_EXPRESION     : 16 17 17 23 31 32
SLEVEL_EXPRESION_AUX : 30
TIPO                 : 4 6 7 8
TIPO_FUNC            : 58
TIPO_PARAMETROS      : 74 75 77
TLEVEL_EXPRESION     : 18 24 25 26 27 28
TLEVEL_EXPRESION_AUX : 23
VALUE_EXPRESION      : 34
VARS                 : 3 58
VAR_INT              : 6 10 11
VAR_TIPO             : 7 8
push_func            : 58
push_main            : 2
push_type            : 6 7 8
push_var             : 10 11 12 13 14 15 16 17
r_complete_goto      : 3 79
r_complete_gotof     : 72 78 79
r_new_constant       : 44 45 46 47
r_new_equal          : 80
r_new_goto           : 3 72 79
r_new_gotof          : 72 78 79
r_new_id             : 38
r_new_lparen         : 43
r_new_migajita       : 72
r_new_operator       : 19 20 21 24 25 26 27 28 31 32 35 36 81
r_new_quadruple      : 18
r_new_quadruple_flevel : 34
r_new_quadruple_slevel : 30
r_new_quadruple_tlevel : 23
r_new_rparen         : 43

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (3) PROG -> . r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN
    (93) r_new_goto -> .

    PROGRAMA        reduce using rule 93 (r_new_goto -> .)

    PROG                           shift and go to state 1
    r_new_goto                     shift and go to state 2

state 1

    (0) S' -> PROG .



state 2

    (3) PROG -> r_new_goto . PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN

    PROGRAMA        shift and go to state 3


state 3

    (3) PROG -> r_new_goto PROGRAMA . ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN

    ID              shift and go to state 4


state 4

    (3) PROG -> r_new_goto PROGRAMA ID . SEMI_COLON VARS FUNCTION r_complete_goto MAIN

    SEMI_COLON      shift and go to state 5


state 5

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON . VARS FUNCTION r_complete_goto MAIN
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 6
    EMPTY                          shift and go to state 8

state 6

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS . FUNCTION r_complete_goto MAIN
    (58) FUNCTION -> . FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (59) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 10
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 9
    EMPTY                          shift and go to state 11

state 7

    (4) VARS -> VAR . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 12
    EMPTY                          shift and go to state 16

state 8

    (5) VARS -> EMPTY .

    FUNCION         reduce using rule 5 (VARS -> EMPTY .)
    PRINCIPAL       reduce using rule 5 (VARS -> EMPTY .)
    LBRACKET        reduce using rule 5 (VARS -> EMPTY .)


state 9

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION . r_complete_goto MAIN
    (94) r_complete_goto -> .

    PRINCIPAL       reduce using rule 94 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 17

state 10

    (58) FUNCTION -> FUNCION . TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (60) TIPO_FUNC -> . INT
    (61) TIPO_FUNC -> . FLOAT
    (62) TIPO_FUNC -> . CHAR
    (63) TIPO_FUNC -> . VOID

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    VOID            shift and go to state 22

    TIPO_FUNC                      shift and go to state 18

state 11

    (59) FUNCTION -> EMPTY .

    PRINCIPAL       reduce using rule 59 (FUNCTION -> EMPTY .)


state 12

    (4) VARS -> VAR TIPO .

    FUNCION         reduce using rule 4 (VARS -> VAR TIPO .)
    PRINCIPAL       reduce using rule 4 (VARS -> VAR TIPO .)
    LBRACKET        reduce using rule 4 (VARS -> VAR TIPO .)


state 13

    (6) TIPO -> INT . push_type VAR_INT SEMI_COLON TIPO
    (98) push_type -> .

    ID              reduce using rule 98 (push_type -> .)

    push_type                      shift and go to state 23

state 14

    (7) TIPO -> FLOAT . push_type VAR_TIPO SEMI_COLON TIPO
    (98) push_type -> .

    ID              reduce using rule 98 (push_type -> .)

    push_type                      shift and go to state 24

state 15

    (8) TIPO -> CHAR . push_type VAR_TIPO SEMI_COLON TIPO
    (98) push_type -> .

    ID              reduce using rule 98 (push_type -> .)

    push_type                      shift and go to state 25

state 16

    (9) TIPO -> EMPTY .

    FUNCION         reduce using rule 9 (TIPO -> EMPTY .)
    PRINCIPAL       reduce using rule 9 (TIPO -> EMPTY .)
    LBRACKET        reduce using rule 9 (TIPO -> EMPTY .)


state 17

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto . MAIN
    (2) MAIN -> . PRINCIPAL push_main LPAREN RPAREN BLOQUE

    PRINCIPAL       shift and go to state 27

    MAIN                           shift and go to state 26

state 18

    (58) FUNCTION -> FUNCION TIPO_FUNC . ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    ID              shift and go to state 28


state 19

    (60) TIPO_FUNC -> INT .

    ID              reduce using rule 60 (TIPO_FUNC -> INT .)


state 20

    (61) TIPO_FUNC -> FLOAT .

    ID              reduce using rule 61 (TIPO_FUNC -> FLOAT .)


state 21

    (62) TIPO_FUNC -> CHAR .

    ID              reduce using rule 62 (TIPO_FUNC -> CHAR .)


state 22

    (63) TIPO_FUNC -> VOID .

    ID              reduce using rule 63 (TIPO_FUNC -> VOID .)


state 23

    (6) TIPO -> INT push_type . VAR_INT SEMI_COLON TIPO
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 31

    VAR_INT                        shift and go to state 29
    LIST_ID                        shift and go to state 30

state 24

    (7) TIPO -> FLOAT push_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID push_var COMMA
    (15) VAR_TIPO -> . ID push_var

    ID              shift and go to state 33

    VAR_TIPO                       shift and go to state 32

state 25

    (8) TIPO -> CHAR push_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID push_var COMMA
    (15) VAR_TIPO -> . ID push_var

    ID              shift and go to state 33

    VAR_TIPO                       shift and go to state 34

state 26

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN .

    $end            reduce using rule 3 (PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS FUNCTION r_complete_goto MAIN .)


state 27

    (2) MAIN -> PRINCIPAL . push_main LPAREN RPAREN BLOQUE
    (101) push_main -> .

    LPAREN          reduce using rule 101 (push_main -> .)

    push_main                      shift and go to state 35

state 28

    (58) FUNCTION -> FUNCION TIPO_FUNC ID . push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (99) push_func -> .

    LPAREN          reduce using rule 99 (push_func -> .)

    push_func                      shift and go to state 36

state 29

    (6) TIPO -> INT push_type VAR_INT . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 37


state 30

    (10) VAR_INT -> LIST_ID . push_var COMMA VAR_INT
    (12) VAR_INT -> LIST_ID . push_var
    (100) push_var -> .

    COMMA           reduce using rule 100 (push_var -> .)
    SEMI_COLON      reduce using rule 100 (push_var -> .)

    push_var                       shift and go to state 38

state 31

    (11) VAR_INT -> ID . push_var COMMA VAR_INT
    (13) VAR_INT -> ID . push_var
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (100) push_var -> .

    COMMA           reduce using rule 100 (push_var -> .)
    LSQ             reduce using rule 100 (push_var -> .)
    SEMI_COLON      reduce using rule 100 (push_var -> .)

    push_var                       shift and go to state 39

state 32

    (7) TIPO -> FLOAT push_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 40


state 33

    (14) VAR_TIPO -> ID . push_var COMMA
    (15) VAR_TIPO -> ID . push_var
    (100) push_var -> .

    COMMA           reduce using rule 100 (push_var -> .)
    SEMI_COLON      reduce using rule 100 (push_var -> .)

    push_var                       shift and go to state 41

state 34

    (8) TIPO -> CHAR push_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 42


state 35

    (2) MAIN -> PRINCIPAL push_main . LPAREN RPAREN BLOQUE

    LPAREN          shift and go to state 43


state 36

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func . LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION

    LPAREN          shift and go to state 44


state 37

    (6) TIPO -> INT push_type VAR_INT SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 45
    EMPTY                          shift and go to state 16

state 38

    (10) VAR_INT -> LIST_ID push_var . COMMA VAR_INT
    (12) VAR_INT -> LIST_ID push_var .

    COMMA           shift and go to state 46
    SEMI_COLON      reduce using rule 12 (VAR_INT -> LIST_ID push_var .)


state 39

    (11) VAR_INT -> ID push_var . COMMA VAR_INT
    (13) VAR_INT -> ID push_var .
    (16) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    COMMA           shift and go to state 47
    SEMI_COLON      reduce using rule 13 (VAR_INT -> ID push_var .)
    LSQ             shift and go to state 48


state 40

    (7) TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 49
    EMPTY                          shift and go to state 16

state 41

    (14) VAR_TIPO -> ID push_var . COMMA
    (15) VAR_TIPO -> ID push_var .

    COMMA           shift and go to state 50
    SEMI_COLON      reduce using rule 15 (VAR_TIPO -> ID push_var .)


state 42

    (8) TIPO -> CHAR push_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT push_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT push_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR push_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    FUNCION         reduce using rule 1 (EMPTY -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 51
    EMPTY                          shift and go to state 16

state 43

    (2) MAIN -> PRINCIPAL push_main LPAREN . RPAREN BLOQUE

    RPAREN          shift and go to state 52


state 44

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN . PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (64) PARAMETROS -> . AUX_PARAM
    (65) PARAMETROS -> . EMPTY
    (66) AUX_PARAM -> . INT ID NEXT_PARAM
    (67) AUX_PARAM -> . FLOAT ID NEXT_PARAM
    (68) AUX_PARAM -> . CHAR ID NEXT_PARAM
    (1) EMPTY -> .

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    CHAR            shift and go to state 58
    RPAREN          reduce using rule 1 (EMPTY -> .)

    PARAMETROS                     shift and go to state 53
    AUX_PARAM                      shift and go to state 54
    EMPTY                          shift and go to state 55

state 45

    (6) TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .

    FUNCION         reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 6 (TIPO -> INT push_type VAR_INT SEMI_COLON TIPO .)


state 46

    (10) VAR_INT -> LIST_ID push_var COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 31

    LIST_ID                        shift and go to state 30
    VAR_INT                        shift and go to state 59

state 47

    (11) VAR_INT -> ID push_var COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID push_var COMMA VAR_INT
    (11) VAR_INT -> . ID push_var COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID push_var
    (13) VAR_INT -> . ID push_var
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 31

    VAR_INT                        shift and go to state 60
    LIST_ID                        shift and go to state 30

state 48

    (16) LIST_ID -> ID push_var LSQ . SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var LSQ . SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 62
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 49

    (7) TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 7 (TIPO -> FLOAT push_type VAR_TIPO SEMI_COLON TIPO .)


state 50

    (14) VAR_TIPO -> ID push_var COMMA .

    SEMI_COLON      reduce using rule 14 (VAR_TIPO -> ID push_var COMMA .)


state 51

    (8) TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .

    FUNCION         reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)
    PRINCIPAL       reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 8 (TIPO -> CHAR push_type VAR_TIPO SEMI_COLON TIPO .)


state 52

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 73

state 53

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS . RPAREN VARS BLOQUE FUNCTION

    RPAREN          shift and go to state 75


state 54

    (64) PARAMETROS -> AUX_PARAM .

    RPAREN          reduce using rule 64 (PARAMETROS -> AUX_PARAM .)


state 55

    (65) PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 65 (PARAMETROS -> EMPTY .)


state 56

    (66) AUX_PARAM -> INT . ID NEXT_PARAM

    ID              shift and go to state 76


state 57

    (67) AUX_PARAM -> FLOAT . ID NEXT_PARAM

    ID              shift and go to state 77


state 58

    (68) AUX_PARAM -> CHAR . ID NEXT_PARAM

    ID              shift and go to state 78


state 59

    (10) VAR_INT -> LIST_ID push_var COMMA VAR_INT .

    SEMI_COLON      reduce using rule 10 (VAR_INT -> LIST_ID push_var COMMA VAR_INT .)


state 60

    (11) VAR_INT -> ID push_var COMMA VAR_INT .

    SEMI_COLON      reduce using rule 11 (VAR_INT -> ID push_var COMMA VAR_INT .)


state 61

    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (75) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN
    (83) r_new_id -> .
    (100) push_var -> .

    DET             shift and go to state 80
    LPAREN          shift and go to state 82
    MULT            reduce using rule 83 (r_new_id -> .)
    DIV             reduce using rule 83 (r_new_id -> .)
    PLUS            reduce using rule 83 (r_new_id -> .)
    MINUS           reduce using rule 83 (r_new_id -> .)
    RSQ             reduce using rule 83 (r_new_id -> .)
    NOT_EQ          reduce using rule 83 (r_new_id -> .)
    GREATER_EQ      reduce using rule 83 (r_new_id -> .)
    LESS_EQ         reduce using rule 83 (r_new_id -> .)
    GREATER         reduce using rule 83 (r_new_id -> .)
    LESS            reduce using rule 83 (r_new_id -> .)
    COMPAR          reduce using rule 83 (r_new_id -> .)
    AND             reduce using rule 83 (r_new_id -> .)
    OR              reduce using rule 83 (r_new_id -> .)
    COMMA           reduce using rule 83 (r_new_id -> .)
    RPAREN          reduce using rule 83 (r_new_id -> .)
    EQ              reduce using rule 83 (r_new_id -> .)
    SEMI_COLON      reduce using rule 83 (r_new_id -> .)
    LSQ             reduce using rule 100 (push_var -> .)

    r_new_id                       shift and go to state 79
    push_var                       shift and go to state 81

state 62

    (16) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION . RSQ
    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION . RSQ LSQ SLEVEL_EXPRESION RSQ

    RSQ             shift and go to state 83


state 63

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION . r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (89) r_new_quadruple_slevel -> .

    PLUS            reduce using rule 89 (r_new_quadruple_slevel -> .)
    MINUS           reduce using rule 89 (r_new_quadruple_slevel -> .)
    RSQ             reduce using rule 89 (r_new_quadruple_slevel -> .)
    NOT_EQ          reduce using rule 89 (r_new_quadruple_slevel -> .)
    GREATER_EQ      reduce using rule 89 (r_new_quadruple_slevel -> .)
    LESS_EQ         reduce using rule 89 (r_new_quadruple_slevel -> .)
    GREATER         reduce using rule 89 (r_new_quadruple_slevel -> .)
    LESS            reduce using rule 89 (r_new_quadruple_slevel -> .)
    COMPAR          reduce using rule 89 (r_new_quadruple_slevel -> .)
    AND             reduce using rule 89 (r_new_quadruple_slevel -> .)
    OR              reduce using rule 89 (r_new_quadruple_slevel -> .)
    EQ              reduce using rule 89 (r_new_quadruple_slevel -> .)
    SEMI_COLON      reduce using rule 89 (r_new_quadruple_slevel -> .)
    COMMA           reduce using rule 89 (r_new_quadruple_slevel -> .)
    RPAREN          reduce using rule 89 (r_new_quadruple_slevel -> .)

    r_new_quadruple_slevel         shift and go to state 84

state 64

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION . r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (88) r_new_quadruple_flevel -> .

    MULT            reduce using rule 88 (r_new_quadruple_flevel -> .)
    DIV             reduce using rule 88 (r_new_quadruple_flevel -> .)
    PLUS            reduce using rule 88 (r_new_quadruple_flevel -> .)
    MINUS           reduce using rule 88 (r_new_quadruple_flevel -> .)
    RSQ             reduce using rule 88 (r_new_quadruple_flevel -> .)
    NOT_EQ          reduce using rule 88 (r_new_quadruple_flevel -> .)
    GREATER_EQ      reduce using rule 88 (r_new_quadruple_flevel -> .)
    LESS_EQ         reduce using rule 88 (r_new_quadruple_flevel -> .)
    GREATER         reduce using rule 88 (r_new_quadruple_flevel -> .)
    LESS            reduce using rule 88 (r_new_quadruple_flevel -> .)
    COMPAR          reduce using rule 88 (r_new_quadruple_flevel -> .)
    AND             reduce using rule 88 (r_new_quadruple_flevel -> .)
    OR              reduce using rule 88 (r_new_quadruple_flevel -> .)
    EQ              reduce using rule 88 (r_new_quadruple_flevel -> .)
    SEMI_COLON      reduce using rule 88 (r_new_quadruple_flevel -> .)
    COMMA           reduce using rule 88 (r_new_quadruple_flevel -> .)
    RPAREN          reduce using rule 88 (r_new_quadruple_flevel -> .)

    r_new_quadruple_flevel         shift and go to state 85

state 65

    (40) VALUE_EXPRESION -> LIST_ID .

    MULT            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    DIV             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    PLUS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    MINUS           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RSQ             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    NOT_EQ          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER_EQ      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS_EQ         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMPAR          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    AND             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    OR              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    EQ              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    SEMI_COLON      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMMA           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RPAREN          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)


state 66

    (41) VALUE_EXPRESION -> CONSTANTE .

    MULT            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    DIV             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    PLUS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    MINUS           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RSQ             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    NOT_EQ          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER_EQ      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS_EQ         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMPAR          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    AND             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    OR              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    EQ              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    SEMI_COLON      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMMA           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RPAREN          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)


state 67

    (42) VALUE_EXPRESION -> LLAMADA .

    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RSQ             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMMA           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RPAREN          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    SEMI_COLON      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)


state 68

    (43) VALUE_EXPRESION -> r_new_lparen . LPAREN EXPRESION RPAREN r_new_rparen

    LPAREN          shift and go to state 86


state 69

    (44) CONSTANTE -> CTE_I . r_new_constant
    (84) r_new_constant -> .

    MULT            reduce using rule 84 (r_new_constant -> .)
    DIV             reduce using rule 84 (r_new_constant -> .)
    PLUS            reduce using rule 84 (r_new_constant -> .)
    MINUS           reduce using rule 84 (r_new_constant -> .)
    RSQ             reduce using rule 84 (r_new_constant -> .)
    NOT_EQ          reduce using rule 84 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 84 (r_new_constant -> .)
    LESS_EQ         reduce using rule 84 (r_new_constant -> .)
    GREATER         reduce using rule 84 (r_new_constant -> .)
    LESS            reduce using rule 84 (r_new_constant -> .)
    COMPAR          reduce using rule 84 (r_new_constant -> .)
    AND             reduce using rule 84 (r_new_constant -> .)
    OR              reduce using rule 84 (r_new_constant -> .)
    EQ              reduce using rule 84 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 84 (r_new_constant -> .)
    COMMA           reduce using rule 84 (r_new_constant -> .)
    RPAREN          reduce using rule 84 (r_new_constant -> .)

    r_new_constant                 shift and go to state 87

state 70

    (45) CONSTANTE -> CTE_F . r_new_constant
    (84) r_new_constant -> .

    MULT            reduce using rule 84 (r_new_constant -> .)
    DIV             reduce using rule 84 (r_new_constant -> .)
    PLUS            reduce using rule 84 (r_new_constant -> .)
    MINUS           reduce using rule 84 (r_new_constant -> .)
    RSQ             reduce using rule 84 (r_new_constant -> .)
    NOT_EQ          reduce using rule 84 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 84 (r_new_constant -> .)
    LESS_EQ         reduce using rule 84 (r_new_constant -> .)
    GREATER         reduce using rule 84 (r_new_constant -> .)
    LESS            reduce using rule 84 (r_new_constant -> .)
    COMPAR          reduce using rule 84 (r_new_constant -> .)
    AND             reduce using rule 84 (r_new_constant -> .)
    OR              reduce using rule 84 (r_new_constant -> .)
    EQ              reduce using rule 84 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 84 (r_new_constant -> .)
    COMMA           reduce using rule 84 (r_new_constant -> .)
    RPAREN          reduce using rule 84 (r_new_constant -> .)

    r_new_constant                 shift and go to state 88

state 71

    (46) CONSTANTE -> CTE_C . r_new_constant
    (84) r_new_constant -> .

    MULT            reduce using rule 84 (r_new_constant -> .)
    DIV             reduce using rule 84 (r_new_constant -> .)
    PLUS            reduce using rule 84 (r_new_constant -> .)
    MINUS           reduce using rule 84 (r_new_constant -> .)
    RSQ             reduce using rule 84 (r_new_constant -> .)
    NOT_EQ          reduce using rule 84 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 84 (r_new_constant -> .)
    LESS_EQ         reduce using rule 84 (r_new_constant -> .)
    GREATER         reduce using rule 84 (r_new_constant -> .)
    LESS            reduce using rule 84 (r_new_constant -> .)
    COMPAR          reduce using rule 84 (r_new_constant -> .)
    AND             reduce using rule 84 (r_new_constant -> .)
    OR              reduce using rule 84 (r_new_constant -> .)
    EQ              reduce using rule 84 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 84 (r_new_constant -> .)
    COMMA           reduce using rule 84 (r_new_constant -> .)
    RPAREN          reduce using rule 84 (r_new_constant -> .)

    r_new_constant                 shift and go to state 89

state 72

    (47) CONSTANTE -> CTE_S . r_new_constant
    (84) r_new_constant -> .

    MULT            reduce using rule 84 (r_new_constant -> .)
    DIV             reduce using rule 84 (r_new_constant -> .)
    PLUS            reduce using rule 84 (r_new_constant -> .)
    MINUS           reduce using rule 84 (r_new_constant -> .)
    RSQ             reduce using rule 84 (r_new_constant -> .)
    NOT_EQ          reduce using rule 84 (r_new_constant -> .)
    GREATER_EQ      reduce using rule 84 (r_new_constant -> .)
    LESS_EQ         reduce using rule 84 (r_new_constant -> .)
    GREATER         reduce using rule 84 (r_new_constant -> .)
    LESS            reduce using rule 84 (r_new_constant -> .)
    COMPAR          reduce using rule 84 (r_new_constant -> .)
    AND             reduce using rule 84 (r_new_constant -> .)
    OR              reduce using rule 84 (r_new_constant -> .)
    EQ              reduce using rule 84 (r_new_constant -> .)
    SEMI_COLON      reduce using rule 84 (r_new_constant -> .)
    COMMA           reduce using rule 84 (r_new_constant -> .)
    RPAREN          reduce using rule 84 (r_new_constant -> .)

    r_new_constant                 shift and go to state 90

state 73

    (2) MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .

    $end            reduce using rule 2 (MAIN -> PRINCIPAL push_main LPAREN RPAREN BLOQUE .)


state 74

    (48) BLOQUE -> LBRACKET . OPCION_BLOQUE RBRACKET
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    OPCION_BLOQUE                  shift and go to state 91
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 75

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN . VARS BLOQUE FUNCTION
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 110
    EMPTY                          shift and go to state 8

state 76

    (66) AUX_PARAM -> INT ID . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 111
    EMPTY                          shift and go to state 113

state 77

    (67) AUX_PARAM -> FLOAT ID . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 114
    EMPTY                          shift and go to state 113

state 78

    (68) AUX_PARAM -> CHAR ID . NEXT_PARAM
    (69) NEXT_PARAM -> . COMMA AUX_PARAM
    (70) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 115
    EMPTY                          shift and go to state 113

state 79

    (38) VALUE_EXPRESION -> ID r_new_id .

    MULT            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    DIV             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    PLUS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    MINUS           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RSQ             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    NOT_EQ          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER_EQ      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS_EQ         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMPAR          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    AND             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    OR              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    EQ              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    SEMI_COLON      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMMA           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RPAREN          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)


state 80

    (39) VALUE_EXPRESION -> ID DET .

    MULT            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    DIV             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    PLUS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    MINUS           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RSQ             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    NOT_EQ          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER_EQ      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS_EQ         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMPAR          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    AND             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    OR              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    EQ              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    SEMI_COLON      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMMA           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RPAREN          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)


state 81

    (16) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID push_var . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LSQ             shift and go to state 48


state 82

    (75) LLAMADA -> ID LPAREN . TIPO_PARAMETROS RPAREN
    (76) TIPO_PARAMETROS -> . EXPRESION
    (77) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 116
    EXPRESION                      shift and go to state 117
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 83

    (16) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .
    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ . LSQ SLEVEL_EXPRESION RSQ

    COMMA           reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 16 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ .)
    LSQ             shift and go to state 118


state 84

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel . SLEVEL_EXPRESION_AUX
    (31) SLEVEL_EXPRESION_AUX -> . PLUS r_new_operator SLEVEL_EXPRESION
    (32) SLEVEL_EXPRESION_AUX -> . MINUS r_new_operator SLEVEL_EXPRESION
    (33) SLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    PLUS            shift and go to state 120
    MINUS           shift and go to state 121
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)

    SLEVEL_EXPRESION_AUX           shift and go to state 119
    EMPTY                          shift and go to state 122

state 85

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel . FLEVEL_EXPRESION_AUX
    (35) FLEVEL_EXPRESION_AUX -> . MULT r_new_operator FLEVEL_EXPRESION
    (36) FLEVEL_EXPRESION_AUX -> . DIV r_new_operator FLEVEL_EXPRESION
    (37) FLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    MULT            shift and go to state 124
    DIV             shift and go to state 125
    PLUS            reduce using rule 1 (EMPTY -> .)
    MINUS           reduce using rule 1 (EMPTY -> .)
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)

    FLEVEL_EXPRESION_AUX           shift and go to state 123
    EMPTY                          shift and go to state 126

state 86

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN . EXPRESION RPAREN r_new_rparen
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 68
    EXPRESION                      shift and go to state 127
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67

state 87

    (44) CONSTANTE -> CTE_I r_new_constant .

    MULT            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    DIV             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    PLUS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    MINUS           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RSQ             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    NOT_EQ          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER_EQ      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS_EQ         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    GREATER         reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    LESS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMPAR          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    AND             reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    OR              reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    EQ              reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    SEMI_COLON      reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    COMMA           reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)
    RPAREN          reduce using rule 44 (CONSTANTE -> CTE_I r_new_constant .)


state 88

    (45) CONSTANTE -> CTE_F r_new_constant .

    MULT            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    DIV             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    PLUS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    MINUS           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RSQ             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    NOT_EQ          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER_EQ      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS_EQ         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    GREATER         reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    LESS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMPAR          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    AND             reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    OR              reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    EQ              reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    SEMI_COLON      reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    COMMA           reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)
    RPAREN          reduce using rule 45 (CONSTANTE -> CTE_F r_new_constant .)


state 89

    (46) CONSTANTE -> CTE_C r_new_constant .

    MULT            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    DIV             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    PLUS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    MINUS           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RSQ             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    NOT_EQ          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER_EQ      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS_EQ         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    GREATER         reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    LESS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMPAR          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    AND             reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    OR              reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    EQ              reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    SEMI_COLON      reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    COMMA           reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)
    RPAREN          reduce using rule 46 (CONSTANTE -> CTE_C r_new_constant .)


state 90

    (47) CONSTANTE -> CTE_S r_new_constant .

    MULT            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    DIV             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    PLUS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    MINUS           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RSQ             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    NOT_EQ          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER_EQ      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS_EQ         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    GREATER         reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    LESS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMPAR          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    AND             reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    OR              reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    EQ              reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    SEMI_COLON      reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    COMMA           reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)
    RPAREN          reduce using rule 47 (CONSTANTE -> CTE_S r_new_constant .)


state 91

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE . RBRACKET

    RBRACKET        shift and go to state 128


state 92

    (49) OPCION_BLOQUE -> LECTURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 129


state 93

    (50) OPCION_BLOQUE -> ESCRITURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 130


state 94

    (51) OPCION_BLOQUE -> LLAMADA . SEMI_COLON OPCION_BLOQUE
    (42) VALUE_EXPRESION -> LLAMADA .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 131
    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)

  ! SEMI_COLON      [ reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .) ]


state 95

    (52) OPCION_BLOQUE -> IF_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    IF_STMT                        shift and go to state 95
    OPCION_BLOQUE                  shift and go to state 132
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 96

    (53) OPCION_BLOQUE -> IF_ELSE_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    IF_ELSE_STMT                   shift and go to state 96
    OPCION_BLOQUE                  shift and go to state 133
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 97

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    MIENTRAS_CICLO                 shift and go to state 97
    OPCION_BLOQUE                  shift and go to state 134
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 98

    (55) OPCION_BLOQUE -> DESDE_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    DESDE_CICLO                    shift and go to state 98
    OPCION_BLOQUE                  shift and go to state 135
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 99

    (56) OPCION_BLOQUE -> ASIGNACION . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 136


state 100

    (57) OPCION_BLOQUE -> EMPTY .

    RBRACKET        reduce using rule 57 (OPCION_BLOQUE -> EMPTY .)


state 101

    (73) LECTURA -> LEE . LPAREN ID RPAREN

    LPAREN          shift and go to state 137


state 102

    (75) LLAMADA -> ID . LPAREN TIPO_PARAMETROS RPAREN
    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (83) r_new_id -> .
    (100) push_var -> .

    LPAREN          shift and go to state 82
    DET             shift and go to state 80
    MULT            reduce using rule 83 (r_new_id -> .)
    DIV             reduce using rule 83 (r_new_id -> .)
    PLUS            reduce using rule 83 (r_new_id -> .)
    MINUS           reduce using rule 83 (r_new_id -> .)
    NOT_EQ          reduce using rule 83 (r_new_id -> .)
    GREATER_EQ      reduce using rule 83 (r_new_id -> .)
    LESS_EQ         reduce using rule 83 (r_new_id -> .)
    GREATER         reduce using rule 83 (r_new_id -> .)
    LESS            reduce using rule 83 (r_new_id -> .)
    COMPAR          reduce using rule 83 (r_new_id -> .)
    AND             reduce using rule 83 (r_new_id -> .)
    OR              reduce using rule 83 (r_new_id -> .)
    EQ              reduce using rule 83 (r_new_id -> .)
    SEMI_COLON      reduce using rule 83 (r_new_id -> .)
    LSQ             reduce using rule 100 (push_var -> .)

    r_new_id                       shift and go to state 79
    push_var                       shift and go to state 81

state 103

    (74) ESCRITURA -> ESCRIBE . LPAREN TIPO_PARAMETROS RPAREN

    LPAREN          shift and go to state 138


state 104

    (78) IF_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    LPAREN          shift and go to state 139


state 105

    (80) ASIGNACION -> EXPRESION . ASIGNACION_AUX r_new_equal
    (81) ASIGNACION_AUX -> . EQ r_new_operator ASIGNACION
    (82) ASIGNACION_AUX -> . EMPTY
    (1) EMPTY -> .

    EQ              shift and go to state 141
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    ASIGNACION_AUX                 shift and go to state 140
    EMPTY                          shift and go to state 142

state 106

    (72) MIENTRAS_CICLO -> MIENTRAS . r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (97) r_new_migajita -> .

    LPAREN          reduce using rule 97 (r_new_migajita -> .)

    r_new_migajita                 shift and go to state 143

state 107

    (71) DESDE_CICLO -> DESDE . ID EQ CTE_I HASTA CTE_I HACER BLOQUE

    ID              shift and go to state 144


state 108

    (18) EXPRESION -> TLEVEL_EXPRESION . r_new_quadruple EXPRESION_AUX
    (91) r_new_quadruple -> .

    COMPAR          reduce using rule 91 (r_new_quadruple -> .)
    AND             reduce using rule 91 (r_new_quadruple -> .)
    OR              reduce using rule 91 (r_new_quadruple -> .)
    EQ              reduce using rule 91 (r_new_quadruple -> .)
    SEMI_COLON      reduce using rule 91 (r_new_quadruple -> .)
    COMMA           reduce using rule 91 (r_new_quadruple -> .)
    RPAREN          reduce using rule 91 (r_new_quadruple -> .)

    r_new_quadruple                shift and go to state 145

state 109

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION . r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (90) r_new_quadruple_tlevel -> .

    NOT_EQ          reduce using rule 90 (r_new_quadruple_tlevel -> .)
    GREATER_EQ      reduce using rule 90 (r_new_quadruple_tlevel -> .)
    LESS_EQ         reduce using rule 90 (r_new_quadruple_tlevel -> .)
    GREATER         reduce using rule 90 (r_new_quadruple_tlevel -> .)
    LESS            reduce using rule 90 (r_new_quadruple_tlevel -> .)
    COMPAR          reduce using rule 90 (r_new_quadruple_tlevel -> .)
    AND             reduce using rule 90 (r_new_quadruple_tlevel -> .)
    OR              reduce using rule 90 (r_new_quadruple_tlevel -> .)
    EQ              reduce using rule 90 (r_new_quadruple_tlevel -> .)
    SEMI_COLON      reduce using rule 90 (r_new_quadruple_tlevel -> .)
    COMMA           reduce using rule 90 (r_new_quadruple_tlevel -> .)
    RPAREN          reduce using rule 90 (r_new_quadruple_tlevel -> .)

    r_new_quadruple_tlevel         shift and go to state 146

state 110

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS . BLOQUE FUNCTION
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 147

state 111

    (66) AUX_PARAM -> INT ID NEXT_PARAM .

    RPAREN          reduce using rule 66 (AUX_PARAM -> INT ID NEXT_PARAM .)


state 112

    (69) NEXT_PARAM -> COMMA . AUX_PARAM
    (66) AUX_PARAM -> . INT ID NEXT_PARAM
    (67) AUX_PARAM -> . FLOAT ID NEXT_PARAM
    (68) AUX_PARAM -> . CHAR ID NEXT_PARAM

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    CHAR            shift and go to state 58

    AUX_PARAM                      shift and go to state 148

state 113

    (70) NEXT_PARAM -> EMPTY .

    RPAREN          reduce using rule 70 (NEXT_PARAM -> EMPTY .)


state 114

    (67) AUX_PARAM -> FLOAT ID NEXT_PARAM .

    RPAREN          reduce using rule 67 (AUX_PARAM -> FLOAT ID NEXT_PARAM .)


state 115

    (68) AUX_PARAM -> CHAR ID NEXT_PARAM .

    RPAREN          reduce using rule 68 (AUX_PARAM -> CHAR ID NEXT_PARAM .)


state 116

    (75) LLAMADA -> ID LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 149


state 117

    (76) TIPO_PARAMETROS -> EXPRESION .
    (77) TIPO_PARAMETROS -> EXPRESION . COMMA TIPO_PARAMETROS

    RPAREN          reduce using rule 76 (TIPO_PARAMETROS -> EXPRESION .)
    COMMA           shift and go to state 150


state 118

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ . SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 151
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 119

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .

    RSQ             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)


state 120

    (31) SLEVEL_EXPRESION_AUX -> PLUS . r_new_operator SLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 152

state 121

    (32) SLEVEL_EXPRESION_AUX -> MINUS . r_new_operator SLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 153

state 122

    (33) SLEVEL_EXPRESION_AUX -> EMPTY .

    RSQ             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)


state 123

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .

    PLUS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    MINUS           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RSQ             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)


state 124

    (35) FLEVEL_EXPRESION_AUX -> MULT . r_new_operator FLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 154

state 125

    (36) FLEVEL_EXPRESION_AUX -> DIV . r_new_operator FLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 155

state 126

    (37) FLEVEL_EXPRESION_AUX -> EMPTY .

    PLUS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    MINUS           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RSQ             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)


state 127

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION . RPAREN r_new_rparen

    RPAREN          shift and go to state 156


state 128

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .

    $end            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    FUNCION         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    PRINCIPAL       reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SINO            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LEE             reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ESCRIBE         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ID              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SI              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    MIENTRAS        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    DESDE           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_I           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_F           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_C           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_S           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LPAREN          reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RBRACKET        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)


state 129

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    LECTURA                        shift and go to state 92
    OPCION_BLOQUE                  shift and go to state 157
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 130

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    ESCRITURA                      shift and go to state 93
    OPCION_BLOQUE                  shift and go to state 158
    LECTURA                        shift and go to state 92
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 131

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    LLAMADA                        shift and go to state 94
    OPCION_BLOQUE                  shift and go to state 159
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    ASIGNACION                     shift and go to state 99
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 132

    (52) OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 52 (OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .)


state 133

    (53) OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 53 (OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .)


state 134

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 54 (OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .)


state 135

    (55) OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 55 (OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .)


state 136

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . EMPTY
    (73) LECTURA -> . LEE LPAREN ID RPAREN
    (74) ESCRITURA -> . ESCRIBE LPAREN TIPO_PARAMETROS RPAREN
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (78) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (72) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (71) DESDE_CICLO -> . DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (85) r_new_lparen -> .

    LEE             shift and go to state 101
    ESCRIBE         shift and go to state 103
    ID              shift and go to state 102
    SI              shift and go to state 104
    MIENTRAS        shift and go to state 106
    DESDE           shift and go to state 107
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 99
    OPCION_BLOQUE                  shift and go to state 160
    LECTURA                        shift and go to state 92
    ESCRITURA                      shift and go to state 93
    LLAMADA                        shift and go to state 94
    IF_STMT                        shift and go to state 95
    IF_ELSE_STMT                   shift and go to state 96
    MIENTRAS_CICLO                 shift and go to state 97
    DESDE_CICLO                    shift and go to state 98
    EMPTY                          shift and go to state 100
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    r_new_lparen                   shift and go to state 68

state 137

    (73) LECTURA -> LEE LPAREN . ID RPAREN

    ID              shift and go to state 161


state 138

    (74) ESCRITURA -> ESCRIBE LPAREN . TIPO_PARAMETROS RPAREN
    (76) TIPO_PARAMETROS -> . EXPRESION
    (77) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TIPO_PARAMETROS                shift and go to state 162
    EXPRESION                      shift and go to state 117
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 139

    (78) IF_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 163
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 140

    (80) ASIGNACION -> EXPRESION ASIGNACION_AUX . r_new_equal
    (92) r_new_equal -> .

    SEMI_COLON      reduce using rule 92 (r_new_equal -> .)

    r_new_equal                    shift and go to state 164

state 141

    (81) ASIGNACION_AUX -> EQ . r_new_operator ASIGNACION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 165

state 142

    (82) ASIGNACION_AUX -> EMPTY .

    SEMI_COLON      reduce using rule 82 (ASIGNACION_AUX -> EMPTY .)


state 143

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita . LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    LPAREN          shift and go to state 166


state 144

    (71) DESDE_CICLO -> DESDE ID . EQ CTE_I HASTA CTE_I HACER BLOQUE

    EQ              shift and go to state 167


state 145

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple . EXPRESION_AUX
    (19) EXPRESION_AUX -> . COMPAR r_new_operator EXPRESION
    (20) EXPRESION_AUX -> . AND r_new_operator EXPRESION
    (21) EXPRESION_AUX -> . OR r_new_operator EXPRESION
    (22) EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    COMPAR          shift and go to state 169
    AND             shift and go to state 170
    OR              shift and go to state 171
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)

    EXPRESION_AUX                  shift and go to state 168
    EMPTY                          shift and go to state 172

state 146

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel . TLEVEL_EXPRESION_AUX
    (24) TLEVEL_EXPRESION_AUX -> . NOT_EQ r_new_operator TLEVEL_EXPRESION
    (25) TLEVEL_EXPRESION_AUX -> . GREATER_EQ r_new_operator TLEVEL_EXPRESION
    (26) TLEVEL_EXPRESION_AUX -> . LESS_EQ r_new_operator TLEVEL_EXPRESION
    (27) TLEVEL_EXPRESION_AUX -> . GREATER r_new_operator TLEVEL_EXPRESION
    (28) TLEVEL_EXPRESION_AUX -> . LESS r_new_operator TLEVEL_EXPRESION
    (29) TLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    NOT_EQ          shift and go to state 174
    GREATER_EQ      shift and go to state 175
    LESS_EQ         shift and go to state 176
    GREATER         shift and go to state 177
    LESS            shift and go to state 178
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)

    TLEVEL_EXPRESION_AUX           shift and go to state 173
    EMPTY                          shift and go to state 179

state 147

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE . FUNCTION
    (58) FUNCTION -> . FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION
    (59) FUNCTION -> . EMPTY
    (1) EMPTY -> .

    FUNCION         shift and go to state 10
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 180
    EMPTY                          shift and go to state 11

state 148

    (69) NEXT_PARAM -> COMMA AUX_PARAM .

    RPAREN          reduce using rule 69 (NEXT_PARAM -> COMMA AUX_PARAM .)


state 149

    (75) LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .

    MULT            reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    DIV             reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    PLUS            reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    MINUS           reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RSQ             reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    SEMI_COLON      reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    NOT_EQ          reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER_EQ      reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS_EQ         reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    GREATER         reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    LESS            reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMPAR          reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    AND             reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    OR              reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    EQ              reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    COMMA           reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)
    RPAREN          reduce using rule 75 (LLAMADA -> ID LPAREN TIPO_PARAMETROS RPAREN .)


state 150

    (77) TIPO_PARAMETROS -> EXPRESION COMMA . TIPO_PARAMETROS
    (76) TIPO_PARAMETROS -> . EXPRESION
    (77) TIPO_PARAMETROS -> . EXPRESION COMMA TIPO_PARAMETROS
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 117
    TIPO_PARAMETROS                shift and go to state 181
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 151

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION . RSQ

    RSQ             shift and go to state 182


state 152

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 183
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 153

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 184
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 154

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 185
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 155

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 186
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 156

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN . r_new_rparen
    (86) r_new_rparen -> .

    MULT            reduce using rule 86 (r_new_rparen -> .)
    DIV             reduce using rule 86 (r_new_rparen -> .)
    PLUS            reduce using rule 86 (r_new_rparen -> .)
    MINUS           reduce using rule 86 (r_new_rparen -> .)
    RSQ             reduce using rule 86 (r_new_rparen -> .)
    NOT_EQ          reduce using rule 86 (r_new_rparen -> .)
    GREATER_EQ      reduce using rule 86 (r_new_rparen -> .)
    LESS_EQ         reduce using rule 86 (r_new_rparen -> .)
    GREATER         reduce using rule 86 (r_new_rparen -> .)
    LESS            reduce using rule 86 (r_new_rparen -> .)
    COMPAR          reduce using rule 86 (r_new_rparen -> .)
    AND             reduce using rule 86 (r_new_rparen -> .)
    OR              reduce using rule 86 (r_new_rparen -> .)
    EQ              reduce using rule 86 (r_new_rparen -> .)
    SEMI_COLON      reduce using rule 86 (r_new_rparen -> .)
    COMMA           reduce using rule 86 (r_new_rparen -> .)
    RPAREN          reduce using rule 86 (r_new_rparen -> .)

    r_new_rparen                   shift and go to state 187

state 157

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 49 (OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .)


state 158

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 50 (OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .)


state 159

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 51 (OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .)


state 160

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 56 (OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .)


state 161

    (73) LECTURA -> LEE LPAREN ID . RPAREN

    RPAREN          shift and go to state 188


state 162

    (74) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS . RPAREN

    RPAREN          shift and go to state 189


state 163

    (78) IF_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    RPAREN          shift and go to state 190


state 164

    (80) ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .

    SEMI_COLON      reduce using rule 80 (ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .)


state 165

    (81) ASIGNACION_AUX -> EQ r_new_operator . ASIGNACION
    (80) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 191
    EXPRESION                      shift and go to state 105
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 166

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN . EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 192
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 167

    (71) DESDE_CICLO -> DESDE ID EQ . CTE_I HASTA CTE_I HACER BLOQUE

    CTE_I           shift and go to state 193


state 168

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .

    EQ              reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    COMMA           reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    RPAREN          reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)


state 169

    (19) EXPRESION_AUX -> COMPAR . r_new_operator EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 194

state 170

    (20) EXPRESION_AUX -> AND . r_new_operator EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 195

state 171

    (21) EXPRESION_AUX -> OR . r_new_operator EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 196

state 172

    (22) EXPRESION_AUX -> EMPTY .

    EQ              reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 22 (EXPRESION_AUX -> EMPTY .)


state 173

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .

    COMPAR          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)


state 174

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ . r_new_operator TLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 197

state 175

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ . r_new_operator TLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 198

state 176

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ . r_new_operator TLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 199

state 177

    (27) TLEVEL_EXPRESION_AUX -> GREATER . r_new_operator TLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 200

state 178

    (28) TLEVEL_EXPRESION_AUX -> LESS . r_new_operator TLEVEL_EXPRESION
    (87) r_new_operator -> .

    ID              reduce using rule 87 (r_new_operator -> .)
    CTE_I           reduce using rule 87 (r_new_operator -> .)
    CTE_F           reduce using rule 87 (r_new_operator -> .)
    CTE_C           reduce using rule 87 (r_new_operator -> .)
    CTE_S           reduce using rule 87 (r_new_operator -> .)
    LPAREN          reduce using rule 87 (r_new_operator -> .)

    r_new_operator                 shift and go to state 201

state 179

    (29) TLEVEL_EXPRESION_AUX -> EMPTY .

    COMPAR          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)


state 180

    (58) FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .

    PRINCIPAL       reduce using rule 58 (FUNCTION -> FUNCION TIPO_FUNC ID push_func LPAREN PARAMETROS RPAREN VARS BLOQUE FUNCTION .)


state 181

    (77) TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .

    RPAREN          reduce using rule 77 (TIPO_PARAMETROS -> EXPRESION COMMA TIPO_PARAMETROS .)


state 182

    (17) LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .

    COMMA           reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 17 (LIST_ID -> ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)


state 183

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)


state 184

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)


state 185

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)


state 186

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)


state 187

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .

    MULT            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    DIV             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    PLUS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    MINUS           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RSQ             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    NOT_EQ          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER_EQ      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS_EQ         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMPAR          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    AND             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    OR              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    EQ              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    SEMI_COLON      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMMA           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RPAREN          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)


state 188

    (73) LECTURA -> LEE LPAREN ID RPAREN .

    SEMI_COLON      reduce using rule 73 (LECTURA -> LEE LPAREN ID RPAREN .)


state 189

    (74) ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .

    SEMI_COLON      reduce using rule 74 (ESCRITURA -> ESCRIBE LPAREN TIPO_PARAMETROS RPAREN .)


state 190

    (78) IF_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (95) r_new_gotof -> .

    ENTONCES        reduce using rule 95 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 202

state 191

    (81) ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .

    SEMI_COLON      reduce using rule 81 (ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .)


state 192

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION . RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    RPAREN          shift and go to state 203


state 193

    (71) DESDE_CICLO -> DESDE ID EQ CTE_I . HASTA CTE_I HACER BLOQUE

    HASTA           shift and go to state 204


state 194

    (19) EXPRESION_AUX -> COMPAR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 205
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 195

    (20) EXPRESION_AUX -> AND r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 206
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 196

    (21) EXPRESION_AUX -> OR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 207
    TLEVEL_EXPRESION               shift and go to state 108
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 197

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 208
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 198

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 209
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 199

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 210
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 200

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 211
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 201

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID push_var LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_constant
    (45) CONSTANTE -> . CTE_F r_new_constant
    (46) CONSTANTE -> . CTE_C r_new_constant
    (47) CONSTANTE -> . CTE_S r_new_constant
    (75) LLAMADA -> . ID LPAREN TIPO_PARAMETROS RPAREN
    (85) r_new_lparen -> .

    ID              shift and go to state 61
    CTE_I           shift and go to state 69
    CTE_F           shift and go to state 70
    CTE_C           shift and go to state 71
    CTE_S           shift and go to state 72
    LPAREN          reduce using rule 85 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 212
    SLEVEL_EXPRESION               shift and go to state 109
    FLEVEL_EXPRESION               shift and go to state 63
    VALUE_EXPRESION                shift and go to state 64
    LIST_ID                        shift and go to state 65
    CONSTANTE                      shift and go to state 66
    LLAMADA                        shift and go to state 67
    r_new_lparen                   shift and go to state 68

state 202

    (78) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    ENTONCES        shift and go to state 213


state 203

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN . r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (95) r_new_gotof -> .

    HAZ             reduce using rule 95 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 214

state 204

    (71) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA . CTE_I HACER BLOQUE

    CTE_I           shift and go to state 215


state 205

    (19) EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .

    EQ              reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    COMMA           reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    RPAREN          reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)


state 206

    (20) EXPRESION_AUX -> AND r_new_operator EXPRESION .

    EQ              reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    COMMA           reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    RPAREN          reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)


state 207

    (21) EXPRESION_AUX -> OR r_new_operator EXPRESION .

    EQ              reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    COMMA           reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    RPAREN          reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)


state 208

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)


state 209

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)


state 210

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)


state 211

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)


state 212

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)


state 213

    (78) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 216

state 214

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof . HAZ BLOQUE r_new_goto r_complete_gotof

    HAZ             shift and go to state 217


state 215

    (71) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I . HACER BLOQUE

    HACER           shift and go to state 218


state 216

    (78) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_complete_gotof
    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (96) r_complete_gotof -> .
    (93) r_new_goto -> .

    LEE             reduce using rule 96 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 96 (r_complete_gotof -> .)
    ID              reduce using rule 96 (r_complete_gotof -> .)
    SI              reduce using rule 96 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 96 (r_complete_gotof -> .)
    DESDE           reduce using rule 96 (r_complete_gotof -> .)
    CTE_I           reduce using rule 96 (r_complete_gotof -> .)
    CTE_F           reduce using rule 96 (r_complete_gotof -> .)
    CTE_C           reduce using rule 96 (r_complete_gotof -> .)
    CTE_S           reduce using rule 96 (r_complete_gotof -> .)
    LPAREN          reduce using rule 96 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 96 (r_complete_gotof -> .)
    SINO            reduce using rule 93 (r_new_goto -> .)

    r_complete_gotof               shift and go to state 219
    r_new_goto                     shift and go to state 220

state 217

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ . BLOQUE r_new_goto r_complete_gotof
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 221

state 218

    (71) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 222

state 219

    (78) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .

    LEE             reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ESCRIBE         reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ID              reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    SI              reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    MIENTRAS        reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    DESDE           reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_I           reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_F           reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_C           reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_S           reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    LPAREN          reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    RBRACKET        reduce using rule 78 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)


state 220

    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto . r_complete_gotof SINO BLOQUE r_complete_goto
    (96) r_complete_gotof -> .

    SINO            reduce using rule 96 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 223

state 221

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE . r_new_goto r_complete_gotof
    (93) r_new_goto -> .

    LEE             reduce using rule 93 (r_new_goto -> .)
    ESCRIBE         reduce using rule 93 (r_new_goto -> .)
    ID              reduce using rule 93 (r_new_goto -> .)
    SI              reduce using rule 93 (r_new_goto -> .)
    MIENTRAS        reduce using rule 93 (r_new_goto -> .)
    DESDE           reduce using rule 93 (r_new_goto -> .)
    CTE_I           reduce using rule 93 (r_new_goto -> .)
    CTE_F           reduce using rule 93 (r_new_goto -> .)
    CTE_C           reduce using rule 93 (r_new_goto -> .)
    CTE_S           reduce using rule 93 (r_new_goto -> .)
    LPAREN          reduce using rule 93 (r_new_goto -> .)
    RBRACKET        reduce using rule 93 (r_new_goto -> .)

    r_new_goto                     shift and go to state 224

state 222

    (71) DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .

    LEE             reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ESCRIBE         reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    ID              reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    SI              reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    MIENTRAS        reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    DESDE           reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    CTE_I           reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    CTE_F           reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    CTE_C           reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    CTE_S           reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    LPAREN          reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)
    RBRACKET        reduce using rule 71 (DESDE_CICLO -> DESDE ID EQ CTE_I HASTA CTE_I HACER BLOQUE .)


state 223

    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof . SINO BLOQUE r_complete_goto

    SINO            shift and go to state 225


state 224

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto . r_complete_gotof
    (96) r_complete_gotof -> .

    LEE             reduce using rule 96 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 96 (r_complete_gotof -> .)
    ID              reduce using rule 96 (r_complete_gotof -> .)
    SI              reduce using rule 96 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 96 (r_complete_gotof -> .)
    DESDE           reduce using rule 96 (r_complete_gotof -> .)
    CTE_I           reduce using rule 96 (r_complete_gotof -> .)
    CTE_F           reduce using rule 96 (r_complete_gotof -> .)
    CTE_C           reduce using rule 96 (r_complete_gotof -> .)
    CTE_S           reduce using rule 96 (r_complete_gotof -> .)
    LPAREN          reduce using rule 96 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 96 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 226

state 225

    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO . BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 74

    BLOQUE                         shift and go to state 227

state 226

    (72) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .

    LEE             reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ESCRIBE         reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ID              reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    SI              reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    MIENTRAS        reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    DESDE           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_I           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_F           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_C           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_S           reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    LPAREN          reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    RBRACKET        reduce using rule 72 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)


state 227

    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE . r_complete_goto
    (94) r_complete_goto -> .

    LEE             reduce using rule 94 (r_complete_goto -> .)
    ESCRIBE         reduce using rule 94 (r_complete_goto -> .)
    ID              reduce using rule 94 (r_complete_goto -> .)
    SI              reduce using rule 94 (r_complete_goto -> .)
    MIENTRAS        reduce using rule 94 (r_complete_goto -> .)
    DESDE           reduce using rule 94 (r_complete_goto -> .)
    CTE_I           reduce using rule 94 (r_complete_goto -> .)
    CTE_F           reduce using rule 94 (r_complete_goto -> .)
    CTE_C           reduce using rule 94 (r_complete_goto -> .)
    CTE_S           reduce using rule 94 (r_complete_goto -> .)
    LPAREN          reduce using rule 94 (r_complete_goto -> .)
    RBRACKET        reduce using rule 94 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 228

state 228

    (79) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .

    LEE             reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ESCRIBE         reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ID              reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    SI              reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    MIENTRAS        reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    DESDE           reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_I           reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_F           reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_C           reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_S           reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    LPAREN          reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    RBRACKET        reduce using rule 79 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 94 resolved as shift
