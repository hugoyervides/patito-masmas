Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DOT
    INV
    NULL
    TRAN

Grammar

Rule 0     S' -> PROG
Rule 1     EMPTY -> <empty>
Rule 2     MAIN -> PRINCIPAL r_flush_mem LPAREN RPAREN BLOQUE
Rule 3     PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
Rule 4     VARS -> VAR TIPO
Rule 5     VARS -> EMPTY
Rule 6     TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO
Rule 7     TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
Rule 8     TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
Rule 9     TIPO -> EMPTY
Rule 10    VAR_INT -> LIST_ID COMMA VAR_INT
Rule 11    VAR_INT -> ID r_new_variable COMMA VAR_INT
Rule 12    VAR_INT -> LIST_ID
Rule 13    VAR_INT -> ID r_new_variable
Rule 14    VAR_TIPO -> ID r_new_variable COMMA
Rule 15    VAR_TIPO -> ID r_new_variable
Rule 16    LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
Rule 17    LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
Rule 18    EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
Rule 19    EXPRESION_AUX -> COMPAR r_new_operator EXPRESION
Rule 20    EXPRESION_AUX -> AND r_new_operator EXPRESION
Rule 21    EXPRESION_AUX -> OR r_new_operator EXPRESION
Rule 22    EXPRESION_AUX -> EMPTY
Rule 23    TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
Rule 24    TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION
Rule 25    TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION
Rule 26    TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION
Rule 27    TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION
Rule 28    TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION
Rule 29    TLEVEL_EXPRESION_AUX -> EMPTY
Rule 30    SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
Rule 31    SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION
Rule 32    SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION
Rule 33    SLEVEL_EXPRESION_AUX -> EMPTY
Rule 34    FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
Rule 35    FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION
Rule 36    FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION
Rule 37    FLEVEL_EXPRESION_AUX -> EMPTY
Rule 38    VALUE_EXPRESION -> ID r_new_id
Rule 39    VALUE_EXPRESION -> ID DET
Rule 40    VALUE_EXPRESION -> LIST_ID
Rule 41    VALUE_EXPRESION -> CONSTANTE
Rule 42    VALUE_EXPRESION -> LLAMADA
Rule 43    VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
Rule 44    CONSTANTE -> CTE_I r_new_c_int
Rule 45    CONSTANTE -> CTE_F r_new_c_float
Rule 46    CONSTANTE -> CTE_C r_new_c_char
Rule 47    CONSTANTE -> CTE_S r_new_c_string
Rule 48    BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET
Rule 49    OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE
Rule 50    OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE
Rule 51    OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE
Rule 52    OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE
Rule 53    OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE
Rule 54    OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE
Rule 55    OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE
Rule 56    OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE
Rule 57    OPCION_BLOQUE -> RETURN_STM SEMI_COLON OPCION_BLOQUE
Rule 58    OPCION_BLOQUE -> EMPTY
Rule 59    FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
Rule 60    FUNCTION -> EMPTY
Rule 61    TIPO_FUNC -> INT r_set_fun_type
Rule 62    TIPO_FUNC -> FLOAT r_set_fun_type
Rule 63    TIPO_FUNC -> CHAR r_set_fun_type
Rule 64    TIPO_FUNC -> VOID r_set_fun_type
Rule 65    PARAMETROS -> AUX_PARAM
Rule 66    PARAMETROS -> EMPTY
Rule 67    AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 68    AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 69    AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
Rule 70    NEXT_PARAM -> COMMA AUX_PARAM
Rule 71    NEXT_PARAM -> EMPTY
Rule 72    RETURN_STM -> RETURN LPAREN EXPRESION RPAREN r_generate_return
Rule 73    DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
Rule 74    MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
Rule 75    LECTURA -> LEE LPAREN ID r_new_id r_new_read RPAREN
Rule 76    ESCRITURA -> ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
Rule 77    PARAMETRO_ESCRITURA -> PARAMETRO_ESCRITURA_AUX
Rule 78    PARAMETRO_ESCRITURA -> EMPTY
Rule 79    PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write
Rule 80    PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write COMMA PARAMETRO_ESCRITURA_AUX
Rule 81    LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
Rule 82    TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX
Rule 83    TIPO_PARAMETROS -> EMPTY
Rule 84    TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter
Rule 85    TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA TIPO_PARAMETROS_AUX
Rule 86    IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
Rule 87    IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
Rule 88    ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal
Rule 89    ASIGNACION_AUX -> EQ r_new_operator ASIGNACION
Rule 90    ASIGNACION_AUX -> EMPTY
Rule 91    r_new_id -> <empty>
Rule 92    r_new_c_int -> <empty>
Rule 93    r_new_c_char -> <empty>
Rule 94    r_new_c_float -> <empty>
Rule 95    r_new_c_string -> <empty>
Rule 96    r_new_lparen -> <empty>
Rule 97    r_new_rparen -> <empty>
Rule 98    r_new_operator -> <empty>
Rule 99    r_new_quadruple_flevel -> <empty>
Rule 100   r_new_quadruple_slevel -> <empty>
Rule 101   r_new_quadruple_tlevel -> <empty>
Rule 102   r_new_quadruple -> <empty>
Rule 103   r_new_equal -> <empty>
Rule 104   r_new_goto -> <empty>
Rule 105   r_complete_goto -> <empty>
Rule 106   r_new_gotof -> <empty>
Rule 107   r_complete_gotof -> <empty>
Rule 108   r_new_migajita -> <empty>
Rule 109   r_new_id_for -> <empty>
Rule 110   r_compara_for -> <empty>
Rule 111   r_update_for -> <empty>
Rule 112   r_clear_for -> <empty>
Rule 113   r_clear_mem -> <empty>
Rule 114   r_new_function -> <empty>
Rule 115   r_insert_type -> <empty>
Rule 116   r_set_fun_type -> <empty>
Rule 117   r_set_fun_name -> <empty>
Rule 118   r_new_vartable -> <empty>
Rule 119   r_insert_parameters -> <empty>
Rule 120   r_end_function -> <empty>
Rule 121   r_flush_mem -> <empty>
Rule 122   r_verify_function -> <empty>
Rule 123   r_generate_era -> <empty>
Rule 124   r_verify_parameter -> <empty>
Rule 125   r_verify_last_parameter -> <empty>
Rule 126   r_generate_gosub -> <empty>
Rule 127   r_generate_return -> <empty>
Rule 128   r_set_var_type -> <empty>
Rule 129   r_new_variable -> <empty>
Rule 130   r_change_local_context -> <empty>
Rule 131   r_change_global_context -> <empty>
Rule 132   r_display_var_table -> <empty>
Rule 133   r_display_const -> <empty>
Rule 134   r_new_read -> <empty>
Rule 135   r_new_write -> <empty>

Terminals, with rules where they appear

AND                  : 20
CHAR                 : 8 63 69
COLON                : 
COMMA                : 10 11 14 70 80 85
COMMENT              : 
COMPAR               : 19
CTE_C                : 46
CTE_F                : 45
CTE_I                : 44 73 73
CTE_S                : 47
DESDE                : 73
DET                  : 39
DIV                  : 36
DOT                  : 
ENTONCES             : 86 87
EQ                   : 73 89
ESCRIBE              : 76
FLOAT                : 7 62 68
FUNCION              : 59
GREATER              : 27
GREATER_EQ           : 25
HACER                : 73
HASTA                : 73
HAZ                  : 74
ID                   : 3 11 13 14 15 16 17 38 39 59 67 68 69 73 75 81
INT                  : 6 61 67
INV                  : 
LBRACKET             : 48
LEE                  : 75
LESS                 : 28
LESS_EQ              : 26
LPAREN               : 2 43 59 72 74 75 76 81 86 87
LSQ                  : 16 17 17
MIENTRAS             : 74
MINUS                : 32
MULT                 : 35
NOT_EQ               : 24
NULL                 : 
OR                   : 21
PLUS                 : 31
PRINCIPAL            : 2
PROGRAMA             : 3
RBRACKET             : 48
RETURN               : 72
RPAREN               : 2 43 59 72 74 75 76 81 86 87
RSQ                  : 16 17 17
SEMI_COLON           : 3 6 7 8 49 50 51 56 57
SI                   : 86 87
SINO                 : 87
TRAN                 : 
VAR                  : 4
VOID                 : 64
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 56 89
ASIGNACION_AUX       : 88
AUX_PARAM            : 65 70
BLOQUE               : 2 59 73 74 86 87 87
CONSTANTE            : 41
DESDE_CICLO          : 55
EMPTY                : 5 9 22 29 33 37 58 60 66 71 78 83 90
ESCRITURA            : 50
EXPRESION            : 19 20 21 43 72 74 79 80 84 85 86 87 88
EXPRESION_AUX        : 18
FLEVEL_EXPRESION     : 30 35 36
FLEVEL_EXPRESION_AUX : 34
FUNCTION             : 3 59
IF_ELSE_STMT         : 53
IF_STMT              : 52
LECTURA              : 49
LIST_ID              : 10 12 40
LLAMADA              : 42 51
MAIN                 : 3
MIENTRAS_CICLO       : 54
NEXT_PARAM           : 67 68 69
OPCION_BLOQUE        : 48 49 50 51 52 53 54 55 56 57
PARAMETROS           : 59
PARAMETRO_ESCRITURA  : 76
PARAMETRO_ESCRITURA_AUX : 77 80
PROG                 : 0
RETURN_STM           : 57
SLEVEL_EXPRESION     : 16 17 17 23 31 32
SLEVEL_EXPRESION_AUX : 30
TIPO                 : 4 6 7 8
TIPO_FUNC            : 59
TIPO_PARAMETROS      : 81
TIPO_PARAMETROS_AUX  : 82 85
TLEVEL_EXPRESION     : 18 24 25 26 27 28
TLEVEL_EXPRESION_AUX : 23
VALUE_EXPRESION      : 34
VARS                 : 3 59
VAR_INT              : 6 10 11
VAR_TIPO             : 7 8
r_change_global_context : 3
r_change_local_context : 3
r_clear_for          : 73
r_clear_mem          : 59
r_compara_for        : 73
r_complete_goto      : 3 87
r_complete_gotof     : 73 74 86 87
r_display_const      : 3
r_display_var_table  : 3
r_end_function       : 59
r_flush_mem          : 2
r_generate_era       : 81
r_generate_gosub     : 81
r_generate_return    : 72
r_insert_parameters  : 59
r_insert_type        : 67 68 69
r_new_c_char         : 46
r_new_c_float        : 45
r_new_c_int          : 44 73 73
r_new_c_string       : 47
r_new_equal          : 73 88
r_new_function       : 59
r_new_goto           : 3 73 74 87
r_new_gotof          : 73 74 86 87
r_new_id             : 38 75
r_new_id_for         : 73
r_new_lparen         : 43 81
r_new_migajita       : 73 74
r_new_operator       : 19 20 21 24 25 26 27 28 31 32 35 36 73 89
r_new_quadruple      : 18
r_new_quadruple_flevel : 34
r_new_quadruple_slevel : 30
r_new_quadruple_tlevel : 23
r_new_read           : 75
r_new_rparen         : 43 81
r_new_variable       : 11 13 14 15 16 17 67 68 69
r_new_vartable       : 59
r_new_write          : 79 80
r_set_fun_name       : 59
r_set_fun_type       : 61 62 63 64
r_set_var_type       : 6 7 8 67 68 69
r_update_for         : 73
r_verify_function    : 81
r_verify_last_parameter : 81
r_verify_parameter   : 84 85

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (3) PROG -> . r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
    (104) r_new_goto -> .

    PROGRAMA        reduce using rule 104 (r_new_goto -> .)

    PROG                           shift and go to state 1
    r_new_goto                     shift and go to state 2

state 1

    (0) S' -> PROG .



state 2

    (3) PROG -> r_new_goto . PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const

    PROGRAMA        shift and go to state 3


state 3

    (3) PROG -> r_new_goto PROGRAMA . ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const

    ID              shift and go to state 4


state 4

    (3) PROG -> r_new_goto PROGRAMA ID . SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const

    SEMI_COLON      shift and go to state 5


state 5

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON . VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 6
    EMPTY                          shift and go to state 8

state 6

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS . r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
    (130) r_change_local_context -> .

    PRINCIPAL       reduce using rule 130 (r_change_local_context -> .)
    FUNCION         reduce using rule 130 (r_change_local_context -> .)

    r_change_local_context         shift and go to state 9

state 7

    (4) VARS -> VAR . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 10
    EMPTY                          shift and go to state 14

state 8

    (5) VARS -> EMPTY .

    PRINCIPAL       reduce using rule 5 (VARS -> EMPTY .)
    FUNCION         reduce using rule 5 (VARS -> EMPTY .)
    LBRACKET        reduce using rule 5 (VARS -> EMPTY .)


state 9

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context . FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
    (59) FUNCTION -> . r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (60) FUNCTION -> . EMPTY
    (114) r_new_function -> .
    (1) EMPTY -> .

    FUNCION         reduce using rule 114 (r_new_function -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    FUNCTION                       shift and go to state 15
    r_new_function                 shift and go to state 16
    EMPTY                          shift and go to state 17

state 10

    (4) VARS -> VAR TIPO .

    PRINCIPAL       reduce using rule 4 (VARS -> VAR TIPO .)
    FUNCION         reduce using rule 4 (VARS -> VAR TIPO .)
    LBRACKET        reduce using rule 4 (VARS -> VAR TIPO .)


state 11

    (6) TIPO -> INT . r_set_var_type VAR_INT SEMI_COLON TIPO
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 18

state 12

    (7) TIPO -> FLOAT . r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 19

state 13

    (8) TIPO -> CHAR . r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 20

state 14

    (9) TIPO -> EMPTY .

    PRINCIPAL       reduce using rule 9 (TIPO -> EMPTY .)
    FUNCION         reduce using rule 9 (TIPO -> EMPTY .)
    LBRACKET        reduce using rule 9 (TIPO -> EMPTY .)


state 15

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION . r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const
    (105) r_complete_goto -> .

    PRINCIPAL       reduce using rule 105 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 21

state 16

    (59) FUNCTION -> r_new_function . FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION

    FUNCION         shift and go to state 22


state 17

    (60) FUNCTION -> EMPTY .

    PRINCIPAL       reduce using rule 60 (FUNCTION -> EMPTY .)


state 18

    (6) TIPO -> INT r_set_var_type . VAR_INT SEMI_COLON TIPO
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 23
    LIST_ID                        shift and go to state 24

state 19

    (7) TIPO -> FLOAT r_set_var_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID r_new_variable COMMA
    (15) VAR_TIPO -> . ID r_new_variable

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 26

state 20

    (8) TIPO -> CHAR r_set_var_type . VAR_TIPO SEMI_COLON TIPO
    (14) VAR_TIPO -> . ID r_new_variable COMMA
    (15) VAR_TIPO -> . ID r_new_variable

    ID              shift and go to state 27

    VAR_TIPO                       shift and go to state 28

state 21

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto . r_change_global_context r_display_var_table MAIN r_display_const
    (131) r_change_global_context -> .

    PRINCIPAL       reduce using rule 131 (r_change_global_context -> .)

    r_change_global_context        shift and go to state 29

state 22

    (59) FUNCTION -> r_new_function FUNCION . TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (61) TIPO_FUNC -> . INT r_set_fun_type
    (62) TIPO_FUNC -> . FLOAT r_set_fun_type
    (63) TIPO_FUNC -> . CHAR r_set_fun_type
    (64) TIPO_FUNC -> . VOID r_set_fun_type

    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    CHAR            shift and go to state 33
    VOID            shift and go to state 34

    TIPO_FUNC                      shift and go to state 30

state 23

    (6) TIPO -> INT r_set_var_type VAR_INT . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 35


state 24

    (10) VAR_INT -> LIST_ID . COMMA VAR_INT
    (12) VAR_INT -> LIST_ID .

    COMMA           shift and go to state 36
    SEMI_COLON      reduce using rule 12 (VAR_INT -> LIST_ID .)


state 25

    (11) VAR_INT -> ID . r_new_variable COMMA VAR_INT
    (13) VAR_INT -> ID . r_new_variable
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (129) r_new_variable -> .

    COMMA           reduce using rule 129 (r_new_variable -> .)
    LSQ             reduce using rule 129 (r_new_variable -> .)
    SEMI_COLON      reduce using rule 129 (r_new_variable -> .)

    r_new_variable                 shift and go to state 37

state 26

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 38


state 27

    (14) VAR_TIPO -> ID . r_new_variable COMMA
    (15) VAR_TIPO -> ID . r_new_variable
    (129) r_new_variable -> .

    COMMA           reduce using rule 129 (r_new_variable -> .)
    SEMI_COLON      reduce using rule 129 (r_new_variable -> .)

    r_new_variable                 shift and go to state 39

state 28

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO . SEMI_COLON TIPO

    SEMI_COLON      shift and go to state 40


state 29

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context . r_display_var_table MAIN r_display_const
    (132) r_display_var_table -> .

    PRINCIPAL       reduce using rule 132 (r_display_var_table -> .)

    r_display_var_table            shift and go to state 41

state 30

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC . r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (113) r_clear_mem -> .

    ID              reduce using rule 113 (r_clear_mem -> .)

    r_clear_mem                    shift and go to state 42

state 31

    (61) TIPO_FUNC -> INT . r_set_fun_type
    (116) r_set_fun_type -> .

    ID              reduce using rule 116 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 43

state 32

    (62) TIPO_FUNC -> FLOAT . r_set_fun_type
    (116) r_set_fun_type -> .

    ID              reduce using rule 116 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 44

state 33

    (63) TIPO_FUNC -> CHAR . r_set_fun_type
    (116) r_set_fun_type -> .

    ID              reduce using rule 116 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 45

state 34

    (64) TIPO_FUNC -> VOID . r_set_fun_type
    (116) r_set_fun_type -> .

    ID              reduce using rule 116 (r_set_fun_type -> .)

    r_set_fun_type                 shift and go to state 46

state 35

    (6) TIPO -> INT r_set_var_type VAR_INT SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 47
    EMPTY                          shift and go to state 14

state 36

    (10) VAR_INT -> LIST_ID COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    LIST_ID                        shift and go to state 24
    VAR_INT                        shift and go to state 48

state 37

    (11) VAR_INT -> ID r_new_variable . COMMA VAR_INT
    (13) VAR_INT -> ID r_new_variable .
    (16) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    COMMA           shift and go to state 49
    SEMI_COLON      reduce using rule 13 (VAR_INT -> ID r_new_variable .)
    LSQ             shift and go to state 50


state 38

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 51
    EMPTY                          shift and go to state 14

state 39

    (14) VAR_TIPO -> ID r_new_variable . COMMA
    (15) VAR_TIPO -> ID r_new_variable .

    COMMA           shift and go to state 52
    SEMI_COLON      reduce using rule 15 (VAR_TIPO -> ID r_new_variable .)


state 40

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON . TIPO
    (6) TIPO -> . INT r_set_var_type VAR_INT SEMI_COLON TIPO
    (7) TIPO -> . FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (8) TIPO -> . CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO
    (9) TIPO -> . EMPTY
    (1) EMPTY -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)
    FUNCION         reduce using rule 1 (EMPTY -> .)
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    TIPO                           shift and go to state 53
    EMPTY                          shift and go to state 14

state 41

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table . MAIN r_display_const
    (2) MAIN -> . PRINCIPAL r_flush_mem LPAREN RPAREN BLOQUE

    PRINCIPAL       shift and go to state 55

    MAIN                           shift and go to state 54

state 42

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem . ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION

    ID              shift and go to state 56


state 43

    (61) TIPO_FUNC -> INT r_set_fun_type .

    ID              reduce using rule 61 (TIPO_FUNC -> INT r_set_fun_type .)


state 44

    (62) TIPO_FUNC -> FLOAT r_set_fun_type .

    ID              reduce using rule 62 (TIPO_FUNC -> FLOAT r_set_fun_type .)


state 45

    (63) TIPO_FUNC -> CHAR r_set_fun_type .

    ID              reduce using rule 63 (TIPO_FUNC -> CHAR r_set_fun_type .)


state 46

    (64) TIPO_FUNC -> VOID r_set_fun_type .

    ID              reduce using rule 64 (TIPO_FUNC -> VOID r_set_fun_type .)


state 47

    (6) TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)
    FUNCION         reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 6 (TIPO -> INT r_set_var_type VAR_INT SEMI_COLON TIPO .)


state 48

    (10) VAR_INT -> LIST_ID COMMA VAR_INT .

    SEMI_COLON      reduce using rule 10 (VAR_INT -> LIST_ID COMMA VAR_INT .)


state 49

    (11) VAR_INT -> ID r_new_variable COMMA . VAR_INT
    (10) VAR_INT -> . LIST_ID COMMA VAR_INT
    (11) VAR_INT -> . ID r_new_variable COMMA VAR_INT
    (12) VAR_INT -> . LIST_ID
    (13) VAR_INT -> . ID r_new_variable
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    ID              shift and go to state 25

    VAR_INT                        shift and go to state 57
    LIST_ID                        shift and go to state 24

state 50

    (16) LIST_ID -> ID r_new_variable LSQ . SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable LSQ . SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 59
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 51

    (7) TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    FUNCION         reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 7 (TIPO -> FLOAT r_set_var_type VAR_TIPO SEMI_COLON TIPO .)


state 52

    (14) VAR_TIPO -> ID r_new_variable COMMA .

    SEMI_COLON      reduce using rule 14 (VAR_TIPO -> ID r_new_variable COMMA .)


state 53

    (8) TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .

    PRINCIPAL       reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    FUNCION         reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)
    LBRACKET        reduce using rule 8 (TIPO -> CHAR r_set_var_type VAR_TIPO SEMI_COLON TIPO .)


state 54

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN . r_display_const
    (133) r_display_const -> .

    $end            reduce using rule 133 (r_display_const -> .)

    r_display_const                shift and go to state 70

state 55

    (2) MAIN -> PRINCIPAL . r_flush_mem LPAREN RPAREN BLOQUE
    (121) r_flush_mem -> .

    LPAREN          reduce using rule 121 (r_flush_mem -> .)

    r_flush_mem                    shift and go to state 71

state 56

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID . r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (117) r_set_fun_name -> .

    LPAREN          reduce using rule 117 (r_set_fun_name -> .)

    r_set_fun_name                 shift and go to state 72

state 57

    (11) VAR_INT -> ID r_new_variable COMMA VAR_INT .

    SEMI_COLON      reduce using rule 11 (VAR_INT -> ID r_new_variable COMMA VAR_INT .)


state 58

    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (81) LLAMADA -> ID . r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (91) r_new_id -> .
    (129) r_new_variable -> .
    (122) r_verify_function -> .

    DET             shift and go to state 74
    MULT            reduce using rule 91 (r_new_id -> .)
    DIV             reduce using rule 91 (r_new_id -> .)
    PLUS            reduce using rule 91 (r_new_id -> .)
    MINUS           reduce using rule 91 (r_new_id -> .)
    RSQ             reduce using rule 91 (r_new_id -> .)
    NOT_EQ          reduce using rule 91 (r_new_id -> .)
    GREATER_EQ      reduce using rule 91 (r_new_id -> .)
    LESS_EQ         reduce using rule 91 (r_new_id -> .)
    GREATER         reduce using rule 91 (r_new_id -> .)
    LESS            reduce using rule 91 (r_new_id -> .)
    COMPAR          reduce using rule 91 (r_new_id -> .)
    AND             reduce using rule 91 (r_new_id -> .)
    OR              reduce using rule 91 (r_new_id -> .)
    RPAREN          reduce using rule 91 (r_new_id -> .)
    EQ              reduce using rule 91 (r_new_id -> .)
    SEMI_COLON      reduce using rule 91 (r_new_id -> .)
    COMMA           reduce using rule 91 (r_new_id -> .)
    LSQ             reduce using rule 129 (r_new_variable -> .)
    LPAREN          reduce using rule 122 (r_verify_function -> .)

    r_new_id                       shift and go to state 73
    r_new_variable                 shift and go to state 75
    r_verify_function              shift and go to state 76

state 59

    (16) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION . RSQ
    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION . RSQ LSQ SLEVEL_EXPRESION RSQ

    RSQ             shift and go to state 77


state 60

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION . r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (100) r_new_quadruple_slevel -> .

    PLUS            reduce using rule 100 (r_new_quadruple_slevel -> .)
    MINUS           reduce using rule 100 (r_new_quadruple_slevel -> .)
    RSQ             reduce using rule 100 (r_new_quadruple_slevel -> .)
    NOT_EQ          reduce using rule 100 (r_new_quadruple_slevel -> .)
    GREATER_EQ      reduce using rule 100 (r_new_quadruple_slevel -> .)
    LESS_EQ         reduce using rule 100 (r_new_quadruple_slevel -> .)
    GREATER         reduce using rule 100 (r_new_quadruple_slevel -> .)
    LESS            reduce using rule 100 (r_new_quadruple_slevel -> .)
    COMPAR          reduce using rule 100 (r_new_quadruple_slevel -> .)
    AND             reduce using rule 100 (r_new_quadruple_slevel -> .)
    OR              reduce using rule 100 (r_new_quadruple_slevel -> .)
    RPAREN          reduce using rule 100 (r_new_quadruple_slevel -> .)
    EQ              reduce using rule 100 (r_new_quadruple_slevel -> .)
    SEMI_COLON      reduce using rule 100 (r_new_quadruple_slevel -> .)
    COMMA           reduce using rule 100 (r_new_quadruple_slevel -> .)

    r_new_quadruple_slevel         shift and go to state 78

state 61

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION . r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (99) r_new_quadruple_flevel -> .

    MULT            reduce using rule 99 (r_new_quadruple_flevel -> .)
    DIV             reduce using rule 99 (r_new_quadruple_flevel -> .)
    PLUS            reduce using rule 99 (r_new_quadruple_flevel -> .)
    MINUS           reduce using rule 99 (r_new_quadruple_flevel -> .)
    RSQ             reduce using rule 99 (r_new_quadruple_flevel -> .)
    NOT_EQ          reduce using rule 99 (r_new_quadruple_flevel -> .)
    GREATER_EQ      reduce using rule 99 (r_new_quadruple_flevel -> .)
    LESS_EQ         reduce using rule 99 (r_new_quadruple_flevel -> .)
    GREATER         reduce using rule 99 (r_new_quadruple_flevel -> .)
    LESS            reduce using rule 99 (r_new_quadruple_flevel -> .)
    COMPAR          reduce using rule 99 (r_new_quadruple_flevel -> .)
    AND             reduce using rule 99 (r_new_quadruple_flevel -> .)
    OR              reduce using rule 99 (r_new_quadruple_flevel -> .)
    RPAREN          reduce using rule 99 (r_new_quadruple_flevel -> .)
    EQ              reduce using rule 99 (r_new_quadruple_flevel -> .)
    SEMI_COLON      reduce using rule 99 (r_new_quadruple_flevel -> .)
    COMMA           reduce using rule 99 (r_new_quadruple_flevel -> .)

    r_new_quadruple_flevel         shift and go to state 79

state 62

    (40) VALUE_EXPRESION -> LIST_ID .

    MULT            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    DIV             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    PLUS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    MINUS           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RSQ             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    NOT_EQ          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER_EQ      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS_EQ         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    GREATER         reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    LESS            reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMPAR          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    AND             reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    OR              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    RPAREN          reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    EQ              reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    SEMI_COLON      reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)
    COMMA           reduce using rule 40 (VALUE_EXPRESION -> LIST_ID .)


state 63

    (41) VALUE_EXPRESION -> CONSTANTE .

    MULT            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    DIV             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    PLUS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    MINUS           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RSQ             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    NOT_EQ          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER_EQ      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS_EQ         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    GREATER         reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    LESS            reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMPAR          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    AND             reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    OR              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    RPAREN          reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    EQ              reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    SEMI_COLON      reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)
    COMMA           reduce using rule 41 (VALUE_EXPRESION -> CONSTANTE .)


state 64

    (42) VALUE_EXPRESION -> LLAMADA .

    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RSQ             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    RPAREN          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    SEMI_COLON      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMMA           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)


state 65

    (43) VALUE_EXPRESION -> r_new_lparen . LPAREN EXPRESION RPAREN r_new_rparen

    LPAREN          shift and go to state 80


state 66

    (44) CONSTANTE -> CTE_I . r_new_c_int
    (92) r_new_c_int -> .

    MULT            reduce using rule 92 (r_new_c_int -> .)
    DIV             reduce using rule 92 (r_new_c_int -> .)
    PLUS            reduce using rule 92 (r_new_c_int -> .)
    MINUS           reduce using rule 92 (r_new_c_int -> .)
    RSQ             reduce using rule 92 (r_new_c_int -> .)
    NOT_EQ          reduce using rule 92 (r_new_c_int -> .)
    GREATER_EQ      reduce using rule 92 (r_new_c_int -> .)
    LESS_EQ         reduce using rule 92 (r_new_c_int -> .)
    GREATER         reduce using rule 92 (r_new_c_int -> .)
    LESS            reduce using rule 92 (r_new_c_int -> .)
    COMPAR          reduce using rule 92 (r_new_c_int -> .)
    AND             reduce using rule 92 (r_new_c_int -> .)
    OR              reduce using rule 92 (r_new_c_int -> .)
    RPAREN          reduce using rule 92 (r_new_c_int -> .)
    EQ              reduce using rule 92 (r_new_c_int -> .)
    SEMI_COLON      reduce using rule 92 (r_new_c_int -> .)
    COMMA           reduce using rule 92 (r_new_c_int -> .)

    r_new_c_int                    shift and go to state 81

state 67

    (45) CONSTANTE -> CTE_F . r_new_c_float
    (94) r_new_c_float -> .

    MULT            reduce using rule 94 (r_new_c_float -> .)
    DIV             reduce using rule 94 (r_new_c_float -> .)
    PLUS            reduce using rule 94 (r_new_c_float -> .)
    MINUS           reduce using rule 94 (r_new_c_float -> .)
    RSQ             reduce using rule 94 (r_new_c_float -> .)
    NOT_EQ          reduce using rule 94 (r_new_c_float -> .)
    GREATER_EQ      reduce using rule 94 (r_new_c_float -> .)
    LESS_EQ         reduce using rule 94 (r_new_c_float -> .)
    GREATER         reduce using rule 94 (r_new_c_float -> .)
    LESS            reduce using rule 94 (r_new_c_float -> .)
    COMPAR          reduce using rule 94 (r_new_c_float -> .)
    AND             reduce using rule 94 (r_new_c_float -> .)
    OR              reduce using rule 94 (r_new_c_float -> .)
    RPAREN          reduce using rule 94 (r_new_c_float -> .)
    EQ              reduce using rule 94 (r_new_c_float -> .)
    SEMI_COLON      reduce using rule 94 (r_new_c_float -> .)
    COMMA           reduce using rule 94 (r_new_c_float -> .)

    r_new_c_float                  shift and go to state 82

state 68

    (46) CONSTANTE -> CTE_C . r_new_c_char
    (93) r_new_c_char -> .

    MULT            reduce using rule 93 (r_new_c_char -> .)
    DIV             reduce using rule 93 (r_new_c_char -> .)
    PLUS            reduce using rule 93 (r_new_c_char -> .)
    MINUS           reduce using rule 93 (r_new_c_char -> .)
    RSQ             reduce using rule 93 (r_new_c_char -> .)
    NOT_EQ          reduce using rule 93 (r_new_c_char -> .)
    GREATER_EQ      reduce using rule 93 (r_new_c_char -> .)
    LESS_EQ         reduce using rule 93 (r_new_c_char -> .)
    GREATER         reduce using rule 93 (r_new_c_char -> .)
    LESS            reduce using rule 93 (r_new_c_char -> .)
    COMPAR          reduce using rule 93 (r_new_c_char -> .)
    AND             reduce using rule 93 (r_new_c_char -> .)
    OR              reduce using rule 93 (r_new_c_char -> .)
    RPAREN          reduce using rule 93 (r_new_c_char -> .)
    EQ              reduce using rule 93 (r_new_c_char -> .)
    SEMI_COLON      reduce using rule 93 (r_new_c_char -> .)
    COMMA           reduce using rule 93 (r_new_c_char -> .)

    r_new_c_char                   shift and go to state 83

state 69

    (47) CONSTANTE -> CTE_S . r_new_c_string
    (95) r_new_c_string -> .

    MULT            reduce using rule 95 (r_new_c_string -> .)
    DIV             reduce using rule 95 (r_new_c_string -> .)
    PLUS            reduce using rule 95 (r_new_c_string -> .)
    MINUS           reduce using rule 95 (r_new_c_string -> .)
    RSQ             reduce using rule 95 (r_new_c_string -> .)
    NOT_EQ          reduce using rule 95 (r_new_c_string -> .)
    GREATER_EQ      reduce using rule 95 (r_new_c_string -> .)
    LESS_EQ         reduce using rule 95 (r_new_c_string -> .)
    GREATER         reduce using rule 95 (r_new_c_string -> .)
    LESS            reduce using rule 95 (r_new_c_string -> .)
    COMPAR          reduce using rule 95 (r_new_c_string -> .)
    AND             reduce using rule 95 (r_new_c_string -> .)
    OR              reduce using rule 95 (r_new_c_string -> .)
    RPAREN          reduce using rule 95 (r_new_c_string -> .)
    EQ              reduce using rule 95 (r_new_c_string -> .)
    SEMI_COLON      reduce using rule 95 (r_new_c_string -> .)
    COMMA           reduce using rule 95 (r_new_c_string -> .)

    r_new_c_string                 shift and go to state 84

state 70

    (3) PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const .

    $end            reduce using rule 3 (PROG -> r_new_goto PROGRAMA ID SEMI_COLON VARS r_change_local_context FUNCTION r_complete_goto r_change_global_context r_display_var_table MAIN r_display_const .)


state 71

    (2) MAIN -> PRINCIPAL r_flush_mem . LPAREN RPAREN BLOQUE

    LPAREN          shift and go to state 85


state 72

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name . r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (118) r_new_vartable -> .

    LPAREN          reduce using rule 118 (r_new_vartable -> .)

    r_new_vartable                 shift and go to state 86

state 73

    (38) VALUE_EXPRESION -> ID r_new_id .

    MULT            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    DIV             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    PLUS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    MINUS           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RSQ             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    NOT_EQ          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER_EQ      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS_EQ         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    GREATER         reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    LESS            reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMPAR          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    AND             reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    OR              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    RPAREN          reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    EQ              reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    SEMI_COLON      reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)
    COMMA           reduce using rule 38 (VALUE_EXPRESION -> ID r_new_id .)


state 74

    (39) VALUE_EXPRESION -> ID DET .

    MULT            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    DIV             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    PLUS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    MINUS           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RSQ             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    NOT_EQ          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER_EQ      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS_EQ         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    GREATER         reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    LESS            reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMPAR          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    AND             reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    OR              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    RPAREN          reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    EQ              reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    SEMI_COLON      reduce using rule 39 (VALUE_EXPRESION -> ID DET .)
    COMMA           reduce using rule 39 (VALUE_EXPRESION -> ID DET .)


state 75

    (16) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID r_new_variable . LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ

    LSQ             shift and go to state 50


state 76

    (81) LLAMADA -> ID r_verify_function . r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (123) r_generate_era -> .

    LPAREN          reduce using rule 123 (r_generate_era -> .)

    r_generate_era                 shift and go to state 87

state 77

    (16) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .
    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ . LSQ SLEVEL_EXPRESION RSQ

    COMMA           reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 16 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ .)
    LSQ             shift and go to state 88


state 78

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel . SLEVEL_EXPRESION_AUX
    (31) SLEVEL_EXPRESION_AUX -> . PLUS r_new_operator SLEVEL_EXPRESION
    (32) SLEVEL_EXPRESION_AUX -> . MINUS r_new_operator SLEVEL_EXPRESION
    (33) SLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)

    SLEVEL_EXPRESION_AUX           shift and go to state 89
    EMPTY                          shift and go to state 92

state 79

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel . FLEVEL_EXPRESION_AUX
    (35) FLEVEL_EXPRESION_AUX -> . MULT r_new_operator FLEVEL_EXPRESION
    (36) FLEVEL_EXPRESION_AUX -> . DIV r_new_operator FLEVEL_EXPRESION
    (37) FLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    MULT            shift and go to state 94
    DIV             shift and go to state 95
    PLUS            reduce using rule 1 (EMPTY -> .)
    MINUS           reduce using rule 1 (EMPTY -> .)
    RSQ             reduce using rule 1 (EMPTY -> .)
    NOT_EQ          reduce using rule 1 (EMPTY -> .)
    GREATER_EQ      reduce using rule 1 (EMPTY -> .)
    LESS_EQ         reduce using rule 1 (EMPTY -> .)
    GREATER         reduce using rule 1 (EMPTY -> .)
    LESS            reduce using rule 1 (EMPTY -> .)
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)

    FLEVEL_EXPRESION_AUX           shift and go to state 93
    EMPTY                          shift and go to state 96

state 80

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN . EXPRESION RPAREN r_new_rparen
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 97
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64

state 81

    (44) CONSTANTE -> CTE_I r_new_c_int .

    MULT            reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    DIV             reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    PLUS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    MINUS           reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    RSQ             reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    NOT_EQ          reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    GREATER_EQ      reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    LESS_EQ         reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    GREATER         reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    LESS            reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    COMPAR          reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    AND             reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    OR              reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    RPAREN          reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    EQ              reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    SEMI_COLON      reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)
    COMMA           reduce using rule 44 (CONSTANTE -> CTE_I r_new_c_int .)


state 82

    (45) CONSTANTE -> CTE_F r_new_c_float .

    MULT            reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    DIV             reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    PLUS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    MINUS           reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    RSQ             reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    NOT_EQ          reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    GREATER_EQ      reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    LESS_EQ         reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    GREATER         reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    LESS            reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    COMPAR          reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    AND             reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    OR              reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    RPAREN          reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    EQ              reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    SEMI_COLON      reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)
    COMMA           reduce using rule 45 (CONSTANTE -> CTE_F r_new_c_float .)


state 83

    (46) CONSTANTE -> CTE_C r_new_c_char .

    MULT            reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    DIV             reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    PLUS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    MINUS           reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    RSQ             reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    NOT_EQ          reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    GREATER_EQ      reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    LESS_EQ         reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    GREATER         reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    LESS            reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    COMPAR          reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    AND             reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    OR              reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    RPAREN          reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    EQ              reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    SEMI_COLON      reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)
    COMMA           reduce using rule 46 (CONSTANTE -> CTE_C r_new_c_char .)


state 84

    (47) CONSTANTE -> CTE_S r_new_c_string .

    MULT            reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    DIV             reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    PLUS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    MINUS           reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    RSQ             reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    NOT_EQ          reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    GREATER_EQ      reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    LESS_EQ         reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    GREATER         reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    LESS            reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    COMPAR          reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    AND             reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    OR              reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    RPAREN          reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    EQ              reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    SEMI_COLON      reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)
    COMMA           reduce using rule 47 (CONSTANTE -> CTE_S r_new_c_string .)


state 85

    (2) MAIN -> PRINCIPAL r_flush_mem LPAREN . RPAREN BLOQUE

    RPAREN          shift and go to state 100


state 86

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable . LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION

    LPAREN          shift and go to state 101


state 87

    (81) LLAMADA -> ID r_verify_function r_generate_era . LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub

    LPAREN          shift and go to state 102


state 88

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ . SLEVEL_EXPRESION RSQ
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 103
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 89

    (30) SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .

    RSQ             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 30 (SLEVEL_EXPRESION -> FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX .)


state 90

    (31) SLEVEL_EXPRESION_AUX -> PLUS . r_new_operator SLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 104

state 91

    (32) SLEVEL_EXPRESION_AUX -> MINUS . r_new_operator SLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 105

state 92

    (33) SLEVEL_EXPRESION_AUX -> EMPTY .

    RSQ             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 33 (SLEVEL_EXPRESION_AUX -> EMPTY .)


state 93

    (34) FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .

    PLUS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    MINUS           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RSQ             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    NOT_EQ          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER_EQ      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS_EQ         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    GREATER         reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    LESS            reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMPAR          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 34 (FLEVEL_EXPRESION -> VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX .)


state 94

    (35) FLEVEL_EXPRESION_AUX -> MULT . r_new_operator FLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 106

state 95

    (36) FLEVEL_EXPRESION_AUX -> DIV . r_new_operator FLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 107

state 96

    (37) FLEVEL_EXPRESION_AUX -> EMPTY .

    PLUS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    MINUS           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RSQ             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    NOT_EQ          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER_EQ      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS_EQ         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    GREATER         reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    LESS            reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMPAR          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 37 (FLEVEL_EXPRESION_AUX -> EMPTY .)


state 97

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION . RPAREN r_new_rparen

    RPAREN          shift and go to state 108


state 98

    (18) EXPRESION -> TLEVEL_EXPRESION . r_new_quadruple EXPRESION_AUX
    (102) r_new_quadruple -> .

    COMPAR          reduce using rule 102 (r_new_quadruple -> .)
    AND             reduce using rule 102 (r_new_quadruple -> .)
    OR              reduce using rule 102 (r_new_quadruple -> .)
    RPAREN          reduce using rule 102 (r_new_quadruple -> .)
    EQ              reduce using rule 102 (r_new_quadruple -> .)
    SEMI_COLON      reduce using rule 102 (r_new_quadruple -> .)
    COMMA           reduce using rule 102 (r_new_quadruple -> .)

    r_new_quadruple                shift and go to state 109

state 99

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION . r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (101) r_new_quadruple_tlevel -> .

    NOT_EQ          reduce using rule 101 (r_new_quadruple_tlevel -> .)
    GREATER_EQ      reduce using rule 101 (r_new_quadruple_tlevel -> .)
    LESS_EQ         reduce using rule 101 (r_new_quadruple_tlevel -> .)
    GREATER         reduce using rule 101 (r_new_quadruple_tlevel -> .)
    LESS            reduce using rule 101 (r_new_quadruple_tlevel -> .)
    COMPAR          reduce using rule 101 (r_new_quadruple_tlevel -> .)
    AND             reduce using rule 101 (r_new_quadruple_tlevel -> .)
    OR              reduce using rule 101 (r_new_quadruple_tlevel -> .)
    RPAREN          reduce using rule 101 (r_new_quadruple_tlevel -> .)
    EQ              reduce using rule 101 (r_new_quadruple_tlevel -> .)
    SEMI_COLON      reduce using rule 101 (r_new_quadruple_tlevel -> .)
    COMMA           reduce using rule 101 (r_new_quadruple_tlevel -> .)

    r_new_quadruple_tlevel         shift and go to state 110

state 100

    (2) MAIN -> PRINCIPAL r_flush_mem LPAREN RPAREN . BLOQUE
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 111

state 101

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN . PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (65) PARAMETROS -> . AUX_PARAM
    (66) PARAMETROS -> . EMPTY
    (67) AUX_PARAM -> . INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (68) AUX_PARAM -> . FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (69) AUX_PARAM -> . CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (1) EMPTY -> .

    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    CHAR            shift and go to state 118
    RPAREN          reduce using rule 1 (EMPTY -> .)

    PARAMETROS                     shift and go to state 113
    AUX_PARAM                      shift and go to state 114
    EMPTY                          shift and go to state 115

state 102

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN . r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              reduce using rule 96 (r_new_lparen -> .)
    CTE_I           reduce using rule 96 (r_new_lparen -> .)
    CTE_F           reduce using rule 96 (r_new_lparen -> .)
    CTE_C           reduce using rule 96 (r_new_lparen -> .)
    CTE_S           reduce using rule 96 (r_new_lparen -> .)
    RPAREN          reduce using rule 96 (r_new_lparen -> .)
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 119

state 103

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION . RSQ

    RSQ             shift and go to state 120


state 104

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 121
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 105

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator . SLEVEL_EXPRESION
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    SLEVEL_EXPRESION               shift and go to state 122
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 106

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 123
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 107

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator . FLEVEL_EXPRESION
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    FLEVEL_EXPRESION               shift and go to state 124
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 108

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN . r_new_rparen
    (97) r_new_rparen -> .

    MULT            reduce using rule 97 (r_new_rparen -> .)
    DIV             reduce using rule 97 (r_new_rparen -> .)
    PLUS            reduce using rule 97 (r_new_rparen -> .)
    MINUS           reduce using rule 97 (r_new_rparen -> .)
    RSQ             reduce using rule 97 (r_new_rparen -> .)
    NOT_EQ          reduce using rule 97 (r_new_rparen -> .)
    GREATER_EQ      reduce using rule 97 (r_new_rparen -> .)
    LESS_EQ         reduce using rule 97 (r_new_rparen -> .)
    GREATER         reduce using rule 97 (r_new_rparen -> .)
    LESS            reduce using rule 97 (r_new_rparen -> .)
    COMPAR          reduce using rule 97 (r_new_rparen -> .)
    AND             reduce using rule 97 (r_new_rparen -> .)
    OR              reduce using rule 97 (r_new_rparen -> .)
    RPAREN          reduce using rule 97 (r_new_rparen -> .)
    EQ              reduce using rule 97 (r_new_rparen -> .)
    SEMI_COLON      reduce using rule 97 (r_new_rparen -> .)
    COMMA           reduce using rule 97 (r_new_rparen -> .)

    r_new_rparen                   shift and go to state 125

state 109

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple . EXPRESION_AUX
    (19) EXPRESION_AUX -> . COMPAR r_new_operator EXPRESION
    (20) EXPRESION_AUX -> . AND r_new_operator EXPRESION
    (21) EXPRESION_AUX -> . OR r_new_operator EXPRESION
    (22) EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    COMPAR          shift and go to state 127
    AND             shift and go to state 128
    OR              shift and go to state 129
    RPAREN          reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)

    EXPRESION_AUX                  shift and go to state 126
    EMPTY                          shift and go to state 130

state 110

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel . TLEVEL_EXPRESION_AUX
    (24) TLEVEL_EXPRESION_AUX -> . NOT_EQ r_new_operator TLEVEL_EXPRESION
    (25) TLEVEL_EXPRESION_AUX -> . GREATER_EQ r_new_operator TLEVEL_EXPRESION
    (26) TLEVEL_EXPRESION_AUX -> . LESS_EQ r_new_operator TLEVEL_EXPRESION
    (27) TLEVEL_EXPRESION_AUX -> . GREATER r_new_operator TLEVEL_EXPRESION
    (28) TLEVEL_EXPRESION_AUX -> . LESS r_new_operator TLEVEL_EXPRESION
    (29) TLEVEL_EXPRESION_AUX -> . EMPTY
    (1) EMPTY -> .

    NOT_EQ          shift and go to state 132
    GREATER_EQ      shift and go to state 133
    LESS_EQ         shift and go to state 134
    GREATER         shift and go to state 135
    LESS            shift and go to state 136
    COMPAR          reduce using rule 1 (EMPTY -> .)
    AND             reduce using rule 1 (EMPTY -> .)
    OR              reduce using rule 1 (EMPTY -> .)
    RPAREN          reduce using rule 1 (EMPTY -> .)
    EQ              reduce using rule 1 (EMPTY -> .)
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)
    COMMA           reduce using rule 1 (EMPTY -> .)

    TLEVEL_EXPRESION_AUX           shift and go to state 131
    EMPTY                          shift and go to state 137

state 111

    (2) MAIN -> PRINCIPAL r_flush_mem LPAREN RPAREN BLOQUE .

    $end            reduce using rule 2 (MAIN -> PRINCIPAL r_flush_mem LPAREN RPAREN BLOQUE .)


state 112

    (48) BLOQUE -> LBRACKET . OPCION_BLOQUE RBRACKET
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    OPCION_BLOQUE                  shift and go to state 138
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 113

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS . RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION

    RPAREN          shift and go to state 157


state 114

    (65) PARAMETROS -> AUX_PARAM .

    RPAREN          reduce using rule 65 (PARAMETROS -> AUX_PARAM .)


state 115

    (66) PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 66 (PARAMETROS -> EMPTY .)


state 116

    (67) AUX_PARAM -> INT . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 158

state 117

    (68) AUX_PARAM -> FLOAT . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 159

state 118

    (69) AUX_PARAM -> CHAR . r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (128) r_set_var_type -> .

    ID              reduce using rule 128 (r_set_var_type -> .)

    r_set_var_type                 shift and go to state 160

state 119

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen . TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (82) TIPO_PARAMETROS -> . TIPO_PARAMETROS_AUX
    (83) TIPO_PARAMETROS -> . EMPTY
    (84) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter
    (85) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter COMMA TIPO_PARAMETROS_AUX
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    RPAREN          reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    r_new_lparen                   shift and go to state 65
    TIPO_PARAMETROS                shift and go to state 161
    TIPO_PARAMETROS_AUX            shift and go to state 162
    EMPTY                          shift and go to state 163
    EXPRESION                      shift and go to state 164
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64

state 120

    (17) LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .

    COMMA           reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    SEMI_COLON      reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MULT            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    DIV             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    PLUS            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    MINUS           reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RSQ             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    NOT_EQ          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER_EQ      reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS_EQ         reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    GREATER         reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    LESS            reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    COMPAR          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    AND             reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    OR              reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    RPAREN          reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)
    EQ              reduce using rule 17 (LIST_ID -> ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ .)


state 121

    (31) SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 31 (SLEVEL_EXPRESION_AUX -> PLUS r_new_operator SLEVEL_EXPRESION .)


state 122

    (32) SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .

    RSQ             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    GREATER         reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    LESS            reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMPAR          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    AND             reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    OR              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    RPAREN          reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    EQ              reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)
    COMMA           reduce using rule 32 (SLEVEL_EXPRESION_AUX -> MINUS r_new_operator SLEVEL_EXPRESION .)


state 123

    (35) FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 35 (FLEVEL_EXPRESION_AUX -> MULT r_new_operator FLEVEL_EXPRESION .)


state 124

    (36) FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .

    PLUS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    MINUS           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RSQ             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    NOT_EQ          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER_EQ      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS_EQ         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    GREATER         reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    LESS            reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMPAR          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    AND             reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    OR              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    RPAREN          reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    EQ              reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)
    COMMA           reduce using rule 36 (FLEVEL_EXPRESION_AUX -> DIV r_new_operator FLEVEL_EXPRESION .)


state 125

    (43) VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .

    MULT            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    DIV             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    PLUS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    MINUS           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RSQ             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    NOT_EQ          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER_EQ      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS_EQ         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    GREATER         reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    LESS            reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMPAR          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    AND             reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    OR              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    RPAREN          reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    EQ              reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    SEMI_COLON      reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)
    COMMA           reduce using rule 43 (VALUE_EXPRESION -> r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen .)


state 126

    (18) EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .

    RPAREN          reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    EQ              reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)
    COMMA           reduce using rule 18 (EXPRESION -> TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX .)


state 127

    (19) EXPRESION_AUX -> COMPAR . r_new_operator EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 165

state 128

    (20) EXPRESION_AUX -> AND . r_new_operator EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 166

state 129

    (21) EXPRESION_AUX -> OR . r_new_operator EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 167

state 130

    (22) EXPRESION_AUX -> EMPTY .

    RPAREN          reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 22 (EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 22 (EXPRESION_AUX -> EMPTY .)


state 131

    (23) TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .

    COMPAR          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    AND             reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    OR              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    RPAREN          reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    EQ              reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    SEMI_COLON      reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)
    COMMA           reduce using rule 23 (TLEVEL_EXPRESION -> SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX .)


state 132

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ . r_new_operator TLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 168

state 133

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ . r_new_operator TLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 169

state 134

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ . r_new_operator TLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 170

state 135

    (27) TLEVEL_EXPRESION_AUX -> GREATER . r_new_operator TLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 171

state 136

    (28) TLEVEL_EXPRESION_AUX -> LESS . r_new_operator TLEVEL_EXPRESION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 172

state 137

    (29) TLEVEL_EXPRESION_AUX -> EMPTY .

    COMPAR          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    AND             reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    OR              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    RPAREN          reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    EQ              reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    SEMI_COLON      reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)
    COMMA           reduce using rule 29 (TLEVEL_EXPRESION_AUX -> EMPTY .)


state 138

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE . RBRACKET

    RBRACKET        shift and go to state 173


state 139

    (49) OPCION_BLOQUE -> LECTURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 174


state 140

    (50) OPCION_BLOQUE -> ESCRITURA . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 175


state 141

    (51) OPCION_BLOQUE -> LLAMADA . SEMI_COLON OPCION_BLOQUE
    (42) VALUE_EXPRESION -> LLAMADA .

  ! shift/reduce conflict for SEMI_COLON resolved as shift
    SEMI_COLON      shift and go to state 176
    MULT            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    DIV             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    PLUS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    MINUS           reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    NOT_EQ          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER_EQ      reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS_EQ         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    GREATER         reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    LESS            reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    COMPAR          reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    AND             reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    OR              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)
    EQ              reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .)

  ! SEMI_COLON      [ reduce using rule 42 (VALUE_EXPRESION -> LLAMADA .) ]


state 142

    (52) OPCION_BLOQUE -> IF_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    IF_STMT                        shift and go to state 142
    OPCION_BLOQUE                  shift and go to state 177
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 143

    (53) OPCION_BLOQUE -> IF_ELSE_STMT . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    IF_ELSE_STMT                   shift and go to state 143
    OPCION_BLOQUE                  shift and go to state 178
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 144

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    MIENTRAS_CICLO                 shift and go to state 144
    OPCION_BLOQUE                  shift and go to state 179
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 145

    (55) OPCION_BLOQUE -> DESDE_CICLO . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    DESDE_CICLO                    shift and go to state 145
    OPCION_BLOQUE                  shift and go to state 180
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 146

    (56) OPCION_BLOQUE -> ASIGNACION . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 181


state 147

    (57) OPCION_BLOQUE -> RETURN_STM . SEMI_COLON OPCION_BLOQUE

    SEMI_COLON      shift and go to state 182


state 148

    (58) OPCION_BLOQUE -> EMPTY .

    RBRACKET        reduce using rule 58 (OPCION_BLOQUE -> EMPTY .)


state 149

    (75) LECTURA -> LEE . LPAREN ID r_new_id r_new_read RPAREN

    LPAREN          shift and go to state 183


state 150

    (81) LLAMADA -> ID . r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (38) VALUE_EXPRESION -> ID . r_new_id
    (39) VALUE_EXPRESION -> ID . DET
    (16) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> ID . r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (122) r_verify_function -> .
    (91) r_new_id -> .
    (129) r_new_variable -> .

    DET             shift and go to state 74
    LPAREN          reduce using rule 122 (r_verify_function -> .)
    MULT            reduce using rule 91 (r_new_id -> .)
    DIV             reduce using rule 91 (r_new_id -> .)
    PLUS            reduce using rule 91 (r_new_id -> .)
    MINUS           reduce using rule 91 (r_new_id -> .)
    NOT_EQ          reduce using rule 91 (r_new_id -> .)
    GREATER_EQ      reduce using rule 91 (r_new_id -> .)
    LESS_EQ         reduce using rule 91 (r_new_id -> .)
    GREATER         reduce using rule 91 (r_new_id -> .)
    LESS            reduce using rule 91 (r_new_id -> .)
    COMPAR          reduce using rule 91 (r_new_id -> .)
    AND             reduce using rule 91 (r_new_id -> .)
    OR              reduce using rule 91 (r_new_id -> .)
    EQ              reduce using rule 91 (r_new_id -> .)
    SEMI_COLON      reduce using rule 91 (r_new_id -> .)
    LSQ             reduce using rule 129 (r_new_variable -> .)

    r_verify_function              shift and go to state 76
    r_new_id                       shift and go to state 73
    r_new_variable                 shift and go to state 75

state 151

    (76) ESCRITURA -> ESCRIBE . LPAREN PARAMETRO_ESCRITURA RPAREN

    LPAREN          shift and go to state 184


state 152

    (86) IF_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI . LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    LPAREN          shift and go to state 185


state 153

    (88) ASIGNACION -> EXPRESION . ASIGNACION_AUX r_new_equal
    (89) ASIGNACION_AUX -> . EQ r_new_operator ASIGNACION
    (90) ASIGNACION_AUX -> . EMPTY
    (1) EMPTY -> .

    EQ              shift and go to state 187
    SEMI_COLON      reduce using rule 1 (EMPTY -> .)

    ASIGNACION_AUX                 shift and go to state 186
    EMPTY                          shift and go to state 188

state 154

    (74) MIENTRAS_CICLO -> MIENTRAS . r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (108) r_new_migajita -> .

    LPAREN          reduce using rule 108 (r_new_migajita -> .)

    r_new_migajita                 shift and go to state 189

state 155

    (73) DESDE_CICLO -> DESDE . ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    ID              shift and go to state 190


state 156

    (72) RETURN_STM -> RETURN . LPAREN EXPRESION RPAREN r_generate_return

    LPAREN          shift and go to state 191


state 157

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN . VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (4) VARS -> . VAR TIPO
    (5) VARS -> . EMPTY
    (1) EMPTY -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 1 (EMPTY -> .)

    VARS                           shift and go to state 192
    EMPTY                          shift and go to state 8

state 158

    (67) AUX_PARAM -> INT r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (115) r_insert_type -> .

    ID              reduce using rule 115 (r_insert_type -> .)

    r_insert_type                  shift and go to state 193

state 159

    (68) AUX_PARAM -> FLOAT r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (115) r_insert_type -> .

    ID              reduce using rule 115 (r_insert_type -> .)

    r_insert_type                  shift and go to state 194

state 160

    (69) AUX_PARAM -> CHAR r_set_var_type . r_insert_type ID r_new_variable NEXT_PARAM
    (115) r_insert_type -> .

    ID              reduce using rule 115 (r_insert_type -> .)

    r_insert_type                  shift and go to state 195

state 161

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS . r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (97) r_new_rparen -> .

    RPAREN          reduce using rule 97 (r_new_rparen -> .)

    r_new_rparen                   shift and go to state 196

state 162

    (82) TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX .

    RPAREN          reduce using rule 82 (TIPO_PARAMETROS -> TIPO_PARAMETROS_AUX .)


state 163

    (83) TIPO_PARAMETROS -> EMPTY .

    RPAREN          reduce using rule 83 (TIPO_PARAMETROS -> EMPTY .)


state 164

    (84) TIPO_PARAMETROS_AUX -> EXPRESION . r_verify_parameter
    (85) TIPO_PARAMETROS_AUX -> EXPRESION . r_verify_parameter COMMA TIPO_PARAMETROS_AUX
    (124) r_verify_parameter -> .

    COMMA           reduce using rule 124 (r_verify_parameter -> .)
    RPAREN          reduce using rule 124 (r_verify_parameter -> .)

    r_verify_parameter             shift and go to state 197

state 165

    (19) EXPRESION_AUX -> COMPAR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 198
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 166

    (20) EXPRESION_AUX -> AND r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 199
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 167

    (21) EXPRESION_AUX -> OR r_new_operator . EXPRESION
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 200
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 168

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 201
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 169

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 202
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 170

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 203
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 171

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 204
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 172

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator . TLEVEL_EXPRESION
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    TLEVEL_EXPRESION               shift and go to state 205
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 173

    (48) BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .

    $end            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    FUNCION         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    PRINCIPAL       reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SINO            reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LEE             reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ESCRIBE         reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    ID              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    SI              reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    MIENTRAS        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    DESDE           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RETURN          reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_I           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_F           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_C           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    CTE_S           reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    LPAREN          reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)
    RBRACKET        reduce using rule 48 (BLOQUE -> LBRACKET OPCION_BLOQUE RBRACKET .)


state 174

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    LECTURA                        shift and go to state 139
    OPCION_BLOQUE                  shift and go to state 206
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 175

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    ESCRITURA                      shift and go to state 140
    OPCION_BLOQUE                  shift and go to state 207
    LECTURA                        shift and go to state 139
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 176

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    LLAMADA                        shift and go to state 141
    OPCION_BLOQUE                  shift and go to state 208
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 177

    (52) OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 52 (OPCION_BLOQUE -> IF_STMT OPCION_BLOQUE .)


state 178

    (53) OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .

    RBRACKET        reduce using rule 53 (OPCION_BLOQUE -> IF_ELSE_STMT OPCION_BLOQUE .)


state 179

    (54) OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 54 (OPCION_BLOQUE -> MIENTRAS_CICLO OPCION_BLOQUE .)


state 180

    (55) OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .

    RBRACKET        reduce using rule 55 (OPCION_BLOQUE -> DESDE_CICLO OPCION_BLOQUE .)


state 181

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 146
    OPCION_BLOQUE                  shift and go to state 209
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    RETURN_STM                     shift and go to state 147
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 182

    (57) OPCION_BLOQUE -> RETURN_STM SEMI_COLON . OPCION_BLOQUE
    (49) OPCION_BLOQUE -> . LECTURA SEMI_COLON OPCION_BLOQUE
    (50) OPCION_BLOQUE -> . ESCRITURA SEMI_COLON OPCION_BLOQUE
    (51) OPCION_BLOQUE -> . LLAMADA SEMI_COLON OPCION_BLOQUE
    (52) OPCION_BLOQUE -> . IF_STMT OPCION_BLOQUE
    (53) OPCION_BLOQUE -> . IF_ELSE_STMT OPCION_BLOQUE
    (54) OPCION_BLOQUE -> . MIENTRAS_CICLO OPCION_BLOQUE
    (55) OPCION_BLOQUE -> . DESDE_CICLO OPCION_BLOQUE
    (56) OPCION_BLOQUE -> . ASIGNACION SEMI_COLON OPCION_BLOQUE
    (57) OPCION_BLOQUE -> . RETURN_STM SEMI_COLON OPCION_BLOQUE
    (58) OPCION_BLOQUE -> . EMPTY
    (75) LECTURA -> . LEE LPAREN ID r_new_id r_new_read RPAREN
    (76) ESCRITURA -> . ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (86) IF_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> . SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (74) MIENTRAS_CICLO -> . MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (73) DESDE_CICLO -> . DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (72) RETURN_STM -> . RETURN LPAREN EXPRESION RPAREN r_generate_return
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (96) r_new_lparen -> .

    LEE             shift and go to state 149
    ESCRIBE         shift and go to state 151
    ID              shift and go to state 150
    SI              shift and go to state 152
    MIENTRAS        shift and go to state 154
    DESDE           shift and go to state 155
    RETURN          shift and go to state 156
    RBRACKET        reduce using rule 1 (EMPTY -> .)
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    RETURN_STM                     shift and go to state 147
    OPCION_BLOQUE                  shift and go to state 210
    LECTURA                        shift and go to state 139
    ESCRITURA                      shift and go to state 140
    LLAMADA                        shift and go to state 141
    IF_STMT                        shift and go to state 142
    IF_ELSE_STMT                   shift and go to state 143
    MIENTRAS_CICLO                 shift and go to state 144
    DESDE_CICLO                    shift and go to state 145
    ASIGNACION                     shift and go to state 146
    EMPTY                          shift and go to state 148
    r_new_lparen                   shift and go to state 65
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63

state 183

    (75) LECTURA -> LEE LPAREN . ID r_new_id r_new_read RPAREN

    ID              shift and go to state 211


state 184

    (76) ESCRITURA -> ESCRIBE LPAREN . PARAMETRO_ESCRITURA RPAREN
    (77) PARAMETRO_ESCRITURA -> . PARAMETRO_ESCRITURA_AUX
    (78) PARAMETRO_ESCRITURA -> . EMPTY
    (79) PARAMETRO_ESCRITURA_AUX -> . EXPRESION r_new_write
    (80) PARAMETRO_ESCRITURA_AUX -> . EXPRESION r_new_write COMMA PARAMETRO_ESCRITURA_AUX
    (1) EMPTY -> .
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    RPAREN          reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    PARAMETRO_ESCRITURA            shift and go to state 212
    PARAMETRO_ESCRITURA_AUX        shift and go to state 213
    EMPTY                          shift and go to state 214
    EXPRESION                      shift and go to state 215
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 185

    (86) IF_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN . EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 216
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 186

    (88) ASIGNACION -> EXPRESION ASIGNACION_AUX . r_new_equal
    (103) r_new_equal -> .

    SEMI_COLON      reduce using rule 103 (r_new_equal -> .)

    r_new_equal                    shift and go to state 217

state 187

    (89) ASIGNACION_AUX -> EQ . r_new_operator ASIGNACION
    (98) r_new_operator -> .

    ID              reduce using rule 98 (r_new_operator -> .)
    CTE_I           reduce using rule 98 (r_new_operator -> .)
    CTE_F           reduce using rule 98 (r_new_operator -> .)
    CTE_C           reduce using rule 98 (r_new_operator -> .)
    CTE_S           reduce using rule 98 (r_new_operator -> .)
    LPAREN          reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 218

state 188

    (90) ASIGNACION_AUX -> EMPTY .

    SEMI_COLON      reduce using rule 90 (ASIGNACION_AUX -> EMPTY .)


state 189

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita . LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    LPAREN          shift and go to state 219


state 190

    (73) DESDE_CICLO -> DESDE ID . r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (109) r_new_id_for -> .

    EQ              reduce using rule 109 (r_new_id_for -> .)

    r_new_id_for                   shift and go to state 220

state 191

    (72) RETURN_STM -> RETURN LPAREN . EXPRESION RPAREN r_generate_return
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 221
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 192

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS . r_insert_parameters BLOQUE r_end_function FUNCTION
    (119) r_insert_parameters -> .

    LBRACKET        reduce using rule 119 (r_insert_parameters -> .)

    r_insert_parameters            shift and go to state 222

state 193

    (67) AUX_PARAM -> INT r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 223


state 194

    (68) AUX_PARAM -> FLOAT r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 224


state 195

    (69) AUX_PARAM -> CHAR r_set_var_type r_insert_type . ID r_new_variable NEXT_PARAM

    ID              shift and go to state 225


state 196

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen . RPAREN r_verify_last_parameter r_generate_gosub

    RPAREN          shift and go to state 226


state 197

    (84) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter .
    (85) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter . COMMA TIPO_PARAMETROS_AUX

    RPAREN          reduce using rule 84 (TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter .)
    COMMA           shift and go to state 227


state 198

    (19) EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .

    RPAREN          reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    EQ              reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)
    COMMA           reduce using rule 19 (EXPRESION_AUX -> COMPAR r_new_operator EXPRESION .)


state 199

    (20) EXPRESION_AUX -> AND r_new_operator EXPRESION .

    RPAREN          reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    EQ              reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)
    COMMA           reduce using rule 20 (EXPRESION_AUX -> AND r_new_operator EXPRESION .)


state 200

    (21) EXPRESION_AUX -> OR r_new_operator EXPRESION .

    RPAREN          reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    EQ              reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    SEMI_COLON      reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)
    COMMA           reduce using rule 21 (EXPRESION_AUX -> OR r_new_operator EXPRESION .)


state 201

    (24) TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 24 (TLEVEL_EXPRESION_AUX -> NOT_EQ r_new_operator TLEVEL_EXPRESION .)


state 202

    (25) TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 25 (TLEVEL_EXPRESION_AUX -> GREATER_EQ r_new_operator TLEVEL_EXPRESION .)


state 203

    (26) TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 26 (TLEVEL_EXPRESION_AUX -> LESS_EQ r_new_operator TLEVEL_EXPRESION .)


state 204

    (27) TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 27 (TLEVEL_EXPRESION_AUX -> GREATER r_new_operator TLEVEL_EXPRESION .)


state 205

    (28) TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .

    COMPAR          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    AND             reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    OR              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    RPAREN          reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    EQ              reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    SEMI_COLON      reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)
    COMMA           reduce using rule 28 (TLEVEL_EXPRESION_AUX -> LESS r_new_operator TLEVEL_EXPRESION .)


state 206

    (49) OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 49 (OPCION_BLOQUE -> LECTURA SEMI_COLON OPCION_BLOQUE .)


state 207

    (50) OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 50 (OPCION_BLOQUE -> ESCRITURA SEMI_COLON OPCION_BLOQUE .)


state 208

    (51) OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 51 (OPCION_BLOQUE -> LLAMADA SEMI_COLON OPCION_BLOQUE .)


state 209

    (56) OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 56 (OPCION_BLOQUE -> ASIGNACION SEMI_COLON OPCION_BLOQUE .)


state 210

    (57) OPCION_BLOQUE -> RETURN_STM SEMI_COLON OPCION_BLOQUE .

    RBRACKET        reduce using rule 57 (OPCION_BLOQUE -> RETURN_STM SEMI_COLON OPCION_BLOQUE .)


state 211

    (75) LECTURA -> LEE LPAREN ID . r_new_id r_new_read RPAREN
    (91) r_new_id -> .

    RPAREN          reduce using rule 91 (r_new_id -> .)

    r_new_id                       shift and go to state 228

state 212

    (76) ESCRITURA -> ESCRIBE LPAREN PARAMETRO_ESCRITURA . RPAREN

    RPAREN          shift and go to state 229


state 213

    (77) PARAMETRO_ESCRITURA -> PARAMETRO_ESCRITURA_AUX .

    RPAREN          reduce using rule 77 (PARAMETRO_ESCRITURA -> PARAMETRO_ESCRITURA_AUX .)


state 214

    (78) PARAMETRO_ESCRITURA -> EMPTY .

    RPAREN          reduce using rule 78 (PARAMETRO_ESCRITURA -> EMPTY .)


state 215

    (79) PARAMETRO_ESCRITURA_AUX -> EXPRESION . r_new_write
    (80) PARAMETRO_ESCRITURA_AUX -> EXPRESION . r_new_write COMMA PARAMETRO_ESCRITURA_AUX
    (135) r_new_write -> .

    COMMA           reduce using rule 135 (r_new_write -> .)
    RPAREN          reduce using rule 135 (r_new_write -> .)

    r_new_write                    shift and go to state 230

state 216

    (86) IF_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION . RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    RPAREN          shift and go to state 231


state 217

    (88) ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .

    SEMI_COLON      reduce using rule 88 (ASIGNACION -> EXPRESION ASIGNACION_AUX r_new_equal .)


state 218

    (89) ASIGNACION_AUX -> EQ r_new_operator . ASIGNACION
    (88) ASIGNACION -> . EXPRESION ASIGNACION_AUX r_new_equal
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    ASIGNACION                     shift and go to state 232
    EXPRESION                      shift and go to state 153
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 219

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN . EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 233
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 220

    (73) DESDE_CICLO -> DESDE ID r_new_id_for . EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    EQ              shift and go to state 234


state 221

    (72) RETURN_STM -> RETURN LPAREN EXPRESION . RPAREN r_generate_return

    RPAREN          shift and go to state 235


state 222

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters . BLOQUE r_end_function FUNCTION
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 236

state 223

    (67) AUX_PARAM -> INT r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (129) r_new_variable -> .

    COMMA           reduce using rule 129 (r_new_variable -> .)
    RPAREN          reduce using rule 129 (r_new_variable -> .)

    r_new_variable                 shift and go to state 237

state 224

    (68) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (129) r_new_variable -> .

    COMMA           reduce using rule 129 (r_new_variable -> .)
    RPAREN          reduce using rule 129 (r_new_variable -> .)

    r_new_variable                 shift and go to state 238

state 225

    (69) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID . r_new_variable NEXT_PARAM
    (129) r_new_variable -> .

    COMMA           reduce using rule 129 (r_new_variable -> .)
    RPAREN          reduce using rule 129 (r_new_variable -> .)

    r_new_variable                 shift and go to state 239

state 226

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN . r_verify_last_parameter r_generate_gosub
    (125) r_verify_last_parameter -> .

    MULT            reduce using rule 125 (r_verify_last_parameter -> .)
    DIV             reduce using rule 125 (r_verify_last_parameter -> .)
    PLUS            reduce using rule 125 (r_verify_last_parameter -> .)
    MINUS           reduce using rule 125 (r_verify_last_parameter -> .)
    RSQ             reduce using rule 125 (r_verify_last_parameter -> .)
    NOT_EQ          reduce using rule 125 (r_verify_last_parameter -> .)
    GREATER_EQ      reduce using rule 125 (r_verify_last_parameter -> .)
    LESS_EQ         reduce using rule 125 (r_verify_last_parameter -> .)
    GREATER         reduce using rule 125 (r_verify_last_parameter -> .)
    LESS            reduce using rule 125 (r_verify_last_parameter -> .)
    COMPAR          reduce using rule 125 (r_verify_last_parameter -> .)
    AND             reduce using rule 125 (r_verify_last_parameter -> .)
    OR              reduce using rule 125 (r_verify_last_parameter -> .)
    RPAREN          reduce using rule 125 (r_verify_last_parameter -> .)
    EQ              reduce using rule 125 (r_verify_last_parameter -> .)
    SEMI_COLON      reduce using rule 125 (r_verify_last_parameter -> .)
    COMMA           reduce using rule 125 (r_verify_last_parameter -> .)

    r_verify_last_parameter        shift and go to state 240

state 227

    (85) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA . TIPO_PARAMETROS_AUX
    (84) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter
    (85) TIPO_PARAMETROS_AUX -> . EXPRESION r_verify_parameter COMMA TIPO_PARAMETROS_AUX
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 164
    TIPO_PARAMETROS_AUX            shift and go to state 241
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 228

    (75) LECTURA -> LEE LPAREN ID r_new_id . r_new_read RPAREN
    (134) r_new_read -> .

    RPAREN          reduce using rule 134 (r_new_read -> .)

    r_new_read                     shift and go to state 242

state 229

    (76) ESCRITURA -> ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN .

    SEMI_COLON      reduce using rule 76 (ESCRITURA -> ESCRIBE LPAREN PARAMETRO_ESCRITURA RPAREN .)


state 230

    (79) PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write .
    (80) PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write . COMMA PARAMETRO_ESCRITURA_AUX

    RPAREN          reduce using rule 79 (PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write .)
    COMMA           shift and go to state 243


state 231

    (86) IF_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN . r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (106) r_new_gotof -> .

    ENTONCES        reduce using rule 106 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 244

state 232

    (89) ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .

    SEMI_COLON      reduce using rule 89 (ASIGNACION_AUX -> EQ r_new_operator ASIGNACION .)


state 233

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION . RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof

    RPAREN          shift and go to state 245


state 234

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ . r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (98) r_new_operator -> .

    CTE_I           reduce using rule 98 (r_new_operator -> .)

    r_new_operator                 shift and go to state 246

state 235

    (72) RETURN_STM -> RETURN LPAREN EXPRESION RPAREN . r_generate_return
    (127) r_generate_return -> .

    SEMI_COLON      reduce using rule 127 (r_generate_return -> .)

    r_generate_return              shift and go to state 247

state 236

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE . r_end_function FUNCTION
    (120) r_end_function -> .

    FUNCION         reduce using rule 120 (r_end_function -> .)
    PRINCIPAL       reduce using rule 120 (r_end_function -> .)

    r_end_function                 shift and go to state 248

state 237

    (67) AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (70) NEXT_PARAM -> . COMMA AUX_PARAM
    (71) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 249
    EMPTY                          shift and go to state 251

state 238

    (68) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (70) NEXT_PARAM -> . COMMA AUX_PARAM
    (71) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 252
    EMPTY                          shift and go to state 251

state 239

    (69) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable . NEXT_PARAM
    (70) NEXT_PARAM -> . COMMA AUX_PARAM
    (71) NEXT_PARAM -> . EMPTY
    (1) EMPTY -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 1 (EMPTY -> .)

    NEXT_PARAM                     shift and go to state 253
    EMPTY                          shift and go to state 251

state 240

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter . r_generate_gosub
    (126) r_generate_gosub -> .

    MULT            reduce using rule 126 (r_generate_gosub -> .)
    DIV             reduce using rule 126 (r_generate_gosub -> .)
    PLUS            reduce using rule 126 (r_generate_gosub -> .)
    MINUS           reduce using rule 126 (r_generate_gosub -> .)
    RSQ             reduce using rule 126 (r_generate_gosub -> .)
    NOT_EQ          reduce using rule 126 (r_generate_gosub -> .)
    GREATER_EQ      reduce using rule 126 (r_generate_gosub -> .)
    LESS_EQ         reduce using rule 126 (r_generate_gosub -> .)
    GREATER         reduce using rule 126 (r_generate_gosub -> .)
    LESS            reduce using rule 126 (r_generate_gosub -> .)
    COMPAR          reduce using rule 126 (r_generate_gosub -> .)
    AND             reduce using rule 126 (r_generate_gosub -> .)
    OR              reduce using rule 126 (r_generate_gosub -> .)
    RPAREN          reduce using rule 126 (r_generate_gosub -> .)
    EQ              reduce using rule 126 (r_generate_gosub -> .)
    SEMI_COLON      reduce using rule 126 (r_generate_gosub -> .)
    COMMA           reduce using rule 126 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 254

state 241

    (85) TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA TIPO_PARAMETROS_AUX .

    RPAREN          reduce using rule 85 (TIPO_PARAMETROS_AUX -> EXPRESION r_verify_parameter COMMA TIPO_PARAMETROS_AUX .)


state 242

    (75) LECTURA -> LEE LPAREN ID r_new_id r_new_read . RPAREN

    RPAREN          shift and go to state 255


state 243

    (80) PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write COMMA . PARAMETRO_ESCRITURA_AUX
    (79) PARAMETRO_ESCRITURA_AUX -> . EXPRESION r_new_write
    (80) PARAMETRO_ESCRITURA_AUX -> . EXPRESION r_new_write COMMA PARAMETRO_ESCRITURA_AUX
    (18) EXPRESION -> . TLEVEL_EXPRESION r_new_quadruple EXPRESION_AUX
    (23) TLEVEL_EXPRESION -> . SLEVEL_EXPRESION r_new_quadruple_tlevel TLEVEL_EXPRESION_AUX
    (30) SLEVEL_EXPRESION -> . FLEVEL_EXPRESION r_new_quadruple_slevel SLEVEL_EXPRESION_AUX
    (34) FLEVEL_EXPRESION -> . VALUE_EXPRESION r_new_quadruple_flevel FLEVEL_EXPRESION_AUX
    (38) VALUE_EXPRESION -> . ID r_new_id
    (39) VALUE_EXPRESION -> . ID DET
    (40) VALUE_EXPRESION -> . LIST_ID
    (41) VALUE_EXPRESION -> . CONSTANTE
    (42) VALUE_EXPRESION -> . LLAMADA
    (43) VALUE_EXPRESION -> . r_new_lparen LPAREN EXPRESION RPAREN r_new_rparen
    (16) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ
    (17) LIST_ID -> . ID r_new_variable LSQ SLEVEL_EXPRESION RSQ LSQ SLEVEL_EXPRESION RSQ
    (44) CONSTANTE -> . CTE_I r_new_c_int
    (45) CONSTANTE -> . CTE_F r_new_c_float
    (46) CONSTANTE -> . CTE_C r_new_c_char
    (47) CONSTANTE -> . CTE_S r_new_c_string
    (81) LLAMADA -> . ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub
    (96) r_new_lparen -> .

    ID              shift and go to state 58
    CTE_I           shift and go to state 66
    CTE_F           shift and go to state 67
    CTE_C           shift and go to state 68
    CTE_S           shift and go to state 69
    LPAREN          reduce using rule 96 (r_new_lparen -> .)

    EXPRESION                      shift and go to state 215
    PARAMETRO_ESCRITURA_AUX        shift and go to state 256
    TLEVEL_EXPRESION               shift and go to state 98
    SLEVEL_EXPRESION               shift and go to state 99
    FLEVEL_EXPRESION               shift and go to state 60
    VALUE_EXPRESION                shift and go to state 61
    LIST_ID                        shift and go to state 62
    CONSTANTE                      shift and go to state 63
    LLAMADA                        shift and go to state 64
    r_new_lparen                   shift and go to state 65

state 244

    (86) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof . ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto

    ENTONCES        shift and go to state 257


state 245

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN . r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof
    (106) r_new_gotof -> .

    HAZ             reduce using rule 106 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 258

state 246

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator . CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    CTE_I           shift and go to state 259


state 247

    (72) RETURN_STM -> RETURN LPAREN EXPRESION RPAREN r_generate_return .

    SEMI_COLON      reduce using rule 72 (RETURN_STM -> RETURN LPAREN EXPRESION RPAREN r_generate_return .)


state 248

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function . FUNCTION
    (59) FUNCTION -> . r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION
    (60) FUNCTION -> . EMPTY
    (114) r_new_function -> .
    (1) EMPTY -> .

    FUNCION         reduce using rule 114 (r_new_function -> .)
    PRINCIPAL       reduce using rule 1 (EMPTY -> .)

    r_new_function                 shift and go to state 16
    FUNCTION                       shift and go to state 260
    EMPTY                          shift and go to state 17

state 249

    (67) AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 67 (AUX_PARAM -> INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 250

    (70) NEXT_PARAM -> COMMA . AUX_PARAM
    (67) AUX_PARAM -> . INT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (68) AUX_PARAM -> . FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM
    (69) AUX_PARAM -> . CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM

    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    CHAR            shift and go to state 118

    AUX_PARAM                      shift and go to state 261

state 251

    (71) NEXT_PARAM -> EMPTY .

    RPAREN          reduce using rule 71 (NEXT_PARAM -> EMPTY .)


state 252

    (68) AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 68 (AUX_PARAM -> FLOAT r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 253

    (69) AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .

    RPAREN          reduce using rule 69 (AUX_PARAM -> CHAR r_set_var_type r_insert_type ID r_new_variable NEXT_PARAM .)


state 254

    (81) LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .

    MULT            reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    DIV             reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    PLUS            reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    MINUS           reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    RSQ             reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    NOT_EQ          reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    GREATER_EQ      reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    LESS_EQ         reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    GREATER         reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    LESS            reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    COMPAR          reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    AND             reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    OR              reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    RPAREN          reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    EQ              reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    SEMI_COLON      reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)
    COMMA           reduce using rule 81 (LLAMADA -> ID r_verify_function r_generate_era LPAREN r_new_lparen TIPO_PARAMETROS r_new_rparen RPAREN r_verify_last_parameter r_generate_gosub .)


state 255

    (75) LECTURA -> LEE LPAREN ID r_new_id r_new_read RPAREN .

    SEMI_COLON      reduce using rule 75 (LECTURA -> LEE LPAREN ID r_new_id r_new_read RPAREN .)


state 256

    (80) PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write COMMA PARAMETRO_ESCRITURA_AUX .

    RPAREN          reduce using rule 80 (PARAMETRO_ESCRITURA_AUX -> EXPRESION r_new_write COMMA PARAMETRO_ESCRITURA_AUX .)


state 257

    (86) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES . BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 262

state 258

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof . HAZ BLOQUE r_new_goto r_complete_gotof

    HAZ             shift and go to state 263


state 259

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I . r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (92) r_new_c_int -> .

    HASTA           reduce using rule 92 (r_new_c_int -> .)

    r_new_c_int                    shift and go to state 264

state 260

    (59) FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION .

    PRINCIPAL       reduce using rule 59 (FUNCTION -> r_new_function FUNCION TIPO_FUNC r_clear_mem ID r_set_fun_name r_new_vartable LPAREN PARAMETROS RPAREN VARS r_insert_parameters BLOQUE r_end_function FUNCTION .)


state 261

    (70) NEXT_PARAM -> COMMA AUX_PARAM .

    RPAREN          reduce using rule 70 (NEXT_PARAM -> COMMA AUX_PARAM .)


state 262

    (86) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_complete_gotof
    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE . r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto
    (107) r_complete_gotof -> .
    (104) r_new_goto -> .

    LEE             reduce using rule 107 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 107 (r_complete_gotof -> .)
    ID              reduce using rule 107 (r_complete_gotof -> .)
    SI              reduce using rule 107 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 107 (r_complete_gotof -> .)
    DESDE           reduce using rule 107 (r_complete_gotof -> .)
    RETURN          reduce using rule 107 (r_complete_gotof -> .)
    CTE_I           reduce using rule 107 (r_complete_gotof -> .)
    CTE_F           reduce using rule 107 (r_complete_gotof -> .)
    CTE_C           reduce using rule 107 (r_complete_gotof -> .)
    CTE_S           reduce using rule 107 (r_complete_gotof -> .)
    LPAREN          reduce using rule 107 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 107 (r_complete_gotof -> .)
    SINO            reduce using rule 104 (r_new_goto -> .)

    r_complete_gotof               shift and go to state 265
    r_new_goto                     shift and go to state 266

state 263

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ . BLOQUE r_new_goto r_complete_gotof
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 267

state 264

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int . r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (103) r_new_equal -> .

    HASTA           reduce using rule 103 (r_new_equal -> .)

    r_new_equal                    shift and go to state 268

state 265

    (86) IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .

    LEE             reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ESCRIBE         reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    ID              reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    SI              reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    MIENTRAS        reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    DESDE           reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    RETURN          reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_I           reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_F           reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_C           reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    CTE_S           reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    LPAREN          reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)
    RBRACKET        reduce using rule 86 (IF_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_complete_gotof .)


state 266

    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto . r_complete_gotof SINO BLOQUE r_complete_goto
    (107) r_complete_gotof -> .

    SINO            reduce using rule 107 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 269

state 267

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE . r_new_goto r_complete_gotof
    (104) r_new_goto -> .

    LEE             reduce using rule 104 (r_new_goto -> .)
    ESCRIBE         reduce using rule 104 (r_new_goto -> .)
    ID              reduce using rule 104 (r_new_goto -> .)
    SI              reduce using rule 104 (r_new_goto -> .)
    MIENTRAS        reduce using rule 104 (r_new_goto -> .)
    DESDE           reduce using rule 104 (r_new_goto -> .)
    RETURN          reduce using rule 104 (r_new_goto -> .)
    CTE_I           reduce using rule 104 (r_new_goto -> .)
    CTE_F           reduce using rule 104 (r_new_goto -> .)
    CTE_C           reduce using rule 104 (r_new_goto -> .)
    CTE_S           reduce using rule 104 (r_new_goto -> .)
    LPAREN          reduce using rule 104 (r_new_goto -> .)
    RBRACKET        reduce using rule 104 (r_new_goto -> .)

    r_new_goto                     shift and go to state 270

state 268

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal . HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    HASTA           shift and go to state 271


state 269

    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof . SINO BLOQUE r_complete_goto

    SINO            shift and go to state 272


state 270

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto . r_complete_gotof
    (107) r_complete_gotof -> .

    LEE             reduce using rule 107 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 107 (r_complete_gotof -> .)
    ID              reduce using rule 107 (r_complete_gotof -> .)
    SI              reduce using rule 107 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 107 (r_complete_gotof -> .)
    DESDE           reduce using rule 107 (r_complete_gotof -> .)
    RETURN          reduce using rule 107 (r_complete_gotof -> .)
    CTE_I           reduce using rule 107 (r_complete_gotof -> .)
    CTE_F           reduce using rule 107 (r_complete_gotof -> .)
    CTE_C           reduce using rule 107 (r_complete_gotof -> .)
    CTE_S           reduce using rule 107 (r_complete_gotof -> .)
    LPAREN          reduce using rule 107 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 107 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 273

state 271

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA . CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    CTE_I           shift and go to state 274


state 272

    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO . BLOQUE r_complete_goto
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 275

state 273

    (74) MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .

    LEE             reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ESCRIBE         reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    ID              reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    SI              reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    MIENTRAS        reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    DESDE           reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    RETURN          reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_I           reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_F           reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_C           reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    CTE_S           reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    LPAREN          reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)
    RBRACKET        reduce using rule 74 (MIENTRAS_CICLO -> MIENTRAS r_new_migajita LPAREN EXPRESION RPAREN r_new_gotof HAZ BLOQUE r_new_goto r_complete_gotof .)


state 274

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I . r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (92) r_new_c_int -> .

    HACER           reduce using rule 92 (r_new_c_int -> .)

    r_new_c_int                    shift and go to state 276

state 275

    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE . r_complete_goto
    (105) r_complete_goto -> .

    LEE             reduce using rule 105 (r_complete_goto -> .)
    ESCRIBE         reduce using rule 105 (r_complete_goto -> .)
    ID              reduce using rule 105 (r_complete_goto -> .)
    SI              reduce using rule 105 (r_complete_goto -> .)
    MIENTRAS        reduce using rule 105 (r_complete_goto -> .)
    DESDE           reduce using rule 105 (r_complete_goto -> .)
    RETURN          reduce using rule 105 (r_complete_goto -> .)
    CTE_I           reduce using rule 105 (r_complete_goto -> .)
    CTE_F           reduce using rule 105 (r_complete_goto -> .)
    CTE_C           reduce using rule 105 (r_complete_goto -> .)
    CTE_S           reduce using rule 105 (r_complete_goto -> .)
    LPAREN          reduce using rule 105 (r_complete_goto -> .)
    RBRACKET        reduce using rule 105 (r_complete_goto -> .)

    r_complete_goto                shift and go to state 277

state 276

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int . r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (108) r_new_migajita -> .

    HACER           reduce using rule 108 (r_new_migajita -> .)

    r_new_migajita                 shift and go to state 278

state 277

    (87) IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .

    LEE             reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ESCRIBE         reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    ID              reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    SI              reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    MIENTRAS        reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    DESDE           reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    RETURN          reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_I           reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_F           reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_C           reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    CTE_S           reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    LPAREN          reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)
    RBRACKET        reduce using rule 87 (IF_ELSE_STMT -> SI LPAREN EXPRESION RPAREN r_new_gotof ENTONCES BLOQUE r_new_goto r_complete_gotof SINO BLOQUE r_complete_goto .)


state 278

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita . r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (110) r_compara_for -> .

    HACER           reduce using rule 110 (r_compara_for -> .)

    r_compara_for                  shift and go to state 279

state 279

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for . HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for

    HACER           shift and go to state 280


state 280

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER . r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (106) r_new_gotof -> .

    LBRACKET        reduce using rule 106 (r_new_gotof -> .)

    r_new_gotof                    shift and go to state 281

state 281

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof . BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for
    (48) BLOQUE -> . LBRACKET OPCION_BLOQUE RBRACKET

    LBRACKET        shift and go to state 112

    BLOQUE                         shift and go to state 282

state 282

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE . r_update_for r_new_goto r_complete_gotof r_clear_for
    (111) r_update_for -> .

    LEE             reduce using rule 111 (r_update_for -> .)
    ESCRIBE         reduce using rule 111 (r_update_for -> .)
    ID              reduce using rule 111 (r_update_for -> .)
    SI              reduce using rule 111 (r_update_for -> .)
    MIENTRAS        reduce using rule 111 (r_update_for -> .)
    DESDE           reduce using rule 111 (r_update_for -> .)
    RETURN          reduce using rule 111 (r_update_for -> .)
    CTE_I           reduce using rule 111 (r_update_for -> .)
    CTE_F           reduce using rule 111 (r_update_for -> .)
    CTE_C           reduce using rule 111 (r_update_for -> .)
    CTE_S           reduce using rule 111 (r_update_for -> .)
    LPAREN          reduce using rule 111 (r_update_for -> .)
    RBRACKET        reduce using rule 111 (r_update_for -> .)

    r_update_for                   shift and go to state 283

state 283

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for . r_new_goto r_complete_gotof r_clear_for
    (104) r_new_goto -> .

    LEE             reduce using rule 104 (r_new_goto -> .)
    ESCRIBE         reduce using rule 104 (r_new_goto -> .)
    ID              reduce using rule 104 (r_new_goto -> .)
    SI              reduce using rule 104 (r_new_goto -> .)
    MIENTRAS        reduce using rule 104 (r_new_goto -> .)
    DESDE           reduce using rule 104 (r_new_goto -> .)
    RETURN          reduce using rule 104 (r_new_goto -> .)
    CTE_I           reduce using rule 104 (r_new_goto -> .)
    CTE_F           reduce using rule 104 (r_new_goto -> .)
    CTE_C           reduce using rule 104 (r_new_goto -> .)
    CTE_S           reduce using rule 104 (r_new_goto -> .)
    LPAREN          reduce using rule 104 (r_new_goto -> .)
    RBRACKET        reduce using rule 104 (r_new_goto -> .)

    r_new_goto                     shift and go to state 284

state 284

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto . r_complete_gotof r_clear_for
    (107) r_complete_gotof -> .

    LEE             reduce using rule 107 (r_complete_gotof -> .)
    ESCRIBE         reduce using rule 107 (r_complete_gotof -> .)
    ID              reduce using rule 107 (r_complete_gotof -> .)
    SI              reduce using rule 107 (r_complete_gotof -> .)
    MIENTRAS        reduce using rule 107 (r_complete_gotof -> .)
    DESDE           reduce using rule 107 (r_complete_gotof -> .)
    RETURN          reduce using rule 107 (r_complete_gotof -> .)
    CTE_I           reduce using rule 107 (r_complete_gotof -> .)
    CTE_F           reduce using rule 107 (r_complete_gotof -> .)
    CTE_C           reduce using rule 107 (r_complete_gotof -> .)
    CTE_S           reduce using rule 107 (r_complete_gotof -> .)
    LPAREN          reduce using rule 107 (r_complete_gotof -> .)
    RBRACKET        reduce using rule 107 (r_complete_gotof -> .)

    r_complete_gotof               shift and go to state 285

state 285

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof . r_clear_for
    (112) r_clear_for -> .

    LEE             reduce using rule 112 (r_clear_for -> .)
    ESCRIBE         reduce using rule 112 (r_clear_for -> .)
    ID              reduce using rule 112 (r_clear_for -> .)
    SI              reduce using rule 112 (r_clear_for -> .)
    MIENTRAS        reduce using rule 112 (r_clear_for -> .)
    DESDE           reduce using rule 112 (r_clear_for -> .)
    RETURN          reduce using rule 112 (r_clear_for -> .)
    CTE_I           reduce using rule 112 (r_clear_for -> .)
    CTE_F           reduce using rule 112 (r_clear_for -> .)
    CTE_C           reduce using rule 112 (r_clear_for -> .)
    CTE_S           reduce using rule 112 (r_clear_for -> .)
    LPAREN          reduce using rule 112 (r_clear_for -> .)
    RBRACKET        reduce using rule 112 (r_clear_for -> .)

    r_clear_for                    shift and go to state 286

state 286

    (73) DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .

    LEE             reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    ESCRIBE         reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    ID              reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    SI              reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    MIENTRAS        reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    DESDE           reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    RETURN          reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_I           reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_F           reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_C           reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    CTE_S           reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    LPAREN          reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)
    RBRACKET        reduce using rule 73 (DESDE_CICLO -> DESDE ID r_new_id_for EQ r_new_operator CTE_I r_new_c_int r_new_equal HASTA CTE_I r_new_c_int r_new_migajita r_compara_for HACER r_new_gotof BLOQUE r_update_for r_new_goto r_complete_gotof r_clear_for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI_COLON in state 141 resolved as shift
